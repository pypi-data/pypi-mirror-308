"""Test validator."""

import json
import unittest
from aind_metadata_validator.metadata_validator import validate_metadata
from aind_metadata_validator.utils import MetadataState


class ValidatorTest(unittest.TestCase):
    """Validator tests."""

    def setUp(self):
        """Set up the tests"""
        with open("./tests/resources/metadata.json") as f:
            self.data = json.load(f)

    def test_validator(self):
        """Test the main validator"""
        results = validate_metadata(self.data)

        self.assertEqual(
            results,
            {
                "metadata": MetadataState.PRESENT,
                "subject": MetadataState.PRESENT,
                "data_description": MetadataState.PRESENT,
                "procedures": MetadataState.VALID,
                "session": MetadataState.PRESENT,
                "rig": MetadataState.PRESENT,
                "processing": MetadataState.PRESENT,
                "acquisition": MetadataState.EXCLUDED,
                "instrument": MetadataState.EXCLUDED,
                "quality_control": MetadataState.VALID,
                "subject_background_strain": MetadataState.VALID,
                "subject_date_of_birth": MetadataState.PRESENT,
                "subject_genotype": MetadataState.VALID,
                "subject_housing": MetadataState.VALID,
                "subject_notes": MetadataState.VALID,
                "subject_restrictions": MetadataState.VALID,
                "subject_rrid": MetadataState.VALID,
                "subject_sex": MetadataState.VALID,
                "subject_source": MetadataState.MISSING,
                "subject_species": MetadataState.PRESENT,
                "subject_subject_id": MetadataState.VALID,
                "subject_wellness_reports": MetadataState.PRESENT,
                "data_description_data_level": MetadataState.PRESENT,
                "data_description_data_summary": MetadataState.VALID,
                "data_description_funding_source": MetadataState.PRESENT,
                "data_description_group": MetadataState.VALID,
                "data_description_institution": MetadataState.VALID,
                "data_description_investigators": MetadataState.VALID,
                "data_description_modality": MetadataState.VALID,
                "data_description_name": MetadataState.VALID,
                "data_description_project_name": MetadataState.VALID,
                "data_description_related_data": MetadataState.VALID,
                "data_description_restrictions": MetadataState.VALID,
                "data_description_subject_id": MetadataState.VALID,
                "procedures_notes": MetadataState.VALID,
                "procedures_specimen_procedures": MetadataState.VALID,
                "procedures_subject_id": MetadataState.VALID,
                "procedures_subject_procedures": MetadataState.VALID,
                "session_active_mouse_platform": MetadataState.MISSING,
                "session_animal_weight_post": MetadataState.VALID,
                "session_animal_weight_prior": MetadataState.VALID,
                "session_calibrations": MetadataState.VALID,
                "session_data_streams": MetadataState.PRESENT,
                "session_experimenter_full_name": MetadataState.VALID,
                "session_iacuc_protocol": MetadataState.VALID,
                "session_maintenance": MetadataState.VALID,
                "session_mouse_platform_name": MetadataState.VALID,
                "session_notes": MetadataState.VALID,
                "session_protocol_id": MetadataState.VALID,
                "session_reward_consumed_total": MetadataState.PRESENT,
                "session_reward_consumed_unit": MetadataState.VALID,
                "session_reward_delivery": MetadataState.VALID,
                "session_rig_id": MetadataState.VALID,
                "session_session_end_time": MetadataState.PRESENT,
                "session_session_start_time": MetadataState.PRESENT,
                "session_session_type": MetadataState.VALID,
                "session_stimulus_epochs": MetadataState.VALID,
                "session_subject_id": MetadataState.VALID,
                "session_weight_unit": MetadataState.VALID,
                "rig_additional_devices": MetadataState.VALID,
                "rig_calibrations": MetadataState.VALID,
                "rig_cameras": MetadataState.PRESENT,
                "rig_ccf_coordinate_transform": MetadataState.VALID,
                "rig_daqs": MetadataState.VALID,
                "rig_detectors": MetadataState.PRESENT,
                "rig_digital_micromirror_devices": MetadataState.VALID,
                "rig_enclosure": MetadataState.VALID,
                "rig_ephys_assemblies": MetadataState.VALID,
                "rig_fiber_assemblies": MetadataState.VALID,
                "rig_filters": MetadataState.VALID,
                "rig_laser_assemblies": MetadataState.VALID,
                "rig_lenses": MetadataState.VALID,
                "rig_light_sources": MetadataState.VALID,
                "rig_modalities": MetadataState.PRESENT,
                "rig_modification_date": MetadataState.PRESENT,
                "rig_mouse_platform": MetadataState.VALID,
                "rig_notes": MetadataState.VALID,
                "rig_objectives": MetadataState.VALID,
                "rig_origin": MetadataState.VALID,
                "rig_patch_cords": MetadataState.VALID,
                "rig_pockels_cells": MetadataState.VALID,
                "rig_polygonal_scanners": MetadataState.VALID,
                "rig_rig_axes": MetadataState.PRESENT,
                "rig_rig_id": MetadataState.VALID,
                "rig_stick_microscopes": MetadataState.VALID,
                "rig_stimulus_devices": MetadataState.VALID,
                "acquisition_protocol_id": MetadataState.EXCLUDED,
                "acquisition_experimenter_full_name": MetadataState.EXCLUDED,
                "acquisition_specimen_id": MetadataState.EXCLUDED,
                "acquisition_subject_id": MetadataState.EXCLUDED,
                "acquisition_instrument_id": MetadataState.EXCLUDED,
                "acquisition_calibrations": MetadataState.EXCLUDED,
                "acquisition_maintenance": MetadataState.EXCLUDED,
                "acquisition_session_start_time": MetadataState.EXCLUDED,
                "acquisition_session_end_time": MetadataState.EXCLUDED,
                "acquisition_session_type": MetadataState.EXCLUDED,
                "acquisition_tiles": MetadataState.EXCLUDED,
                "acquisition_axes": MetadataState.EXCLUDED,
                "acquisition_chamber_immersion": MetadataState.EXCLUDED,
                "acquisition_sample_immersion": MetadataState.EXCLUDED,
                "acquisition_active_objectives": MetadataState.EXCLUDED,
                "acquisition_local_storage_directory": MetadataState.EXCLUDED,
                "acquisition_external_storage_directory": MetadataState.EXCLUDED,
                "acquisition_processing_steps": MetadataState.EXCLUDED,
                "acquisition_software": MetadataState.EXCLUDED,
                "acquisition_notes": MetadataState.EXCLUDED,
                "instrument_instrument_id": MetadataState.EXCLUDED,
                "instrument_modification_date": MetadataState.EXCLUDED,
                "instrument_instrument_type": MetadataState.EXCLUDED,
                "instrument_manufacturer": MetadataState.EXCLUDED,
                "instrument_temperature_control": MetadataState.EXCLUDED,
                "instrument_humidity_control": MetadataState.EXCLUDED,
                "instrument_optical_tables": MetadataState.EXCLUDED,
                "instrument_enclosure": MetadataState.EXCLUDED,
                "instrument_objectives": MetadataState.EXCLUDED,
                "instrument_detectors": MetadataState.EXCLUDED,
                "instrument_light_sources": MetadataState.EXCLUDED,
                "instrument_lenses": MetadataState.EXCLUDED,
                "instrument_fluorescence_filters": MetadataState.EXCLUDED,
                "instrument_motorized_stages": MetadataState.EXCLUDED,
                "instrument_scanning_stages": MetadataState.EXCLUDED,
                "instrument_additional_devices": MetadataState.EXCLUDED,
                "instrument_calibration_date": MetadataState.EXCLUDED,
                "instrument_calibration_data": MetadataState.EXCLUDED,
                "instrument_com_ports": MetadataState.EXCLUDED,
                "instrument_daqs": MetadataState.EXCLUDED,
                "instrument_notes": MetadataState.EXCLUDED,
                "quality_control_evaluations": MetadataState.VALID,
                "quality_control_notes": MetadataState.VALID,
            },
        )


if __name__ == "__main__":
    unittest.main()
