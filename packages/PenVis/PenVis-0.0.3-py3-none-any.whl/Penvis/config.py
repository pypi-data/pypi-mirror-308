# config.py
import pymysql
import logging

# 日志记录配置
LOGGING_CONFIG = {
    'level': logging.INFO
}

class Config:
    API_URL = "https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/ernie-4.0-turbo-8k"
    TOKEN_URL = "https://aip.baidubce.com/oauth/2.0/token"
    CLIENT_ID = "uFVD6G313UrqawNHbCXuK6jj"
    CLIENT_SECRET = "SSzm3rixotMM5iVdaUcqC8ei4fJmzMRq"

db_config = {
    'host': '116.204.70.1',
    'port': 3306,
    'user': 'root',
    'password': 'VisPen1109*_hz_qwer',
    'database': 'pen_vis_test',
    'charset': 'utf8mb4',
    'cursorclass': pymysql.cursors.DictCursor
}




# 初始任务ID
TASK_ID = 222


# 动态设置的功能池描述
FUNCTION_POOL = "数据清洗、数据转换、数据合并与连接、数据聚合与分组、数据排序与筛选、数据去重、数据透视表、数据归一化与标准化、数据可视化"

# 动态提示词前缀（功能规划）
DYNAMIC_PROMPT_PREFIX_FUNCTION_PLANNING = f"""
作为功能规划领域的专家，您的首要职责是深入理解用户需求，并从我们广泛而全面的功能库中查看是否有能够满足用户需求的功能，若有能更满足用户需求的功能，则将能够满足用户需求的功能池清单挑出来。
注意事项：
功能选择局限于功能库。请尽量遵循“少即是多”的原则。
避免强行匹配功能。
在满足用户需求的前提下，优先考虑使用最少的功能数量。每个增加的功能都应确保其对解决用户问题有直接且显著的贡献。这里举一个反例。
反例展示：
用户需求：请为我执行关键词提取任务。
功能池清单（错误示例）：
文本分词功能
停用词去除功能
关键词提取功能
正确的功能池应仅包含：
关键词提取功能
示例功能如下：
功能池清单：文本分词功能，去除停用词功能
输出结果要求如下：
若存在匹配的功能，则仅呈现功能池清单，无其他内容；若不存在匹配功能，则仅输出“无适配方案”，无其他内容。
功能池如下：{FUNCTION_POOL}。
用户需求的意图理解分析如下：
"""

# 提示词前缀（功能编排）
ORCHESTRATION_PROMPT_PREFIX = f"""
作为任务编排专家，你的任务是根据我提供的用户需求和上传的功能池，参考示例编排方案的格式，精心设计一份高效且合理的编排方案，旨在实现复杂任务的自动化处理。编排方案包括具体节点和编排分析。本编排方案方案采用单向传播式的工作流架构，确保任务执行的高效性与准确性。
工作流架构特点
单向传播：每个节点的输出直接作为下一个节点的输入，形成无缝衔接的工作流。
数据类型一致性：严格保证相邻节点间数据类型的匹配，避免数据转换错误或丢失。
高效执行顺序：基于功能间的逻辑依赖关系，精心编排节点执行顺序，提升工作流整体效率。
注意事项
数据类型匹配：已严格验证并确保所有相邻节点间的数据类型完全匹配，以消除数据转换过程中的潜在问题。
执行顺序优化：根据功能间的逻辑依赖，对节点执行顺序进行了精心调整，以最大化工作流的整体效率。
编排分析请用一个自然段进行表示。节点后面只出现功能的名称。
编排节点的范围仅包括功能池的所有内容。请不要额外增添其他功能
示例编排方案如下：
节点一：数据收集功能
节点二：数据分析功能
节点三：数据预测功能
编排分析：本流程首先会从指定来源细致地收集原始文章数据，随后会严谨地进行数据的清洗、格式化与标准化处理，以确保数据的品质卓越。在此基础之上，我们会深入分析数据，精心识别出文章中需要润色的部分。紧接着，我们将依托丰富的历史数据与先进的模型，为您提供智能化的润色建议，甚至实现自动润色。最终，我们将为您自动生成一份详尽的报告，其中既包含了我们专业的改进建议，也呈现了经过精心润色后的文章成果。
结果仅输出具体节点、编排分析，无其他内容。
用户需求的意图理解分析如下：
功能池如下：{FUNCTION_POOL}。
"""

# 数据格式转换的提示词前缀
CONVERT_PROMPT_PREFIX = """
请将参考下方示例格式将输入的内容转换为数组的格式。
示例数据：
节点一：text_text
节点二：text_image
节点三：image_text
示例结果如下：
"{"id": "node1", "function": "text_text"}",
"{"id": "node2", "function": "text_image"}",
"{"id": "node3", "function": "image_text"}"
结果仅输出数组，无其他内容。
待转换的内容如下：
"""

# 功能池知识库
FUNCTION_POOL_KNOWLEDGE = """
数据清洗：识别和纠正数据中的错误、异常或缺失值，确保数据质量。
数据转换：将数据从一种格式或类型转换为另一种，以便进行后续分析。
数据合并与连接：将多个数据集根据某个或多个键合并成一个数据集。
数据聚合与分组：按照某个或多个列对数据进行分组，并对每组数据进行聚合计算。
数据排序与筛选：根据特定条件对数据进行排序或筛选，以获取所需的数据子集。
数据去重：识别并删除数据集中的重复记录，保持数据的唯一性。
数据透视表：根据数据集中的特定列生成透视表，用于数据汇总和分析。
数据归一化与标准化：将数据缩放到特定范围或分布，以便进行机器学习或统计分析。
时间序列分析：对时间序列数据进行处理和分析，如时间戳转换、时间序列的平滑、趋势分析等。
数据可视化：将数据以图表形式展示，以便更直观地理解和分析数据。
"""