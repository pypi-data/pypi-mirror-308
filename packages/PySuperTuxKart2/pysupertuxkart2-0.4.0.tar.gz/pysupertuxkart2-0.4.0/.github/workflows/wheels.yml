name: Wheels

on:
  release:
    types: [created]

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  generate-wheels-matrix:
    name: Generate wheels matrix
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v3
      - name: Install cibuildwheel
        run: pipx install cibuildwheel==2.20.0
      # Use macos-13 
      - id: set-matrix
        run: |
          MATRIX=$(
            for p in "macos universal2 macos-13" "linux x86_64 ubuntu-latest" "windows AMD64 windows-latest"; do set -- $p; cibuildwheel --print-build-identifiers --platform $1 --arch $2 | egrep -v "(^pp|musl)" | jq -nRc '{"only": inputs, "os": "'$3'", "arch": "'$2'" }'; done | jq -sc
          )
          echo "include=$MATRIX" >> $GITHUB_OUTPUT          

  build_wheels:
    name: Build ${{ matrix.only }}
    needs: generate-wheels-matrix
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-wheels-matrix.outputs.include) }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
  
    - uses: pypa/cibuildwheel@v2.20
      with:
        only: ${{ matrix.only }}
      env:
        # Download dependencies for manylinux (CentOS 7)
        CIBW_BEFORE_ALL_LINUX: |
          yum -y install cmake bluez-libs-devel openssl-devel libcurl-devel freetype-devel harfbuzz-devel libjpeg-turbo-devel libogg-devel libpng-devel libvorbis-devel openal-soft-devel SDL2-devel

        # Download dependencies for MacOS
        # ... and try to get rid of Mono
        CIBW_BEFORE_ALL_MACOS: |
          curl  -L  "https://github.com/supertuxkart/dependencies/releases/download/1.4/dependencies-macosx.tar.xz"  | tar -xv
          sudo rm -rf /Library/Frameworks/Mono.framework
        
          # ... and use the path dependency libraries when delocating
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
          DYLD_LIBRARY_PATH=$(pwd)/dependencies-macosx/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}
        
        # Download dependencies for windows
        CIBW_BEFORE_ALL_WINDOWS: |
          curl.exe -L -o dependencies-win-x86_64.zip https://github.com/supertuxkart/dependencies/releases/download/1.4/dependencies-win-x86_64.zip && unzip dependencies-win-x86_64.zip 

      
    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi_password }}