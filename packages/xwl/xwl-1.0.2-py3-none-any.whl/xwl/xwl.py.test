#!/usr/bin/env python3
# coding: utf-8

# Copyright (c) 2018 Trevor Taylor
# 
# Permission to use, copy, modify, and/or distribute this software for
# any purpose with or without fee is hereby granted, provided that all
# copyright notices and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
from sys import path
from os.path import dirname
if path[0]==dirname(__file__): path.pop(0)

import xwl

from xju.assert_ import Assert

Assert(xwl.header('fred','v').headers)==[('fred','v')]
Assert(str(xwl.Response(b'xxx')))=="content 'xxx', headers [], cookies {}"

try:
    xwl.Response(b'xxx')+7
except Exception as e:
    Assert(str(e)).startswith("failed to add 7 to Response content 'xxx', headers [], cookies {} because")
else:
    assert False
    pass

try:
    7+xwl.Response(b'xxx')
except Exception as e:
    Assert(str(e)).startswith("failed to add Response content 'xxx', headers [], cookies {} to 7 because")
else:
    assert False
    pass

                
try:
    xwl.validateCookieName('\nfred')
except Exception as e:
    Assert(str(e)).startswith('failed to validate RFC6265 cookie name')
else:
    assert False
    pass

try:
    xwl.validateCookieValue('"jock')
except Exception as e:
    Assert(str(e)).startswith('failed to validate RFC6265 cookie-value')
else:
    assert False
    pass

try:
    xwl.validateCookieValue('"jock'+chr(0x7f)+'"')
except Exception as e:
    Assert(str(e)).startswith('failed to validate RFC6265 cookie-value')
else:
    assert False
    pass

try:
    xwl.validateCookiePath('fred;')
except Exception as e:
    Assert(str(e)).startswith('failed to validate RFC6265 cookie Path value')
else:
    assert False
    pass

try:
    xwl.validateCookiePath(chr(31))
except Exception as e:
    Assert(str(e)).startswith('failed to validate RFC6265 cookie Path value')
else:
    assert False
    pass
    
