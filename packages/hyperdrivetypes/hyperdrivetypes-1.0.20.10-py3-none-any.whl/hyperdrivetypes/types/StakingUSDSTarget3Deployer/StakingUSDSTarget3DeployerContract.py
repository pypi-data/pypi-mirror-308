"""A web3.py Contract class for the StakingUSDSTarget3Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract
from ..StakingUSDSConversions import StakingUSDSConversionsContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

stakingusdstarget3deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {
                    "name": "_extraData",
                    "type": "bytes",
                    "internalType": "bytes",
                },
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class StakingUSDSTarget3DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the StakingUSDSTarget3Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class StakingUSDSTarget3DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = StakingUSDSTarget3DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class StakingUSDSTarget3DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, _extraData: bytes, _salt: bytes) -> StakingUSDSTarget3DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> StakingUSDSTarget3DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            StakingUSDSTarget3DeployerDeployTargetContractFunction0._type_signature: StakingUSDSTarget3DeployerDeployTargetContractFunction0.factory(
                "StakingUSDSTarget3DeployerDeployTargetContractFunction0",
                **kwargs,
            ),
        }
        return out


class StakingUSDSTarget3DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the StakingUSDSTarget3Deployer contract."""

    deployTarget: StakingUSDSTarget3DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            StakingUSDSTarget3DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class StakingUSDSTarget3DeployerContract(Contract):
    """A web3.py Contract class for the StakingUSDSTarget3Deployer contract."""

    abi: ABI = stakingusdstarget3deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063bf3aa15690610476908490600401613991565b602060405180830381865af4158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b791906139a0565b91506104ca6104c58c6117c5565b6117f3565b6002546001600160801b03808216835260048054600f0b6020850152600160801b9092041660408084019190915251635f9d50ab60e11b815273__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9163bf3aa1569161052b91859101613991565b602060405180830381865af4158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c91906139a0565b92508183101561058f5760405163184d952160e11b815260040160405180910390fd5b6105a5848361059e8187613900565b9190611819565b9c507f00000000000000000000000000000000000000000000000000000000000000008d10156105e85760405163211ddda360e11b815260040160405180910390fd5b508f6105f4868e611837565b10156106135760405163c972651760e01b815260040160405180910390fd5b61063160008e600001602081019061062b91906139ce565b8e61184c565b61063a896118f4565b95508561065a57604051638bdf918d60e01b815260040160405180910390fd5b600088905060008d9050368f905060008c9050600061071d600260000160009054906101000a90046001600160801b03166001600160801b03166002800160009054906101000a9004600f0b600f0b600260000160109054906101000a90046001600160801b03166001600160801b031685600260010160009054906101000a90046001600160801b03166001600160801b03166102627f00000000000000000000000000000000000000000000000000000000000000008c61025d91906138ed565b9b5090508a158061073757506107348c6000611901565b81125b1561075557604051630552b01360e31b815260040160405180910390fd5b6000881561076d5761076887848b611819565b610770565b60005b905061077f60208501856139ce565b6001600160a01b03167fdcc4a01cea4510bd52201cebc8cd2d47d60429b35d68329abc591a70aa2efabf868d866107bc60408a0160208b016139f9565b866107ca60408c018c613a16565b6040516107dd9796959493929190613a5d565b60405180910390a250505050505050505050505050505050506100786001600055565b600061080a610bb9565b610812610be3565b61081b82610c04565b60065460ff161561083f57604051637983c05160e01b815260040160405180910390fd5b60008061084c8685610c89565b909250905061087c7f00000000000000000000000000000000000000000000000000000000000000006002613ab1565b82101561089c57604051632afb507160e21b815260040160405180910390fd5b6006805460ff1916600117905560405163594f0e8f60e11b815260048101839052602481018290527f00000000000000000000000000000000000000000000000000000000000000006044820152606481018690527f000000000000000000000000000000000000000000000000000000000000000060848201527f000000000000000000000000000000000000000000000000000000000000000060a482015260027f000000000000000000000000000000000000000000000000000000000000000002830393506000908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401612425929190613c12565b6040805180830381865af4158015612441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124659190613c88565b91509150612483612475826117c5565b61247e90613cac565b612a29565b925082612499576000965050505050505061144c565b6124a28261193c565b600780546000906124bd9084906001600160801b0316613b16565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506124ea8161193c565b6007805460109061250c908490600160801b90046001600160801b0316613b16565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6125698761168b565b6040518263ffffffff1660e01b81526004016125859190613991565b6040805180830381865af41580156125a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c59190613cc8565b91509150806125db575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b031691612641916138ed565b61264b9190613900565b90508060000361266357506000958695509350505050565b600080871161267357600061267e565b61267e848884611819565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156126b2576126b2613cf8565b6040519080825280601f01601f1916602001820160405280156126dc576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156126fd578692505b828152826000602083013e9093509150505b9550959350505050565b600080600083612728866117c5565b6127329190613b36565b9050600081121561274a576000809250925050610d57565b946001945092505050565b600080600061276788888888886130ab565b90506000612792670de0b6b3a76400006127818888612e61565b61278b91906138ed565b8390611837565b9050670de0b6b3a764000081106127c6576127bf6127b8670de0b6b3a764000089611837565b8290612bda565b90506127de565b6127db6127b8670de0b6b3a764000089612e61565b90505b6127e88186611837565b9050888110156128005760008093509350505061270f565b97909703976001975095505050505050565b600080600061282489898888886130da565b905061283e866119b36128378a8d6138ed565b87906120d7565b985061284b858a86611819565b985088811015612862576000809250925050611654565b888103670de0b6b3a76400008110612890576128896127b8670de0b6b3a764000089612e61565b90506128a8565b6128a56127b8670de0b6b3a764000089611837565b90505b808910156128be57600080935093505050611654565b90970398600198509650505050505050565b60008060008060006128e38987896130ff565b90925090506128f28289613900565b9750600061290182888a611819565b905061290d818b613900565b9a989950979650505050505050565b60008061292a846000613185565b612935846000613185565b61293f9190613b36565b9050600081131561295b5761295481866138ed565b945061297a565b600081121561297a5761296d81613cac565b6129779086613900565b94505b50929392505050565b60006100918383670de0b6b3a76400005b60008260001904841183021582026129ab57600080fd5b50910281810615159190040190565b600080670de0b6b3a76400006129ce610d5e565b6129d89190613ab1565b90508083116129e85760006129f2565b6129f28184613900565b915061009161278b670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613ab1565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b069190613d0e565b935093509350935080612b225750600098975050505050505050565b868414612b5357612b328461193c565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612b8457612b6383611966565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612bb257612b948261193c565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600081600003612bf35750670de0b6b3a764000061144c565b82600003612c035750600061144c565b6000612c0e836117c5565b90506000612c23612c1e866117c5565b61319b565b9050818102612c3a670de0b6b3a764000082613d4f565b9050612c45816133c1565b9695505050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052612cb69186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050613556565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052612d0d84826135c3565b612cb6576040516001600160a01b03848116602483015260006044830152612d4291869182169063095ea7b390606401612c84565b612cb68482613556565b60405163b88fed9f60e01b81526004810182905260009073__$27b302b103d10b9a6b3339aabd1a10a718$__9063b88fed9f90602401602060405180830381865af4158015612d9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c91906139a0565b600082600003612dd4575084610078565b8115612e2757612e05612de784876138ed565b612df185876120d7565b612dfb888a6120d7565b61168591906138ed565b90506000612e138588611c62565b905080821015612e21578091505b50610078565b828503612e3657506000610078565b610075612e438487613900565b612e4d8587612983565b612e57888a6120d7565b6116859190613900565b600061009183670de0b6b3a764000084612994565b600060016001607f1b038211156117ef5760405163a5353be560e01b815260040160405180910390fd5b6003546000908190612ebb906001600160801b031684612e61565b9050612ee77f0000000000000000000000000000000000000000000000000000000000000000826138ed565b6002546001600160801b03161115611910576002547f000000000000000000000000000000000000000000000000000000000000000090612f329083906001600160801b0316613900565b6100919190613900565b612f446137bf565b600080612f508461168b565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612f8b9190613991565b6040805180830381865af4158015612fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fcb9190613cc8565b9350905082612fe0575060009150611ada9050565b60006130026116168461016001518561014001516120d790919063ffffffff16565b61302261161685610120015186610100015161298390919063ffffffff16565b61302c9190613b36565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b60006130b78585612bda565b6130d06130c8866119b3868b6120d7565b859085611819565b61007591906138ed565b60006130e68585612bda565b6130d06130f7866119b3868b612983565b859085612994565b60008061314f8561314985817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a764000061313f818c612e61565b6131499190613900565b90612983565b915061317b827f00000000000000000000000000000000000000000000000000000000000000006120d7565b9050935093915050565b60008183136131945781610091565b5090919050565b60008082136131bd5760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906132409084901c6117c5565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e1982136133dc57506000919050565b680755bf798b4a1bf1e58212613405576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b018181059550929350909190612c4574029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c6117c5565b600061356b6001600160a01b03841683613666565b9050805160001415801561359057508080602001905181019061358e9190613d7d565b155b156135be57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516135e09190613d9a565b6000604051808303816000865af19150503d806000811461361d576040519150601f19603f3d011682016040523d82523d6000602084013e613622565b606091505b509150915081801561364c57508051158061364c57508080602001905181019061364c9190613d7d565b80156100785750505050506001600160a01b03163b151590565b60606100918383600084600080856001600160a01b0316848660405161368c9190613d9a565b60006040518083038185875af1925050503d80600081146136c9576040519150601f19603f3d011682016040523d82523d6000602084013e6136ce565b606091505b5091509150612c458683836060826136ee576136e982613735565b610091565b815115801561370557506001600160a01b0384163b155b1561372e57604051639996b31560e01b81526001600160a01b03851660048201526024016135b5565b5080610091565b8051156137455780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061012001604052806137d361375e565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006060828403121561191057600080fd5b600080600080600060a0868803121561383b57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff81111561386e57600080fd5b61387a88828901613811565b9150509295509295909350565b60008060006060848603121561389c57600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156138c157600080fd5b6138cd86828701613811565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561144c5761144c6138d7565b8181038181111561144c5761144c6138d7565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b610180810161144c8284613913565b6000602082840312156139b257600080fd5b5051919050565b6001600160a01b0381168114610c3a57600080fd5b6000602082840312156139e057600080fd5b8135610091816139b9565b8015158114610c3a57600080fd5b600060208284031215613a0b57600080fd5b8135610091816139eb565b6000808335601e19843603018112613a2d57600080fd5b83018035915067ffffffffffffffff821115613a4857600080fd5b602001915036819003821315610d5757600080fd5b878152866020820152856040820152841515606082015283608082015260c060a08201528160c0820152818360e0830137600081830160e090810191909152601f909201601f191601019695505050505050565b808202811582820484141761144c5761144c6138d7565b600080600060608486031215613add57600080fd5b8351925060208401519150604084015190509250925092565b6001600160701b03818116838216019080821115611935576119356138d7565b6001600160801b03818116838216019080821115611935576119356138d7565b8181036000831280158383131683831282161715611935576119356138d7565b600060208284031215613b6857600080fd5b8151610091816139b9565b8082018281126000831280158216821582161715613b9357613b936138d7565b505092915050565b634e487b7160e01b600052601260045260246000fd5b600082613bc057613bc0613b9b565b500690565b6001600160801b03828116828216039080821115611935576119356138d7565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561144c5761144c6138d7565b60006102a082019050613c26828551613913565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613c9b57600080fd5b505080516020909101519092909150565b6000600160ff1b8201613cc157613cc16138d7565b5060000390565b60008060408385031215613cdb57600080fd5b825191506020830151613ced816139eb565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613d2457600080fd5b8451935060208501519250604085015191506060850151613d44816139eb565b939692955090935050565b600082613d5e57613d5e613b9b565b600160ff1b821460001984141615613d7857613d786138d7565b500590565b600060208284031215613d8f57600080fd5b8151610091816139eb565b6000825160005b81811015613dbb5760208186018101518583015201613da1565b50600092019182525091905056fea2646970667358221220c6a45fcc6e5c0c3898faa1542f9bfbf7f3cddb15a47ca6b3640a16ea75422a1364736f6c63430008160033a2646970667358221220505d1e6f9bcc6e2f03ea98edf7c5d09183f73b5cef9f03ac6cc8dfc0ecc254f664736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = StakingUSDSTarget3DeployerContractFunctions(stakingusdstarget3deployer_abi, self.w3, address)  # type: ignore

    functions: StakingUSDSTarget3DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        StakingUSDSConversions: StakingUSDSConversionsContract

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "StakingUSDSConversions": "__$27b302b103d10b9a6b3339aabd1a10a718$__",
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup[
                    "StakingUSDSConversions"
                ],
                link_references.StakingUSDSConversions.address[2:].lower(),
            )

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = StakingUSDSTarget3DeployerContractFunctions(
            stakingusdstarget3deployer_abi, w3, None
        )

        return contract
