"""A web3.py Contract class for the AaveTarget2Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

aavetarget2deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class AaveTarget2DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the AaveTarget2Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class AaveTarget2DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = AaveTarget2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class AaveTarget2DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> AaveTarget2DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> AaveTarget2DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            AaveTarget2DeployerDeployTargetContractFunction0._type_signature: AaveTarget2DeployerDeployTargetContractFunction0.factory(
                "AaveTarget2DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class AaveTarget2DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the AaveTarget2Deployer contract."""

    deployTarget: AaveTarget2DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            AaveTarget2DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class AaveTarget2DeployerContract(Contract):
    """A web3.py Contract class for the AaveTarget2Deployer contract."""

    abi: ABI = aavetarget2deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401612150929190613e4c565b6040805180830381865af415801561216c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121909190613ec2565b915091506121ae6121a082611c29565b6121a990613ee6565b612d5e565b9250826121c457600096505050505050506106ba565b6121cd82611973565b600780546000906121e89084906001600160801b0316613c9e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061221581611973565b60078054601090612237908490600160801b90046001600160801b0316613c9e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61229487612ef6565b6040518263ffffffff1660e01b81526004016122b09190613f02565b6040805180830381865af41580156122cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f09190613f11565b9150915080612306575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161236c91613b02565b6123769190613c23565b90508060000361238e57506000958695509350505050565b600080871161239e5760006123a9565b6123a98488846118fe565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156123dd576123dd613f41565b6040519080825280601f01601f191660200182016040528015612407576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612428578692505b828152826000602083013e90999098509650505050505050565b600061246387878761245c88670de0b6b3a7640000613c23565b8787613030565b979650505050505050565b60006115296124af61248884670de0b6b3a7640000613c23565b611488670de0b6b3a764000061249e818a61149f565b6124a89190613c23565b87906126f4565b6124c190670de0b6b3a7640000613b02565b611ddf84670de0b6b3a7640000613c23565b60008061250a856124e2611932565b6124ec9190613b02565b600254610ef2908790600160801b90046001600160801b0316613c23565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b6000806000806000612541898789613053565b90925090506125508289613c23565b9750600061255f82888a6118fe565b905061256b818b613c23565b9a989950979650505050505050565b60008260000361258b57508461196a565b81156125de576125bc61259e8487613b02565b6125a885876106a2565b6125b2888a6106a2565b611ddf9190613b02565b905060006125ca85886119a1565b9050808210156125d8578091505b5061196a565b8285036125ed5750600061196a565b6126186125fa8487613c23565b61260485876126f4565b61260e888a6106a2565b611ddf9190613c23565b9695505050505050565b600061264a600b6000612636600286611229565b815260200190815260200160002054611c29565b61265c600b6000612636600187611229565b6106ba9190613cbe565b60006126927f0000000000000000000000000000000000000000000000000000000000000000836126f4565b6003546126a891906001600160801b0316613b02565b6002546126be906001600160801b0316846106a2565b101592915050565b60006106ba826004612071565b60006124638787876126ed88670de0b6b3a7640000613c23565b87876130d3565b60006106b78383670de0b6b3a764000061284e565b600080808061275a87866127538b61148861272c8c670de0b6b3a7640000613c23565b7f0000000000000000000000000000000000000000000000000000000000000000906126f4565b919061284e565b9350612786847f00000000000000000000000000000000000000000000000000000000000000006106a2565b915060006127a761279f89670de0b6b3a7640000613c23565b8a908861284e565b90506127d3817f00000000000000000000000000000000000000000000000000000000000000006126f4565b93506127ff847f00000000000000000000000000000000000000000000000000000000000000006106a2565b6128099084613b02565b915050945094509450949050565b600081831161282657816106b7565b5090919050565b6000806128458461283f8a888a61284e565b9061149f565b9050611df28884865b600082600019048411830215820261286557600080fd5b50910281810615159190040190565b600061152961288385856130e4565b83906b033b2e3c9fd0803ce80000006118fe565b60006106b783670de0b6b3a7640000846118fe565b6000806128b98484613152565b9092509050806128cb576128cb612515565b5092915050565b6040516001600160a01b0384811660248301528381166044830152606482018390526118f89186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061318e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261298a84826131fb565b6118f8576040516001600160a01b038481166024830152600060448301526129bf91869182169063095ea7b390606401612907565b6118f8848261318e565b60006106ba7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008461329e565b600081600003612a2f5750670de0b6b3a76400006106ba565b82600003612a3f575060006106ba565b6000612a4a83611c29565b90506000612a5f612a5a86611c29565b6132c2565b9050818102612a76670de0b6b3a764000082613f57565b9050612618816134e8565b600060016001607f1b0382111561199d5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612ac9575060016001607f1b0382135b1561199d5760405163a5353be560e01b815260040160405180910390fd5b600080612af584600061367d565b612b0084600061367d565b612b0a9190613cbe565b90506000811315612b2657612b1f8186613b02565b9450612b45565b6000811215612b4557612b3881613ee6565b612b429086613c23565b94505b50929392505050565b6003546000908190612b69906001600160801b03168461149f565b9050612b957f000000000000000000000000000000000000000000000000000000000000000082613b02565b6002546001600160801b031611156119b0576002547f000000000000000000000000000000000000000000000000000000000000000090612be09083906001600160801b0316613c23565b61152c9190613c23565b612bf26139da565b600080612bfe84612ef6565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612c399190613f02565b6040805180830381865af4158015612c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c799190613f11565b9350905082612c8e57506000915061183e9050565b6000612cb5612cb08461016001518561014001516106a290919063ffffffff16565b611c29565b612cd5612cb08561012001518661010001516126f490919063ffffffff16565b612cdf9190613cbe565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e3b9190613f85565b935093509350935080612e575750600098975050505050505050565b868414612e8857612e6784611973565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612eb957612e9883612aab565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612ee757612ec982611973565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612efe613a2c565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e08301526003540482166101008201526005549091610120830191612ff6911661368c565b81526004546001600160801b03600160801b91829004811660208401526005546040909301926130289290041661368c565b905292915050565b600080613041888888888888613702565b909250905080611e0c57611e0c612515565b60008061309d8561148885817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613093818c61149f565b6114889190613c23565b91506130c9827f00000000000000000000000000000000000000000000000000000000000000006106a2565b9050935093915050565b6000806130418888888888886137ca565b60405163d15e005360e01b81526001600160a01b0383811660048301526000919083169063d15e005390602401602060405180830381865afa15801561312e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190613fbb565b60008060008361316186611c29565b61316b9190613cbe565b9050600081121561318357600080925092505061069b565b946001945092505050565b60006131a36001600160a01b0384168361388a565b905080516000141580156131c85750808060200190518101906131c69190613d5a565b155b156131f657604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516132189190613fd4565b6000604051808303816000865af19150503d8060008114613255576040519150601f19603f3d011682016040523d82523d6000602084013e61325a565b606091505b50915091508180156132845750805115806132845750808060200190518101906132849190613d5a565b801561196a5750505050506001600160a01b03163b151590565b60006115296b033b2e3c9fd0803ce80000006132ba86866130e4565b8491906118fe565b60008082136132e45760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906133679084901c611c29565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361350357506000919050565b680755bf798b4a1bf1e5821261352c576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b01818105955092935090919061261874029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611c29565b600081831361282657816106b7565b600080670de0b6b3a76400006136a06106c0565b6136aa9190613cfb565b90508083116136ba5760006136c4565b6136c48184613c23565b915061152c6136fb670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613cfb565b8390612897565b60008060006137148989888888613898565b905061372e866119646137278a8d613b02565b87906106a2565b985061373b858a866118fe565b9850888110156137525760008092509250506137bf565b888103670de0b6b3a7640000811061378757613780613779670de0b6b3a76400008961149f565b8290612a16565b905061379f565b61379c613779670de0b6b3a764000089612897565b90505b808910156137b5576000809350935050506137bf565b8803925060019150505b965096945050505050565b60008060006137dc8989888888613898565b90506137ec86611964898b613b02565b9750878110156138035760008092509250506137bf565b87810361381181868861284e565b9050670de0b6b3a7640000811061383e57613837613779670de0b6b3a76400008961149f565b9050613856565b613853613779670de0b6b3a764000089612897565b90505b613860818661149f565b9050808a1015613878576000809350935050506137bf565b90980398600198509650505050505050565b60606106b7838360006138c7565b60006138a48585612a16565b6138bd6138b586611964868b6126f4565b85908561284e565b6126189190613b02565b6060814710156138ec5760405163cd78605960e01b81523060048201526024016131ed565b600080856001600160a01b031684866040516139089190613fd4565b60006040518083038185875af1925050503d8060008114613945576040519150601f19603f3d011682016040523d82523d6000602084013e61394a565b606091505b509150915061261886838360608261396a57613965826139b1565b61152c565b815115801561398157506001600160a01b0384163b155b156139aa57604051639996b31560e01b81526001600160a01b03851660048201526024016131ed565b508061152c565b8051156139c15780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518061012001604052806139ee613a2c565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008060008060808587031215613aa357600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115613acf57600080fd5b850160608188031215613ae157600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba613aec565b6001600160a01b03811681146105ca57600080fd5b600060208284031215613b3c57600080fd5b813561152c81613b15565b80151581146105ca57600080fd5b600060208284031215613b6757600080fd5b813561152c81613b47565b6000808335601e19843603018112613b8957600080fd5b83018035915067ffffffffffffffff821115613ba457600080fd5b60200191503681900382131561069b57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a08201526000613c1660c083018486613bb9565b9998505050505050505050565b818103818111156106ba576106ba613aec565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c08201526000613c7060e083018486613bb9565b9a9950505050505050505050565b6001600160701b038181168382160190808211156128cb576128cb613aec565b6001600160801b038181168382160190808211156128cb576128cb613aec565b81810360008312801583831316838312821617156128cb576128cb613aec565b600060208284031215613cf057600080fd5b815161152c81613b15565b80820281158282048414176106ba576106ba613aec565b6001600160801b038281168282160390808211156128cb576128cb613aec565b8082018281126000831280158216821582161715613d5257613d52613aec565b505092915050565b600060208284031215613d6c57600080fd5b815161152c81613b47565b634e487b7160e01b600052601260045260246000fd5b600082613d9c57613d9c613d77565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106ba576106ba613aec565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613e60828551613dce565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613ed557600080fd5b505080516020909101519092909150565b6000600160ff1b8201613efb57613efb613aec565b5060000390565b61018081016106ba8284613dce565b60008060408385031215613f2457600080fd5b825191506020830151613f3681613b47565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082613f6657613f66613d77565b600160ff1b821460001984141615613f8057613f80613aec565b500590565b60008060008060808587031215613f9b57600080fd5b8451935060208501519250604085015191506060850151613ae181613b47565b600060208284031215613fcd57600080fd5b5051919050565b6000825160005b81811015613ff55760208186018101518583015201613fdb565b50600092019182525091905056fea2646970667358221220bff61381bb3b6f33cde456efe13d77acdc73916c5816f2dfa9efc898102251e564736f6c63430008160033a2646970667358221220991bf33e1857cfdc728e0e6fb6da58879ec136a6fd35727b6489814d83deedb964736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = AaveTarget2DeployerContractFunctions(aavetarget2deployer_abi, self.w3, address)  # type: ignore

    functions: AaveTarget2DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = AaveTarget2DeployerContractFunctions(
            aavetarget2deployer_abi, w3, None
        )

        return contract
