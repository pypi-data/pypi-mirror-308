"""A web3.py Contract class for the AaveL2Target1Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

aavel2target1deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class AaveL2Target1DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the AaveL2Target1Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class AaveL2Target1DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = AaveL2Target1DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class AaveL2Target1DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> AaveL2Target1DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> AaveL2Target1DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            AaveL2Target1DeployerDeployTargetContractFunction0._type_signature: AaveL2Target1DeployerDeployTargetContractFunction0.factory(
                "AaveL2Target1DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class AaveL2Target1DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the AaveL2Target1Deployer contract."""

    deployTarget: AaveL2Target1DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            AaveL2Target1DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class AaveL2Target1DeployerContract(Contract):
    """A web3.py Contract class for the AaveL2Target1Deployer contract."""

    abi: ABI = aavel2target1deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401611e76929190613ae7565b6040805180830381865af4158015611e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb69190613b5d565b91509150611ed4611ec682611377565b611ecf90613b81565b612bac565b925082611eea5760009650505050505050611371565b611ef382611a71565b60078054600090611f0e9084906001600160801b031661398e565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611f3b81611a71565b60078054601090611f5d908490600160801b90046001600160801b031661398e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e611fba87612d44565b6040518263ffffffff1660e01b8152600401611fd69190613b9d565b6040805180830381865af4158015611ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120169190613bac565b915091508061202c575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b031691612092916137aa565b61209c919061395b565b9050806000036120b457506000958695509350505050565b60008087116120c45760006120cf565b6120cf8488846125b0565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff81111561210357612103613bdc565b6040519080825280601f01601f19166020018201604052801561212d576020820181803683370190505b5090506000808751602089018b8e8ef191503d92508683111561214e578692505b828152826000602083013e90999098509650505050505050565b6000806121736105ca565b905080831161218357600061218d565b61218d818461395b565b91506115de827f0000000000000000000000000000000000000000000000000000000000000000612956565b600080806121da6121d288670de0b6b3a764000061395b565b899087612e7e565b9050861561221c576121ec888861259b565b915061220d8a8a846122068a670de0b6b3a764000061395b565b8989612ea4565b925061221983826137aa565b90505b9750975097945050505050565b600061224761224084670de0b6b3a764000061395b565b839061259b565b6115de90670de0b6b3a764000061395b565b60008061229085612268611a39565b61227291906137aa565b600254610ff2908790600160801b90046001600160801b031661395b565b909210949350505050565b60008080806122f287866122eb8b6122e56122be8c670de0b6b3a764000061395b565b7f00000000000000000000000000000000000000000000000000000000000000009061259b565b9061259b565b9190612e7e565b935061231e847f00000000000000000000000000000000000000000000000000000000000000006115e5565b9150600061233f61233789670de0b6b3a764000061395b565b8a9088612e7e565b905061236b817f000000000000000000000000000000000000000000000000000000000000000061259b565b9350612397847f00000000000000000000000000000000000000000000000000000000000000006115e5565b6123a190846137aa565b915050945094509450949050565b6000806000806000808888101561241e5786156123d4576123d18d898b6125b0565b9c505b6123df8c898b6125b0565b9b506123ea8b611377565b6123f38d611377565b6123fd91906137bd565b905061240a8b898b6125b0565b9a506124178a898b6125b0565b995061243d565b6124278b611377565b6124308d611377565b61243a91906137bd565b90505b9b9c9a9b999a975050505050505050565b60008260000361245f5750846124ef565b81156124b25761249061247284876137aa565b61247c85876115e5565b612486888a6115e5565b611d3591906137aa565b9050600061249e8588611a9b565b9050808210156124ac578091505b506124ef565b8285036124c1575060006124ef565b6124ec6124ce848761395b565b6124d8858761259b565b6124e2888a6115e5565b611d35919061395b565b90505b95945050505050565b600060016001607f1b0319821280612516575060016001607f1b0382135b156113a15760405163a5353be560e01b815260040160405180910390fd5b600080612542846000612ec7565b61254d846000612ec7565b61255791906137bd565b905060008113156125735761256c81866137aa565b9450612592565b60008112156125925761258581613b81565b61258f908661395b565b94505b50929392505050565b60006115de8383670de0b6b3a7640000612e7e565b60008260001904841183021582026125c757600080fd5b5091020490565b60006113717f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084612edd565b6000806126507f000000000000000000000000000000000000000000000000000000000000000061264b886119d6565b612f01565b60405163470cc4cf60e11b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e19899e906024016020604051808303816000875af11580156126ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126de9190613bf2565b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018390529193507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015612752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127769190613c0b565b5050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb846127b9876119d6565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128289190613c0b565b5050505050565b6000808061285061284888670de0b6b3a764000061395b565b8990876125b0565b9050861561221c5761286288886115e5565b915061220d8a8a8461287c8a670de0b6b3a764000061395b565b8989612fc3565b6000806128908484612fd4565b9092509050806128a2576128a2611444565b5092915050565b60006100846128b88585613013565b83906b033b2e3c9fd0803ce80000006125b0565b6000816000036128e55750670de0b6b3a7640000611371565b826000036128f557506000611371565b600061290083611377565b9050600061291561291086611377565b613081565b905081810261292c670de0b6b3a764000082613c28565b9050612937816132a7565b9695505050505050565b60006115de83670de0b6b3a764000084612e7e565b60006115de83670de0b6b3a7640000846125b0565b600060016001607f1b038211156113a15760405163a5353be560e01b815260040160405180910390fd5b60035460009081906129b0906001600160801b031684612941565b90506129dc7f0000000000000000000000000000000000000000000000000000000000000000826137aa565b6002546001600160801b03161115611aaa576002547f000000000000000000000000000000000000000000000000000000000000000090612a279083906001600160801b031661395b565b6115de919061395b565b612a39613682565b600080612a4584612d44565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612a809190613b9d565b6040805180830381865af4158015612a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac09190613bac565b9350905082612ad5575060009150612ba49050565b6000612afc612af78461016001518561014001516115e590919063ffffffff16565b611377565b612b1c612af785610120015186610100015161259b90919063ffffffff16565b612b2691906137bd565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765481830152606081018a9052608081018b905260a0810192909252845160c08301529284015160e08201529290910151610100830152509150600190505b935093915050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = AaveL2Target1DeployerContractFunctions(aavel2target1deployer_abi, self.w3, address)  # type: ignore

    functions: AaveL2Target1DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = AaveL2Target1DeployerContractFunctions(
            aavel2target1deployer_abi, w3, None
        )

        return contract
