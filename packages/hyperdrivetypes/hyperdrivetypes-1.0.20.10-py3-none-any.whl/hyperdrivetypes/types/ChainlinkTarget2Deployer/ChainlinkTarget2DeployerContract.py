"""A web3.py Contract class for the ChainlinkTarget2Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

chainlinktarget2deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {
                    "name": "_extraData",
                    "type": "bytes",
                    "internalType": "bytes",
                },
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class ChainlinkTarget2DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the ChainlinkTarget2Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class ChainlinkTarget2DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = ChainlinkTarget2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class ChainlinkTarget2DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, _extraData: bytes, _salt: bytes) -> ChainlinkTarget2DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> ChainlinkTarget2DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            ChainlinkTarget2DeployerDeployTargetContractFunction0._type_signature: ChainlinkTarget2DeployerDeployTargetContractFunction0.factory(
                "ChainlinkTarget2DeployerDeployTargetContractFunction0",
                **kwargs,
            ),
        }
        return out


class ChainlinkTarget2DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the ChainlinkTarget2Deployer contract."""

    deployTarget: ChainlinkTarget2DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            ChainlinkTarget2DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class ChainlinkTarget2DeployerContract(Contract):
    """A web3.py Contract class for the ChainlinkTarget2Deployer contract."""

    abi: ABI = chainlinktarget2deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401611f6e929190613abf565b6040805180830381865af4158015611f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fae9190613b35565b91509150611fcc611fbe82611a47565b611fc790613b59565b612a91565b925082611fe257600096505050505050506106ba565b611feb82611791565b600780546000906120069084906001600160801b031661392e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061203381611791565b60078054601090612055908490600160801b90046001600160801b031661392e565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6120b287612c29565b6040518263ffffffff1660e01b81526004016120ce9190613b75565b6040805180830381865af41580156120ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061210e9190613b84565b9150915080612124575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161218a91613792565b61219491906138b3565b9050806000036121ac57506000958695509350505050565b60008087116121bc5760006121c7565b6121c784888461171c565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156121fb576121fb613bb4565b6040519080825280601f01601f191660200182016040528015612225576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612246578692505b828152826000602083013e90999098509650505050505050565b600061228187878761227a88670de0b6b3a76400006138b3565b8787612d63565b979650505050505050565b60006115086122cd6122a684670de0b6b3a76400006138b3565b611488670de0b6b3a76400006122bc818a61149f565b6122c691906138b3565b8790612512565b6122df90670de0b6b3a7640000613792565b611bfd84670de0b6b3a76400006138b3565b60008061232885612300611750565b61230a9190613792565b600254610ef2908790600160801b90046001600160801b03166138b3565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600080600080600061235f898789612d86565b909250905061236e82896138b3565b9750600061237d82888a61171c565b9050612389818b6138b3565b9a989950979650505050505050565b6000826000036123a9575084611788565b81156123fc576123da6123bc8487613792565b6123c685876106a2565b6123d0888a6106a2565b611bfd9190613792565b905060006123e885886117bf565b9050808210156123f6578091505b50611788565b82850361240b57506000611788565b61243661241884876138b3565b6124228587612512565b61242c888a6106a2565b611bfd91906138b3565b9695505050505050565b6000612468600b6000612454600286611229565b815260200190815260200160002054611a47565b61247a600b6000612454600187611229565b6106ba919061394e565b60006124b07f000000000000000000000000000000000000000000000000000000000000000083612512565b6003546124c691906001600160801b0316613792565b6002546124dc906001600160801b0316846106a2565b101592915050565b60006106ba826004611e8f565b600061228187878761250b88670de0b6b3a76400006138b3565b8787612e06565b60006106b78383670de0b6b3a764000061266c565b600080808061257887866125718b61148861254a8c670de0b6b3a76400006138b3565b7f000000000000000000000000000000000000000000000000000000000000000090612512565b919061266c565b93506125a4847f00000000000000000000000000000000000000000000000000000000000000006106a2565b915060006125c56125bd89670de0b6b3a76400006138b3565b8a908861266c565b90506125f1817f0000000000000000000000000000000000000000000000000000000000000000612512565b935061261d847f00000000000000000000000000000000000000000000000000000000000000006106a2565b6126279084613792565b915050945094509450949050565b600081831161264457816106b7565b5090919050565b6000806126638461265d8a888a61266c565b9061149f565b9050611c108884865b600082600019048411830215820261268357600080fd5b50910281810615159190040190565b60006106b76126a084612e17565b83906106a2565b60006106b783670de0b6b3a76400008461171c565b6000806126c98484612e8b565b9092509050806126db576126db612333565b5092915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261273c908590612ec7565b50505050565b60008160000361275b5750670de0b6b3a76400006106ba565b8260000361276b575060006106ba565b600061277683611a47565b9050600061278b61278686611a47565b612f2f565b90508181026127a2670de0b6b3a764000082613bca565b905061243681613155565b600060016001607f1b038211156117bb5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b03198212806127f5575060016001607f1b0382135b156117bb5760405163a5353be560e01b815260040160405180910390fd5b6000806128218460006132ea565b61282c8460006132ea565b612836919061394e565b905060008113156128525761284b8186613792565b9450612871565b60008112156128715761286481613b59565b61286e90866138b3565b94505b50929392505050565b6003546000908190612895906001600160801b03168461149f565b90506128c17f000000000000000000000000000000000000000000000000000000000000000082613792565b6002546001600160801b031611156117ce576002547f00000000000000000000000000000000000000000000000000000000000000009061290c9083906001600160801b03166138b3565b61150b91906138b3565b61291e61366a565b60008061292a84612c29565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b81526004016129659190613b75565b6040805180830381865af4158015612981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129a59190613b84565b93509050826129ba575060009150612a899050565b60006129e16129dc8461016001518561014001516106a290919063ffffffff16565b611a47565b612a016129dc85610120015186610100015161251290919063ffffffff16565b612a0b919061394e565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765481830152606081018a9052608081018b905260a0810192909252845160c08301529284015160e08201529290910151610100830152509150600190505b935093915050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612b4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b6e9190613bf8565b935093509350935080612b8a5750600098975050505050505050565b868414612bbb57612b9a84611791565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612bec57612bcb836127d7565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612c1a57612bfc82611791565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612c316136bc565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e08301526003540482166101008201526005549091610120830191612d2991166132f9565b81526004546001600160801b03600160801b9182900481166020840152600554604090930192612d5b929004166132f9565b905292915050565b600080612d7488888888888861336f565b909250905080611c2a57611c2a612333565b600080612dd08561148885817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000612dc6818c61149f565b61148891906138b3565b9150612dfc827f00000000000000000000000000000000000000000000000000000000000000006106a2565b9050935093915050565b600080612d74888888888888613437565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015612e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e7c9190613c4d565b50505091505061150b816134f7565b600080600083612e9a86611a47565b612ea4919061394e565b90506000811215612ebc57600080925092505061069b565b946001945092505050565b6000612edc6001600160a01b0384168361351a565b90508051600014158015612f01575080806020019051810190612eff9190613c9d565b155b1561171757604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b6000808213612f515760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f19820190612fd49084901c611a47565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361317057506000919050565b680755bf798b4a1bf1e58212613199576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b01818105955092935090919061243674029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611a47565b600081831361264457816106b7565b600080670de0b6b3a764000061330d6106c0565b613317919061398b565b9050808311613327576000613331565b61333181846138b3565b915061150b613368670de0b6b3a76400007f000000000000000000000000000000000000000000000000000000000000000061398b565b83906126a7565b60008060006133818989888888613528565b905061339b866117826133948a8d613792565b87906106a2565b98506133a8858a8661171c565b9850888110156133bf57600080925092505061342c565b888103670de0b6b3a764000081106133f4576133ed6133e6670de0b6b3a76400008961149f565b8290612742565b905061340c565b6134096133e6670de0b6b3a7640000896126a7565b90505b808910156134225760008093509350505061342c565b8803925060019150505b965096945050505050565b60008060006134498989888888613528565b905061345986611782898b613792565b97508781101561347057600080925092505061342c565b87810361347e81868861266c565b9050670de0b6b3a764000081106134ab576134a46133e6670de0b6b3a76400008961149f565b90506134c3565b6134c06133e6670de0b6b3a7640000896126a7565b90505b6134cd818661149f565b9050808a10156134e55760008093509350505061342c565b90980398600198509650505050505050565b6000808212156117bb5760405163071d137160e51b815260040160405180910390fd5b60606106b783836000613557565b60006135348585612742565b61354d61354586611782868b612512565b85908561266c565b6124369190613792565b60608147101561357c5760405163cd78605960e01b8152306004820152602401612f26565b600080856001600160a01b031684866040516135989190613cba565b60006040518083038185875af1925050503d80600081146135d5576040519150601f19603f3d011682016040523d82523d6000602084013e6135da565b606091505b50915091506124368683836060826135fa576135f582613641565b61150b565b815115801561361157506001600160a01b0384163b155b1561363a57604051639996b31560e01b81526001600160a01b0385166004820152602401612f26565b508061150b565b8051156136515780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180610120016040528061367e6136bc565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000806080858703121561373357600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561375f57600080fd5b85016060818803121561377157600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba61377c565b6001600160a01b03811681146105ca57600080fd5b6000602082840312156137cc57600080fd5b813561150b816137a5565b80151581146105ca57600080fd5b6000602082840312156137f757600080fd5b813561150b816137d7565b6000808335601e1984360301811261381957600080fd5b83018035915067ffffffffffffffff82111561383457600080fd5b60200191503681900382131561069b57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a082015260006138a660c083018486613849565b9998505050505050505050565b818103818111156106ba576106ba61377c565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c0820152600061390060e083018486613849565b9a9950505050505050505050565b6001600160701b038181168382160190808211156126db576126db61377c565b6001600160801b038181168382160190808211156126db576126db61377c565b81810360008312801583831316838312821617156126db576126db61377c565b60006020828403121561398057600080fd5b815161150b816137a5565b80820281158282048414176106ba576106ba61377c565b6001600160801b038281168282160390808211156126db576126db61377c565b80820182811260008312801582168215821617156139e2576139e261377c565b505092915050565b634e487b7160e01b600052601260045260246000fd5b600082613a0f57613a0f6139ea565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106ba576106ba61377c565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613ad3828551613a41565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613b4857600080fd5b505080516020909101519092909150565b6000600160ff1b8201613b6e57613b6e61377c565b5060000390565b61018081016106ba8284613a41565b60008060408385031215613b9757600080fd5b825191506020830151613ba9816137d7565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082613bd957613bd96139ea565b600160ff1b821460001984141615613bf357613bf361377c565b500590565b60008060008060808587031215613c0e57600080fd5b8451935060208501519250604085015191506060850151613771816137d7565b805169ffffffffffffffffffff81168114613c4857600080fd5b919050565b600080600080600060a08688031215613c6557600080fd5b613c6e86613c2e565b9450602086015193506040860151925060608601519150613c9160808701613c2e565b90509295509295909350565b600060208284031215613caf57600080fd5b815161150b816137d7565b6000825160005b81811015613cdb5760208186018101518583015201613cc1565b50600092019182525091905056fea264697066735822122078da8852a3113ac3e7565693617507b8450a7c2398d0a2ab68b60524e0bc5bf764736f6c63430008160033a26469706673582212202b00f74bd58c3c2a51d2ab7b430dce5440e685a2004add0a29afd8d24705f57f64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = ChainlinkTarget2DeployerContractFunctions(chainlinktarget2deployer_abi, self.w3, address)  # type: ignore

    functions: ChainlinkTarget2DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = ChainlinkTarget2DeployerContractFunctions(
            chainlinktarget2deployer_abi, w3, None
        )

        return contract
