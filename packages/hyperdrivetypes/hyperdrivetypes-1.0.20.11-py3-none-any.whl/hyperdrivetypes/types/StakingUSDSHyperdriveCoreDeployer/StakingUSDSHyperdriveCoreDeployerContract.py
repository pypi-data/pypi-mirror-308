"""A web3.py Contract class for the StakingUSDSHyperdriveCoreDeployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

stakingusdshyperdrivecoredeployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployHyperdrive",
            "inputs": [
                {"name": "__name", "type": "string", "internalType": "string"},
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {
                    "name": "_extraData",
                    "type": "bytes",
                    "internalType": "bytes",
                },
                {
                    "name": "_target0",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target1",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target2",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target3",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target4",
                    "type": "address",
                    "internalType": "address",
                },
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class StakingUSDSHyperdriveCoreDeployerContractErrors(
    PypechainBaseContractErrors
):
    """ContractErrors for the StakingUSDSHyperdriveCoreDeployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployHyperdrive(str,IHyperdrive.PoolConfig,str,bytes,str,str,str,str,str,bytes) method."""

    _function_name = "deployHyperdrive"
    _type_signature = expand_struct_type_str(
        tuple(
            [
                "str",
                "IHyperdrive.PoolConfig",
                "str",
                "bytes",
                "str",
                "str",
                "str",
                "str",
                "str",
                "bytes",
            ]
        ),
        structs,
    )
    _error_class = StakingUSDSHyperdriveCoreDeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployHyperdrive method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployHyperdrive"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, __name: str, _config: IHyperdrive.PoolConfig, _adminController: str, _extraData: bytes, _target0: str, _target1: str, _target2: str, _target3: str, _target4: str, _salt: bytes) -> StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction0._type_signature: StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction0.factory(
                "StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction0",
                **kwargs,
            ),
        }
        return out


class StakingUSDSHyperdriveCoreDeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the StakingUSDSHyperdriveCoreDeployer contract."""

    deployHyperdrive: (
        StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction
    )

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployHyperdrive = StakingUSDSHyperdriveCoreDeployerDeployHyperdriveContractFunction.factory(
            "deployHyperdrive",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="deployHyperdrive",
        )


class StakingUSDSHyperdriveCoreDeployerContract(Contract):
    """A web3.py Contract class for the StakingUSDSHyperdriveCoreDeployer contract."""

    abi: ABI = stakingusdshyperdrivecoredeployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x608060405234801561001057600080fd5b50612305806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638cc23ce01462000033575b600080fd5b6200004a6200004436600462000399565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080888060200190518101906200007f919062000499565b60408051336020820152908101859052909150606001604051602081830303815290604052805190602001208c8c8c8b8b8b8b8b89604051620000c2906200010a565b620000d699989796959493929190620005e0565b8190604051809103906000f5905080158015620000f7573d6000803e3d6000fd5b509150505b9a9950505050505050505050565b611c1580620006bb83390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff8111828210171562000155576200015562000118565b60405290565b600082601f8301126200016d57600080fd5b813567ffffffffffffffff808211156200018b576200018b62000118565b604051601f8301601f19908116603f01168101908282118183101715620001b657620001b662000118565b81604052838152866020858801011115620001d057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146200020657600080fd5b50565b80356200021681620001f0565b919050565b6000608082840312156200022e57600080fd5b6040516080810181811067ffffffffffffffff8211171562000254576200025462000118565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600061026082840312156200029957600080fd5b620002a36200012e565b9050620002b08262000209565b8152620002c06020830162000209565b6020820152620002d36040830162000209565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013581830152506101606200033e81840162000209565b908201526101806200035283820162000209565b908201526101a06200036683820162000209565b908201526101c06200037a83820162000209565b908201526101e06200038f848483016200021b565b9082015292915050565b6000806000806000806000806000806103808b8d031215620003ba57600080fd5b8a3567ffffffffffffffff80821115620003d357600080fd5b620003e18e838f016200015b565b9b50620003f28e60208f0162000285565b9a50620004036102808e0162000209565b99506102a08d01359150808211156200041b57600080fd5b506200042a8d828e016200015b565b9750506200043c6102c08c0162000209565b95506200044d6102e08c0162000209565b94506200045e6103008c0162000209565b93506200046f6103208c0162000209565b9250620004806103408c0162000209565b91506103608b013590509295989b9194979a5092959850565b600060208284031215620004ac57600080fd5b8151620004b981620001f0565b9392505050565b80516001600160a01b031682526020810151620004e860208401826001600160a01b03169052565b5060408101516200050460408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015162000577828501826001600160a01b03169052565b5050610180818101516001600160a01b03908116918401919091526101a0808301518216908401526101c080830151909116908301526101e090810151805191830191909152602081015161020083015260408101516102208301526060015161024090910152565b60006103608083528b518082850152600091505b8082101562000618576020828e0101516103808386010152602082019150620005f4565b6103809150600082828601015281601f19601f8301168501019250505062000644602083018b620004c0565b6001600160a01b0389166102808301526001600160a01b0388166102a08301526001600160a01b0387166102c08301526001600160a01b0386166102e08301526001600160a01b0385166103008301526001600160a01b0384166103208301526001600160a01b038316610340830152620000fc56fe6103406040523480156200001257600080fd5b5060405162001c1538038062001c158339810160408190526200003591620006c6565b6001600081905588516001600160a01b0390811660809081526020808c0151831660a0908152918c01516101a052908b01516101c05260c0808c01516101e090815260e0808e015161020052610120808f0151909352610100808f0151909152610140808f0151909152908d01805151909252815190920151909152805160409081015161016052905160609081015161018052908b01518216610240528a01516102605288166102205281908a908a908a908a908a908a908a908a90620000fe898262000892565b506001600160a01b03948516610280529284166102a0529083166102c05282166102e05281166103005284811661032052608051620001469450169150839050600162000156565b50505050505050505050620009a0565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001b090859083906200022216565b6200021c57604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b1790915262000210918691620002d316565b6200021c8482620002d3565b50505050565b6000806000846001600160a01b0316846040516200024191906200095e565b6000604051808303816000865af19150503d806000811462000280576040519150601f19603f3d011682016040523d82523d6000602084013e62000285565b606091505b5091509150818015620002b3575080511580620002b3575080806020019051810190620002b391906200097c565b8015620002ca57506000856001600160a01b03163b115b95945050505050565b6000620002ea6001600160a01b0384168362000346565b90508051600014158015620003125750808060200190518101906200031091906200097c565b155b156200034157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b606062000356838360006200035d565b9392505050565b606081471015620003845760405163cd78605960e01b815230600482015260240162000338565b600080856001600160a01b03168486604051620003a291906200095e565b60006040518083038185875af1925050503d8060008114620003e1576040519150601f19603f3d011682016040523d82523d6000602084013e620003e6565b606091505b509092509050620003f986838362000403565b9695505050505050565b6060826200041c57620004168262000467565b62000356565b81511580156200043457506001600160a01b0384163b155b156200045f57604051639996b31560e01b81526001600160a01b038516600482015260240162000338565b508062000356565b805115620004785780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60405161020081016001600160401b0381118282101715620004cd57620004cd62000491565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fe57620004fe62000491565b604052919050565b60005b838110156200052357818101518382015260200162000509565b50506000910152565b80516001600160a01b03811681146200054457600080fd5b919050565b6000608082840312156200055c57600080fd5b604051608081016001600160401b038111828210171562000581576200058162000491565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006102608284031215620005c657600080fd5b620005d0620004a7565b9050620005dd826200052c565b8152620005ed602083016200052c565b602082015262000600604083016200052c565b6040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101606200066b8184016200052c565b908201526101806200067f8382016200052c565b908201526101a0620006938382016200052c565b908201526101c0620006a78382016200052c565b908201526101e0620006bc8484830162000549565b9082015292915050565b60008060008060008060008060006103608a8c031215620006e657600080fd5b89516001600160401b0380821115620006fe57600080fd5b818c0191508c601f8301126200071357600080fd5b81518181111562000728576200072862000491565b6200073d601f8201601f1916602001620004d3565b91508082528d60208285010111156200075557600080fd5b6200076881602084016020860162000506565b5099506200077c90508b60208c01620005b2565b97506200078d6102808b016200052c565b96506200079e6102a08b016200052c565b9550620007af6102c08b016200052c565b9450620007c06102e08b016200052c565b9350620007d16103008b016200052c565b9250620007e26103208b016200052c565b9150620007f36103408b016200052c565b90509295985092959850929598565b600181811c908216806200081757607f821691505b6020821081036200083857634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000341576000816000526020600020601f850160051c81016020861015620008695750805b601f850160051c820191505b818110156200088a5782815560010162000875565b505050505050565b81516001600160401b03811115620008ae57620008ae62000491565b620008c681620008bf845462000802565b846200083e565b602080601f831160018114620008fe5760008415620008e55750858301515b600019600386901b1c1916600185901b1785556200088a565b600085815260208120601f198616915b828110156200092f578886015182559484019460019091019084016200090e565b50858210156200094e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200097281846020870162000506565b9190910192915050565b6000602082840312156200098f57600080fd5b815180151581146200035657600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e051610300516103205161113c62000ad9600039600061073f01526000818161060e0152818161067a01526107e801526000818161058601528181610818015261087601526000818161053f0152610a0b0152600081816105da01526107100152600081816101d90152818161039b0152818161064a015281816106ac015281816106de015281816107b90152818161084b015281816108a7015281816109df0152610a3e01526000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505061113c6000f3fe6080604052600436106101c25760003560e01c806377d05ff4116100f7578063cbc1343411610095578063e44808bc11610064578063e44808bc146105a8578063eac3e799146105c8578063f3f70707146105fc578063f698da2514610630576101c2565b8063cbc134341461030f578063d899e11214610574578063dbbe807014610561578063ded06231146103d5576101c2565b8063a22cb465116100d1578063a22cb465146104ba578063a6e8a8591461052d578063ab033ea9146102d2578063cba2e58d14610561576101c2565b806377d05ff4146104da5780639032c726146104ed5780639cd241af1461050d576101c2565b806330adf81f11610164578063414f826d1161013e578063414f826d1461046c5780634c2ac1d91461048c5780634ed2d6ac1461049f5780637180c8ca146104ba576101c2565b806330adf81f14610403578063372500ab146104375780633e691db91461044c576101c2565b806317fad7fc116101a057806317fad7fc146103495780631c0f12b61461036957806321b57d531461038957806329b23fc1146103d5576101c2565b806301681a62146102d257806302329a29146102f4578063074a6de91461030f575b3480156101ce57600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610211929190610b14565b600060405180830381855af49150503d806000811461024c576040519150601f19603f3d011682016040523d82523d6000602084013e610251565b606091505b5091509150811561027557604051638bb0a34b60e01b815260040160405180910390fd5b600061028082610b24565b90506001600160e01b03198116636e64089360e11b146102a257815160208301fd5b8151600319810160048401908152926102c391810160200190602401610b95565b80519650602001945050505050f35b3480156102de57600080fd5b506102f26102ed366004610c5a565b610645565b005b34801561030057600080fd5b506102f26102ed366004610c93565b34801561031b57600080fd5b5061032f61032a366004610cc0565b610672565b604080519283526020830191909152015b60405180910390f35b34801561035557600080fd5b506102f2610364366004610d5c565b6106a7565b34801561037557600080fd5b506102f2610384366004610df1565b6106d9565b34801561039557600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610340565b3480156103e157600080fd5b506103f56103f0366004610e39565b610709565b604051908152602001610340565b34801561040f57600080fd5b506103f57f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561044357600080fd5b506102f261073d565b34801561045857600080fd5b506103f5610467366004610e93565b6107b2565b34801561047857600080fd5b506102f2610487366004610ed0565b6107e3565b6103f561049a366004610ef2565b610811565b3480156104ab57600080fd5b506102f2610384366004610f56565b3480156104c657600080fd5b506102f26104d5366004610fa0565b610846565b6103f56104e8366004610cc0565b61086f565b3480156104f957600080fd5b506102f2610508366004610fd5565b6108a2565b34801561051957600080fd5b506102f2610528366004611053565b6109da565b34801561053957600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b61032f61056f366004610e39565b610a03565b34801561058057600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b457600080fd5b506102f26105c336600461108b565b610a39565b3480156105d457600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060857600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561063c57600080fd5b506103f5610a6a565b61066e7f0000000000000000000000000000000000000000000000000000000000000000610af8565b5050565b60008061069e7f0000000000000000000000000000000000000000000000000000000000000000610af8565b50935093915050565b6106d07f0000000000000000000000000000000000000000000000000000000000000000610af8565b50505050505050565b6107027f0000000000000000000000000000000000000000000000000000000000000000610af8565b5050505050565b60006107347f0000000000000000000000000000000000000000000000000000000000000000610af8565b50949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561079857600080fd5b505af11580156107ac573d6000803e3d6000fd5b50505050565b60006107dd7f0000000000000000000000000000000000000000000000000000000000000000610af8565b50919050565b61080c7f0000000000000000000000000000000000000000000000000000000000000000610af8565b505050565b600061083c7f0000000000000000000000000000000000000000000000000000000000000000610af8565b5095945050505050565b61080c7f0000000000000000000000000000000000000000000000000000000000000000610af8565b600061089a7f0000000000000000000000000000000000000000000000000000000000000000610af8565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108d7610a6a565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b1790525161098091906110ea565b600060405180830381855af49150503d80600081146109bb576040519150601f19603f3d011682016040523d82523d6000602084013e6109c0565b606091505b5091509150816109d257805160208201fd5b805160208201f35b6107ac7f0000000000000000000000000000000000000000000000000000000000000000610af8565b600080610a2f7f0000000000000000000000000000000000000000000000000000000000000000610af8565b5094509492505050565b610a627f0000000000000000000000000000000000000000000000000000000000000000610af8565b505050505050565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516109809291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b535780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b8c578181015183820152602001610b74565b50506000910152565b600060208284031215610ba757600080fd5b815167ffffffffffffffff80821115610bbf57600080fd5b818401915084601f830112610bd357600080fd5b815181811115610be557610be5610b5b565b604051601f8201601f19908116603f01168101908382118183101715610c0d57610c0d610b5b565b81604052828152876020848701011115610c2657600080fd5b610c37836020830160208801610b71565b979650505050505050565b6001600160a01b0381168114610c5757600080fd5b50565b600060208284031215610c6c57600080fd5b8135610c7781610c42565b9392505050565b80358015158114610c8e57600080fd5b919050565b600060208284031215610ca557600080fd5b610c7782610c7e565b6000606082840312156107dd57600080fd5b600080600060608486031215610cd557600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610cfa57600080fd5b610d0686828701610cae565b9150509250925092565b60008083601f840112610d2257600080fd5b50813567ffffffffffffffff811115610d3a57600080fd5b6020830191508360208260051b8501011115610d5557600080fd5b9250929050565b60008060008060008060808789031215610d7557600080fd5b8635610d8081610c42565b95506020870135610d9081610c42565b9450604087013567ffffffffffffffff80821115610dad57600080fd5b610db98a838b01610d10565b90965094506060890135915080821115610dd257600080fd5b50610ddf89828a01610d10565b979a9699509497509295939492505050565b60008060008060808587031215610e0757600080fd5b843593506020850135610e1981610c42565b92506040850135610e2981610c42565b9396929550929360600135925050565b60008060008060808587031215610e4f57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e7b57600080fd5b610e8787828801610cae565b91505092959194509250565b600060208284031215610ea557600080fd5b813567ffffffffffffffff811115610ebc57600080fd5b610ec884828501610cae565b949350505050565b60008060408385031215610ee357600080fd5b50508035926020909101359150565b600080600080600060a08688031215610f0a57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610f3d57600080fd5b610f4988828901610cae565b9150509295509295909350565b60008060008060808587031215610f6c57600080fd5b843593506020850135610f7e81610c42565b9250604085013591506060850135610f9581610c42565b939692955090935050565b60008060408385031215610fb357600080fd5b8235610fbe81610c42565b9150610fcc60208401610c7e565b90509250929050565b600080600080600080600060e0888a031215610ff057600080fd5b8735610ffb81610c42565b9650602088013561100b81610c42565b955061101960408901610c7e565b945060608801359350608088013560ff8116811461103657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060006060848603121561106857600080fd5b83359250602084013561107a81610c42565b929592945050506040919091013590565b600080600080600060a086880312156110a357600080fd5b8535945060208601356110b581610c42565b935060408601356110c581610c42565b92506060860135915060808601356110dc81610c42565b809150509295509295909350565b600082516110fc818460208701610b71565b919091019291505056fea26469706673582212202b1af028b245e40177fa2e9eef216ef37c6cb5a91ca251ed5110f1e80b593c3c64736f6c63430008160033a2646970667358221220da124789a495234b6f4361cb13be1a7bbbb767eba863f024af7c90af330dbed264736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = StakingUSDSHyperdriveCoreDeployerContractFunctions(stakingusdshyperdrivecoredeployer_abi, self.w3, address)  # type: ignore

    functions: StakingUSDSHyperdriveCoreDeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = StakingUSDSHyperdriveCoreDeployerContractFunctions(
            stakingusdshyperdrivecoredeployer_abi, w3, None
        )

        return contract
