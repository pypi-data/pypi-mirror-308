"""A web3.py Contract class for the StkWellHyperdriveCoreDeployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

stkwellhyperdrivecoredeployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployHyperdrive",
            "inputs": [
                {"name": "__name", "type": "string", "internalType": "string"},
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {
                    "name": "_target0",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target1",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target2",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target3",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target4",
                    "type": "address",
                    "internalType": "address",
                },
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class StkWellHyperdriveCoreDeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the StkWellHyperdriveCoreDeployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployHyperdrive(str,IHyperdrive.PoolConfig,str,bytes,str,str,str,str,str,bytes) method."""

    _function_name = "deployHyperdrive"
    _type_signature = expand_struct_type_str(
        tuple(
            [
                "str",
                "IHyperdrive.PoolConfig",
                "str",
                "bytes",
                "str",
                "str",
                "str",
                "str",
                "str",
                "bytes",
            ]
        ),
        structs,
    )
    _error_class = StkWellHyperdriveCoreDeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployHyperdrive method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployHyperdrive"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, __name: str, _config: IHyperdrive.PoolConfig, _adminController: str, arg4: bytes, _target0: str, _target1: str, _target2: str, _target3: str, _target4: str, _salt: bytes) -> StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction0._type_signature: StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction0.factory(
                "StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction0",
                **kwargs,
            ),
        }
        return out


class StkWellHyperdriveCoreDeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the StkWellHyperdriveCoreDeployer contract."""

    deployHyperdrive: (
        StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction
    )

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployHyperdrive = StkWellHyperdriveCoreDeployerDeployHyperdriveContractFunction.factory(
            "deployHyperdrive",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="deployHyperdrive",
        )


class StkWellHyperdriveCoreDeployerContract(Contract):
    """A web3.py Contract class for the StkWellHyperdriveCoreDeployer contract."""

    abi: ABI = stkwellhyperdrivecoredeployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x608060405234801561001057600080fd5b506122fa806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638cc23ce01462000033575b600080fd5b6200004a620000443660046200036d565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b60408051336020820152908101829052600090606001604051602081830303815290604052805190602001208b8b8b8a8a8a8a8a604051620000a890620000ec565b620000bb9897969594939291906200058d565b8190604051809103906000f5905080158015620000dc573d6000803e3d6000fd5b509b9a5050505050505050505050565b611c8c806200063983390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff81118282101715620001375762000137620000fa565b60405290565b600082601f8301126200014f57600080fd5b813567ffffffffffffffff808211156200016d576200016d620000fa565b604051601f8301601f19908116603f01168101908282118183101715620001985762000198620000fa565b81604052838152866020858801011115620001b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b0381168114620001ea57600080fd5b919050565b6000608082840312156200020257600080fd5b6040516080810181811067ffffffffffffffff82111715620002285762000228620000fa565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600061026082840312156200026d57600080fd5b6200027762000110565b90506200028482620001d2565b81526200029460208301620001d2565b6020820152620002a760408301620001d2565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016062000312818401620001d2565b9082015261018062000326838201620001d2565b908201526101a06200033a838201620001d2565b908201526101c06200034e838201620001d2565b908201526101e06200036384848301620001ef565b9082015292915050565b6000806000806000806000806000806103808b8d0312156200038e57600080fd5b8a3567ffffffffffffffff80821115620003a757600080fd5b620003b58e838f016200013d565b9b50620003c68e60208f0162000259565b9a50620003d76102808e01620001d2565b99506102a08d0135915080821115620003ef57600080fd5b50620003fe8d828e016200013d565b975050620004106102c08c01620001d2565b9550620004216102e08c01620001d2565b9450620004326103008c01620001d2565b9350620004436103208c01620001d2565b9250620004546103408c01620001d2565b91506103608b013590509295989b9194979a5092959850565b80516001600160a01b0316825260208101516200049560208401826001600160a01b03169052565b506040810151620004b160408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015162000524828501826001600160a01b03169052565b5050610180818101516001600160a01b03908116918401919091526101a0808301518216908401526101c080830151909116908301526101e090810151805191830191909152602081015161020083015260408101516102208301526060015161024090910152565b60006103408083528a518082850152600091505b80821015620005c5576020828d0101516103608386010152602082019150620005a1565b6103609150600082828601015281601f19601f83011685010192505050620005f1602083018a6200046d565b6001600160a01b039788166102808301529587166102a08201529386166102c08501529185166102e08401528416610300830152909216610320909201919091529291505056fe6103206040523480156200001257600080fd5b5060405162001c8c38038062001c8c8339810160408190526200003591620006c0565b6001600081905587516001600160a01b0390811660809081526020808b0151831660a0908152918b01516101a052908a01516101c05260c0808b01516101e090815260e0808d015161020052610120808e0151909352610100808e0151909152610140808e0151909152908c01805151909252815190920151909152805160409081015161016052905160609081015161018052908a01518216610240528901516102605287166102205288908890889088908890889088908890620000fc898262000879565b506001600160a01b03948516610280529284166102a0529083166102c05282166102e05281166103005260208b01518b5162000142955090911692509050600162000150565b505050505050505062000987565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001aa90859083906200021c16565b6200021657604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200020a918691620002cd16565b620002168482620002cd565b50505050565b6000806000846001600160a01b0316846040516200023b919062000945565b6000604051808303816000865af19150503d80600081146200027a576040519150601f19603f3d011682016040523d82523d6000602084013e6200027f565b606091505b5091509150818015620002ad575080511580620002ad575080806020019051810190620002ad919062000963565b8015620002c457506000856001600160a01b03163b115b95945050505050565b6000620002e46001600160a01b0384168362000340565b905080516000141580156200030c5750808060200190518101906200030a919062000963565b155b156200033b57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6060620003508383600062000357565b9392505050565b6060814710156200037e5760405163cd78605960e01b815230600482015260240162000332565b600080856001600160a01b031684866040516200039c919062000945565b60006040518083038185875af1925050503d8060008114620003db576040519150601f19603f3d011682016040523d82523d6000602084013e620003e0565b606091505b509092509050620003f3868383620003fd565b9695505050505050565b6060826200041657620004108262000461565b62000350565b81511580156200042e57506001600160a01b0384163b155b156200045957604051639996b31560e01b81526001600160a01b038516600482015260240162000332565b508062000350565b805115620004725780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60405161020081016001600160401b0381118282101715620004c757620004c76200048b565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004f857620004f86200048b565b604052919050565b60005b838110156200051d57818101518382015260200162000503565b50506000910152565b80516001600160a01b03811681146200053e57600080fd5b919050565b6000608082840312156200055657600080fd5b604051608081016001600160401b03811182821017156200057b576200057b6200048b565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006102608284031215620005c057600080fd5b620005ca620004a1565b9050620005d78262000526565b8152620005e76020830162000526565b6020820152620005fa6040830162000526565b6040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101606200066581840162000526565b908201526101806200067983820162000526565b908201526101a06200068d83820162000526565b908201526101c0620006a183820162000526565b908201526101e0620006b68484830162000543565b9082015292915050565b600080600080600080600080610340898b031215620006de57600080fd5b88516001600160401b0380821115620006f657600080fd5b818b0191508b601f8301126200070b57600080fd5b8151818111156200072057620007206200048b565b62000735601f8201601f1916602001620004cd565b91508082528c60208285010111156200074d57600080fd5b6200076081602084016020860162000500565b5098506200077490508a60208b01620005ac565b9650620007856102808a0162000526565b9550620007966102a08a0162000526565b9450620007a76102c08a0162000526565b9350620007b86102e08a0162000526565b9250620007c96103008a0162000526565b9150620007da6103208a0162000526565b90509295985092959890939650565b600181811c90821680620007fe57607f821691505b6020821081036200081f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033b576000816000526020600020601f850160051c81016020861015620008505750805b601f850160051c820191505b8181101562000871578281556001016200085c565b505050505050565b81516001600160401b038111156200089557620008956200048b565b620008ad81620008a68454620007e9565b8462000825565b602080601f831160018114620008e55760008415620008cc5750858301515b600019600386901b1c1916600185901b17855562000871565b600085815260208120601f198616915b828110156200091657888601518255948401946001909101908401620008f5565b5085821015620009355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200095981846020870162000500565b9190910192915050565b6000602082840312156200097657600080fd5b815180151581146200035057600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e051610300516111d462000ab86000396000818161060e0152818161067a01526108610152600081816105860152818161089101526108ef01526000818161053f0152610a8a0152600081816105da01526107100152600081816101d90152818161039b0152818161064a015281816106ac015281816106de01528181610832015281816108c40152818161092001528181610a580152610abd0152600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060006107540152600050506111d46000f3fe6080604052600436106101c25760003560e01c806377d05ff4116100f7578063cbc1343411610095578063e44808bc11610064578063e44808bc146105a8578063eac3e799146105c8578063f3f70707146105fc578063f698da2514610630576101c2565b8063cbc134341461030f578063d899e11214610574578063dbbe807014610561578063ded06231146103d5576101c2565b8063a22cb465116100d1578063a22cb465146104ba578063a6e8a8591461052d578063ab033ea9146102d2578063cba2e58d14610561576101c2565b806377d05ff4146104da5780639032c726146104ed5780639cd241af1461050d576101c2565b806330adf81f11610164578063414f826d1161013e578063414f826d1461046c5780634c2ac1d91461048c5780634ed2d6ac1461049f5780637180c8ca146104ba576101c2565b806330adf81f14610403578063372500ab146104375780633e691db91461044c576101c2565b806317fad7fc116101a057806317fad7fc146103495780631c0f12b61461036957806321b57d531461038957806329b23fc1146103d5576101c2565b806301681a62146102d257806302329a29146102f4578063074a6de91461030f575b3480156101ce57600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610211929190610b93565b600060405180830381855af49150503d806000811461024c576040519150601f19603f3d011682016040523d82523d6000602084013e610251565b606091505b5091509150811561027557604051638bb0a34b60e01b815260040160405180910390fd5b600061028082610ba3565b90506001600160e01b03198116636e64089360e11b146102a257815160208301fd5b8151600319810160048401908152926102c391810160200190602401610c14565b80519650602001945050505050f35b3480156102de57600080fd5b506102f26102ed366004610cd9565b610645565b005b34801561030057600080fd5b506102f26102ed366004610d12565b34801561031b57600080fd5b5061032f61032a366004610d3f565b610672565b604080519283526020830191909152015b60405180910390f35b34801561035557600080fd5b506102f2610364366004610ddb565b6106a7565b34801561037557600080fd5b506102f2610384366004610e70565b6106d9565b34801561039557600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610340565b3480156103e157600080fd5b506103f56103f0366004610eb8565b610709565b604051908152602001610340565b34801561040f57600080fd5b506103f57f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561044357600080fd5b506102f261073d565b34801561045857600080fd5b506103f5610467366004610f12565b61082b565b34801561047857600080fd5b506102f2610487366004610f4f565b61085c565b6103f561049a366004610f71565b61088a565b3480156104ab57600080fd5b506102f2610384366004610fd5565b3480156104c657600080fd5b506102f26104d536600461101f565b6108bf565b6103f56104e8366004610d3f565b6108e8565b3480156104f957600080fd5b506102f2610508366004611054565b61091b565b34801561051957600080fd5b506102f26105283660046110d2565b610a53565b34801561053957600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b61032f61056f366004610eb8565b610a82565b34801561058057600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b457600080fd5b506102f26105c336600461110a565b610ab8565b3480156105d457600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060857600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561063c57600080fd5b506103f5610ae9565b61066e7f0000000000000000000000000000000000000000000000000000000000000000610b77565b5050565b60008061069e7f0000000000000000000000000000000000000000000000000000000000000000610b77565b50935093915050565b6106d07f0000000000000000000000000000000000000000000000000000000000000000610b77565b50505050505050565b6107027f0000000000000000000000000000000000000000000000000000000000000000610b77565b5050505050565b60006107347f0000000000000000000000000000000000000000000000000000000000000000610b77565b50949350505050565b604051637e90d7ef60e01b815230600482018190527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b03831691639a99b4f0918390637e90d7ef90602401602060405180830381865afa1580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190611169565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561081757600080fd5b505af1158015610702573d6000803e3d6000fd5b60006108567f0000000000000000000000000000000000000000000000000000000000000000610b77565b50919050565b6108857f0000000000000000000000000000000000000000000000000000000000000000610b77565b505050565b60006108b57f0000000000000000000000000000000000000000000000000000000000000000610b77565b5095945050505050565b6108857f0000000000000000000000000000000000000000000000000000000000000000610b77565b60006109137f0000000000000000000000000000000000000000000000000000000000000000610b77565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610950610ae9565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516109f99190611182565b600060405180830381855af49150503d8060008114610a34576040519150601f19603f3d011682016040523d82523d6000602084013e610a39565b606091505b509150915081610a4b57805160208201fd5b805160208201f35b610a7c7f0000000000000000000000000000000000000000000000000000000000000000610b77565b50505050565b600080610aae7f0000000000000000000000000000000000000000000000000000000000000000610b77565b5094509492505050565b610ae17f0000000000000000000000000000000000000000000000000000000000000000610b77565b505050505050565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516109f99291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610bd25780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610c0b578181015183820152602001610bf3565b50506000910152565b600060208284031215610c2657600080fd5b815167ffffffffffffffff80821115610c3e57600080fd5b818401915084601f830112610c5257600080fd5b815181811115610c6457610c64610bda565b604051601f8201601f19908116603f01168101908382118183101715610c8c57610c8c610bda565b81604052828152876020848701011115610ca557600080fd5b610cb6836020830160208801610bf0565b979650505050505050565b6001600160a01b0381168114610cd657600080fd5b50565b600060208284031215610ceb57600080fd5b8135610cf681610cc1565b9392505050565b80358015158114610d0d57600080fd5b919050565b600060208284031215610d2457600080fd5b610cf682610cfd565b60006060828403121561085657600080fd5b600080600060608486031215610d5457600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610d7957600080fd5b610d8586828701610d2d565b9150509250925092565b60008083601f840112610da157600080fd5b50813567ffffffffffffffff811115610db957600080fd5b6020830191508360208260051b8501011115610dd457600080fd5b9250929050565b60008060008060008060808789031215610df457600080fd5b8635610dff81610cc1565b95506020870135610e0f81610cc1565b9450604087013567ffffffffffffffff80821115610e2c57600080fd5b610e388a838b01610d8f565b90965094506060890135915080821115610e5157600080fd5b50610e5e89828a01610d8f565b979a9699509497509295939492505050565b60008060008060808587031215610e8657600080fd5b843593506020850135610e9881610cc1565b92506040850135610ea881610cc1565b9396929550929360600135925050565b60008060008060808587031215610ece57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610efa57600080fd5b610f0687828801610d2d565b91505092959194509250565b600060208284031215610f2457600080fd5b813567ffffffffffffffff811115610f3b57600080fd5b610f4784828501610d2d565b949350505050565b60008060408385031215610f6257600080fd5b50508035926020909101359150565b600080600080600060a08688031215610f8957600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610fbc57600080fd5b610fc888828901610d2d565b9150509295509295909350565b60008060008060808587031215610feb57600080fd5b843593506020850135610ffd81610cc1565b925060408501359150606085013561101481610cc1565b939692955090935050565b6000806040838503121561103257600080fd5b823561103d81610cc1565b915061104b60208401610cfd565b90509250929050565b600080600080600080600060e0888a03121561106f57600080fd5b873561107a81610cc1565b9650602088013561108a81610cc1565b955061109860408901610cfd565b945060608801359350608088013560ff811681146110b557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806000606084860312156110e757600080fd5b8335925060208401356110f981610cc1565b929592945050506040919091013590565b600080600080600060a0868803121561112257600080fd5b85359450602086013561113481610cc1565b9350604086013561114481610cc1565b925060608601359150608086013561115b81610cc1565b809150509295509295909350565b60006020828403121561117b57600080fd5b5051919050565b60008251611194818460208701610bf0565b919091019291505056fea2646970667358221220683860ccb1204eae546d960a2b26a87637779c45e2a94617d511dd5046594ec764736f6c63430008160033a26469706673582212208760e0971d2bd1d4a715a5d450a29fb12fc1bceac89934604edbd2b50b557bf664736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = StkWellHyperdriveCoreDeployerContractFunctions(stkwellhyperdrivecoredeployer_abi, self.w3, address)  # type: ignore

    functions: StkWellHyperdriveCoreDeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = StkWellHyperdriveCoreDeployerContractFunctions(
            stkwellhyperdrivecoredeployer_abi, w3, None
        )

        return contract
