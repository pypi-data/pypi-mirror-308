"""A web3.py Contract class for the MorphoBlueTarget2Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract
from ..MorphoBlueConversions import MorphoBlueConversionsContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

morphobluetarget2deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {
                    "name": "_extraData",
                    "type": "bytes",
                    "internalType": "bytes",
                },
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class MorphoBlueTarget2DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the MorphoBlueTarget2Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class MorphoBlueTarget2DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = MorphoBlueTarget2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlueTarget2DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, _extraData: bytes, _salt: bytes) -> MorphoBlueTarget2DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> MorphoBlueTarget2DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            MorphoBlueTarget2DeployerDeployTargetContractFunction0._type_signature: MorphoBlueTarget2DeployerDeployTargetContractFunction0.factory(
                "MorphoBlueTarget2DeployerDeployTargetContractFunction0",
                **kwargs,
            ),
        }
        return out


class MorphoBlueTarget2DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the MorphoBlueTarget2Deployer contract."""

    deployTarget: MorphoBlueTarget2DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            MorphoBlueTarget2DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class MorphoBlueTarget2DeployerContract(Contract):
    """A web3.py Contract class for the MorphoBlueTarget2Deployer contract."""

    abi: ABI = morphobluetarget2deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f09060e401602060405180830381865af41580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190613dec565b60006116326040830160208401613be7565b1561163e57508261164b565b6116488484612a02565b90505b9392505050565b6002546001600160801b03168381101561166e5761166e6126a3565b60045490849003907f0000000000000000000000000000000000000000000000000000000000000000906116a6908390600f0b612a17565b10156116b4576116b46126a3565b6004546116fe9061102390600160801b90046001600160801b03166116e1670de0b6b3a764000086613d8d565b600554600160801b90046001600160801b03169190896001612708565b600580546001600160801b03928316600160801b02921691909117905561172481611b01565b600280546001600160801b0319166001600160801b039290921691909117905561174d85611b01565b6002805460109061176f908490600160801b90046001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061179c85611b01565b600480546010906117be908490600160801b90046001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060006117ed836127b0565b90506111e0816117fc88611db7565b6111db9084613d50565b60008061183e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333088612a3d565b61189e7f000000000000000000000000000000000000000000000000000000000000000061186d876001613b94565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612aaa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a99aad896040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525087600030600067ffffffffffffffff8111156119d6576119d6613e05565b6040519080825280601f01601f191660200182016040528015611a00576020820181803683370190505b506040518663ffffffff1660e01b8152600401611a21959493929190613e3f565b60408051808303816000875af1158015611a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a639190613ecf565b925060009150505b935093915050565b60405163350b944160e11b815260040160405180910390fd5b6000826000190484118302158202611aa357600080fd5b5091020490565b6000611ab68284613f09565b6106b79084613cb5565b6002546004546000916106ec916001600160801b0390911690600f0b612a17565b6000611af882611af2858888611a8c565b90612b3a565b95945050505050565b60006001600160801b03821115611b2b57604051630f0af95160e11b815260040160405180910390fd5b5090565b6000818311611b3e57826106b7565b50919050565b6006546000908190611b67908490600160801b90046001600160801b03166106a2565b6006546201000090046001600160701b03169250905081811115611ce3576000611b918383613cb5565b9050611ba0611023828661149f565b60068054601090611bc2908490600160801b90046001600160801b0316613da4565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611bfb8583612a0290919063ffffffff16565b90506000611c29827f00000000000000000000000000000000000000000000000000000000000000006106a2565b90508060096000828254611c3d9190613b94565b90915550611c4d90508183613cb5565b9150611c5882611b01565b60028054600090611c739084906001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611ca082612ba5565b60048054600090611cb5908490600f0b613f1d565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b600080611cf58785612a02565b91506000611d23837f00000000000000000000000000000000000000000000000000000000000000006106a2565b9050611d4f817f00000000000000000000000000000000000000000000000000000000000000006106a2565b91508315611d7257611d618282613cb5565b611d6b9084613cb5565b9250611d89565b611d7c8282613cb5565b611d869084613b94565b92505b86861015611dac57611d9c838789611a8c565b9250611da9828789611a8c565b91505b509550959350505050565b60006001600160ff1b03821115611b2b5760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b0316611e2a61102382611e0d670de0b6b3a764000086613d8d565b600554600160801b90046001600160801b031691908a6000612708565b600580546001600160801b03928316600160801b029216919091179055611e5086611b01565b611e5a9082613da4565b600480546001600160801b03928316600160801b029216919091179055611e8084611b01565b60028054600090611e9b9084906001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611ec883612bcf565b60048054600090611edd908490600f0b613f1d565b92506101000a8154816001600160801b030219169083600f0b6001600160801b03160217905550611f0d85611b01565b60028054601090611f2f908490600160801b90046001600160801b0316613da4565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b600080611f7384611f6d8a888a611a8c565b90612a02565b9050611f80888486611a8c565b611f8a9082613b94565b905086811115611f9a5786810391505b509695505050505050565b60006001600160701b03821115611b2b5760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b03168381108061201157507f000000000000000000000000000000000000000000000000000000000000000061200f8583613cb5565b105b1561201e5761201e6126a3565b6004549084900390600f0b6120338482613d50565b90508361203f86611db7565b13801561207457507f00000000000000000000000000000000000000000000000000000000000000006120728383612a17565b105b15612081576120816126a3565b600354600160801b90046001600160801b03166120c3611023826120ad670de0b6b3a764000088613d8d565b6005546001600160801b031691908c6000612708565b600580546001600160801b0319166001600160801b03929092169190911790556120ed8882613cb5565b90506120f881611b01565b600380546001600160801b03928316600160801b02921691909117905561211e83611b01565b600280546001600160801b0319166001600160801b039290921691909117905561214782612bcf565b600480546001600160801b0319166001600160801b039290921691909117905561217087611b01565b60028054601090612192908490600160801b90046001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b6003546121db90611023906001600160801b03168484612c0b565b600380546001600160801b0319166001600160801b03929092169190911790555050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e7543549091829161224a916001600160801b031690613cb5565b90508060000361225e5760019150506106ba565b600061226985612c72565b90508060000361227e576001925050506106ba565b60008061228c838589612d0e565b91509150806122a25760009450505050506106ba565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b81526004016122de929190613fc8565b6040805180830381865af41580156122fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231e9190613ecf565b9150915061233c61232e82611db7565b6123379061403e565b612e82565b92508261235257600096505050505050506106ba565b61235b82611b01565b600780546000906123769084906001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506123a381611b01565b600780546010906123c5908490600160801b90046001600160801b0316613d30565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6124228761301a565b6040518263ffffffff1660e01b815260040161243e919061405a565b6040805180830381865af415801561245a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247e9190614069565b9150915080612494575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b0316916124fa91613b94565b6125049190613cb5565b90508060000361251c57506000958695509350505050565b600080871161252c576000612537565b612537848884611a8c565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff81111561256b5761256b613e05565b6040519080825280601f01601f191660200182016040528015612595576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156125b6578692505b828152826000602083013e90999098509650505050505050565b60006125f18787876125ea88670de0b6b3a7640000613cb5565b8787613154565b979650505050505050565b600061164861263d61261684670de0b6b3a7640000613cb5565b611488670de0b6b3a764000061262c818a61149f565b6126369190613cb5565b8790612882565b61264f90670de0b6b3a7640000613b94565b611f6d84670de0b6b3a7640000613cb5565b60008061269885612670611ac0565b61267a9190613b94565b600254610ef2908790600160801b90046001600160801b0316613cb5565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b60008060008060006126cf898789613177565b90925090506126de8289613cb5565b975060006126ed82888a611a8c565b90506126f9818b613cb5565b9a989950979650505050505050565b600082600003612719575084611af8565b811561276c5761274a61272c8487613b94565b61273685876106a2565b612740888a6106a2565b611f6d9190613b94565b905060006127588588611b2f565b905080821015612766578091505b50611af8565b82850361277b57506000611af8565b6127a66127888487613cb5565b6127928587612882565b61279c888a6106a2565b611f6d9190613cb5565b9695505050505050565b60006127d8600b60006127c4600286611229565b815260200190815260200160002054611db7565b6127ea600b60006127c4600187611229565b6106ba9190613d50565b60006128207f000000000000000000000000000000000000000000000000000000000000000083612882565b60035461283691906001600160801b0316613b94565b60025461284c906001600160801b0316846106a2565b101592915050565b60006106ba8260046121ff565b60006125f187878761287b88670de0b6b3a7640000613cb5565b87876131f7565b60006106b78383670de0b6b3a76400006129dc565b60008080806128e887866128e18b6114886128ba8c670de0b6b3a7640000613cb5565b7f000000000000000000000000000000000000000000000000000000000000000090612882565b91906129dc565b9350612914847f00000000000000000000000000000000000000000000000000000000000000006106a2565b9150600061293561292d89670de0b6b3a7640000613cb5565b8a90886129dc565b9050612961817f0000000000000000000000000000000000000000000000000000000000000000612882565b935061298d847f00000000000000000000000000000000000000000000000000000000000000006106a2565b6129979084613b94565b915050945094509450949050565b60008183116129b457816106b7565b5090919050565b6000806129d3846129cd8a888a6129dc565b9061149f565b9050611f808884865b60008260001904841183021582026129f357600080fd5b50910281810615159190040190565b60006106b783670de0b6b3a764000084611a8c565b600080612a248484613208565b909250905080612a3657612a366126a3565b5092915050565b6040516001600160a01b038481166024830152838116604483015260648201839052612aa49186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050613244565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052612afb84826132b1565b612aa4576040516001600160a01b03848116602483015260006044830152612b3091869182169063095ea7b390606401612a72565b612aa48482613244565b600081600003612b535750670de0b6b3a76400006106ba565b82600003612b63575060006106ba565b6000612b6e83611db7565b90506000612b83612b7e86611db7565b613354565b9050818102612b9a670de0b6b3a764000082614099565b90506127a68161357a565b600060016001607f1b03821115611b2b5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612bed575060016001607f1b0382135b15611b2b5760405163a5353be560e01b815260040160405180910390fd5b600080612c1984600061370f565b612c2484600061370f565b612c2e9190613d50565b90506000811315612c4a57612c438186613b94565b9450612c69565b6000811215612c6957612c5c8161403e565b612c669086613cb5565b94505b50929392505050565b6003546000908190612c8d906001600160801b03168461149f565b9050612cb97f000000000000000000000000000000000000000000000000000000000000000082613b94565b6002546001600160801b03161115611b3e576002547f000000000000000000000000000000000000000000000000000000000000000090612d049083906001600160801b0316613cb5565b61164b9190613cb5565b612d16613a6c565b600080612d228461301a565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612d5d919061405a565b6040805180830381865af4158015612d79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d9d9190614069565b9350905082612db2575060009150611a6b9050565b6000612dd9612dd48461016001518561014001516106a290919063ffffffff16565b611db7565b612df9612dd485610120015186610100015161288290919063ffffffff16565b612e039190613d50565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5f91906140c7565b935093509350935080612f7b5750600098975050505050505050565b868414612fac57612f8b84611b01565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612fdd57612fbc83612bcf565b600480546001600160801b0319166001600160801b03929092169190911790555b84821461300b57612fed82611b01565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b613022613abe565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e0830152600354048216610100820152600554909161012083019161311a911661371e565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261314c9290041661371e565b905292915050565b600080613165888888888888613794565b909250905080611f9a57611f9a6126a3565b6000806131c18561148885817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400006131b7818c61149f565b6114889190613cb5565b91506131ed827f00000000000000000000000000000000000000000000000000000000000000006106a2565b9050935093915050565b60008061316588888888888861385c565b60008060008361321786611db7565b6132219190613d50565b9050600081121561323957600080925092505061069b565b946001945092505050565b60006132596001600160a01b0384168361391c565b9050805160001415801561327e57508080602001905181019061327c91906140fd565b155b156132ac57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516132ce919061411a565b6000604051808303816000865af19150503d806000811461330b576040519150601f19603f3d011682016040523d82523d6000602084013e613310565b606091505b509150915081801561333a57508051158061333a57508080602001905181019061333a91906140fd565b8015611af85750505050506001600160a01b03163b151590565b60008082136133765760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906133f99084901c611db7565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361359557506000919050565b680755bf798b4a1bf1e582126135be576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b0181810595509293509091906127a674029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611db7565b60008183136129b457816106b7565b600080670de0b6b3a76400006137326106c0565b61373c9190613d8d565b905080831161374c576000613756565b6137568184613cb5565b915061164b61378d670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613d8d565b8390612a02565b60008060006137a6898988888861392a565b90506137c086611af26137b98a8d613b94565b87906106a2565b98506137cd858a86611a8c565b9850888110156137e4576000809250925050613851565b888103670de0b6b3a764000081106138195761381261380b670de0b6b3a76400008961149f565b8290612b3a565b9050613831565b61382e61380b670de0b6b3a764000089612a02565b90505b8089101561384757600080935093505050613851565b8803925060019150505b965096945050505050565b600080600061386e898988888861392a565b905061387e86611af2898b613b94565b975087811015613895576000809250925050613851565b8781036138a38186886129dc565b9050670de0b6b3a764000081106138d0576138c961380b670de0b6b3a76400008961149f565b90506138e8565b6138e561380b670de0b6b3a764000089612a02565b90505b6138f2818661149f565b9050808a101561390a57600080935093505050613851565b90980398600198509650505050505050565b60606106b783836000613959565b60006139368585612b3a565b61394f61394786611af2868b612882565b8590856129dc565b6127a69190613b94565b60608147101561397e5760405163cd78605960e01b81523060048201526024016132a3565b600080856001600160a01b0316848660405161399a919061411a565b60006040518083038185875af1925050503d80600081146139d7576040519150601f19603f3d011682016040523d82523d6000602084013e6139dc565b606091505b50915091506127a68683836060826139fc576139f782613a43565b61164b565b8151158015613a1357506001600160a01b0384163b155b15613a3c57604051639996b31560e01b81526001600160a01b03851660048201526024016132a3565b508061164b565b805115613a535780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b604051806101200160405280613a80613abe565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008060008060808587031215613b3557600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115613b6157600080fd5b850160608188031215613b7357600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba613b7e565b6001600160a01b03811681146105ca57600080fd5b600060208284031215613bce57600080fd5b813561164b81613ba7565b80151581146105ca57600080fd5b600060208284031215613bf957600080fd5b813561164b81613bd9565b6000808335601e19843603018112613c1b57600080fd5b83018035915067ffffffffffffffff821115613c3657600080fd5b60200191503681900382131561069b57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a08201526000613ca860c083018486613c4b565b9998505050505050505050565b818103818111156106ba576106ba613b7e565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c08201526000613d0260e083018486613c4b565b9a9950505050505050505050565b6001600160701b03818116838216019080821115612a3657612a36613b7e565b6001600160801b03818116838216019080821115612a3657612a36613b7e565b8181036000831280158383131683831282161715612a3657612a36613b7e565b600060208284031215613d8257600080fd5b815161164b81613ba7565b80820281158282048414176106ba576106ba613b7e565b6001600160801b03828116828216039080821115612a3657612a36613b7e565b8082018281126000831280158216821582161715613de457613de4613b7e565b505092915050565b600060208284031215613dfe57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015613e36578181015183820152602001613e1e565b50506000910152565b600061012060018060a01b038089511684528060208a01511660208501528060408a01511660408501528060608a0151166060850152608089015160808501528760a08501528660c085015280861660e08501525080610100840152835180828501526101409150613eb78183860160208801613e1b565b601f01601f1916929092019091019695505050505050565b60008060408385031215613ee257600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600082613f1857613f18613ef3565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106ba576106ba613b7e565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613fdc828551613f4a565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b6000600160ff1b820161405357614053613b7e565b5060000390565b61018081016106ba8284613f4a565b6000806040838503121561407c57600080fd5b82519150602083015161408e81613bd9565b809150509250929050565b6000826140a8576140a8613ef3565b600160ff1b8214600019841416156140c2576140c2613b7e565b500590565b600080600080608085870312156140dd57600080fd5b8451935060208501519250604085015191506060850151613b7381613bd9565b60006020828403121561410f57600080fd5b815161164b81613bd9565b6000825161412c818460208701613e1b565b919091019291505056fea2646970667358221220c2b36268a86f8acf7ad84b848c3f491fb8c0329de40372c7f600ec587d00cc1664736f6c63430008160033a2646970667358221220b22c4d5cbd91ad09fef1ce7c9ed652aab9dc7f363a2dde5cc5bbd06c3a8aea5064736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = MorphoBlueTarget2DeployerContractFunctions(morphobluetarget2deployer_abi, self.w3, address)  # type: ignore

    functions: MorphoBlueTarget2DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        MorphoBlueConversions: MorphoBlueConversionsContract

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "MorphoBlueConversions": "__$04b283107449142c3a86c88d1d4ad5a326$__",
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["MorphoBlueConversions"],
                link_references.MorphoBlueConversions.address[2:].lower(),
            )

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = MorphoBlueTarget2DeployerContractFunctions(
            morphobluetarget2deployer_abi, w3, None
        )

        return contract
