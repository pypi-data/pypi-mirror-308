"""A web3.py Contract class for the AaveL2Target2Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

aavel2target2deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class AaveL2Target2DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the AaveL2Target2Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class AaveL2Target2DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = AaveL2Target2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class AaveL2Target2DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> AaveL2Target2DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> AaveL2Target2DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            AaveL2Target2DeployerDeployTargetContractFunction0._type_signature: AaveL2Target2DeployerDeployTargetContractFunction0.factory(
                "AaveL2Target2DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class AaveL2Target2DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the AaveL2Target2Deployer contract."""

    deployTarget: AaveL2Target2DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            AaveL2Target2DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class AaveL2Target2DeployerContract(Contract):
    """A web3.py Contract class for the AaveL2Target2Deployer contract."""

    abi: ABI = aavel2target2deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b815260040161214d929190613f11565b6040805180830381865af4158015612169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218d9190613f87565b915091506121ab61219d82611c26565b6121a690613fab565b612e13565b9250826121c157600096505050505050506106ba565b6121ca82611970565b600780546000906121e59084906001600160801b0316613d53565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061221281611970565b60078054601090612234908490600160801b90046001600160801b0316613d53565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61229187612fab565b6040518263ffffffff1660e01b81526004016122ad9190613fc7565b6040805180830381865af41580156122c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ed9190613fd6565b9150915080612303575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161236991613bb7565b6123739190613cd8565b90508060000361238b57506000958695509350505050565b600080871161239b5760006123a6565b6123a68488846118fb565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156123da576123da614006565b6040519080825280601f01601f191660200182016040528015612404576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612425578692505b828152826000602083013e90999098509650505050505050565b600061246087878761245988670de0b6b3a7640000613cd8565b87876130e5565b979650505050505050565b60006115296124ac61248584670de0b6b3a7640000613cd8565b611488670de0b6b3a764000061249b818a61149f565b6124a59190613cd8565b87906126f1565b6124be90670de0b6b3a7640000613bb7565b611ddc84670de0b6b3a7640000613cd8565b600080612507856124df61192f565b6124e99190613bb7565b600254610ef2908790600160801b90046001600160801b0316613cd8565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600080600080600061253e898789613108565b909250905061254d8289613cd8565b9750600061255c82888a6118fb565b9050612568818b613cd8565b9a989950979650505050505050565b600082600003612588575084611967565b81156125db576125b961259b8487613bb7565b6125a585876106a2565b6125af888a6106a2565b611ddc9190613bb7565b905060006125c7858861199e565b9050808210156125d5578091505b50611967565b8285036125ea57506000611967565b6126156125f78487613cd8565b61260185876126f1565b61260b888a6106a2565b611ddc9190613cd8565b9695505050505050565b6000612647600b6000612633600286611229565b815260200190815260200160002054611c26565b612659600b6000612633600187611229565b6106ba9190613d73565b600061268f7f0000000000000000000000000000000000000000000000000000000000000000836126f1565b6003546126a591906001600160801b0316613bb7565b6002546126bb906001600160801b0316846106a2565b101592915050565b60006106ba82600461206e565b60006124608787876126ea88670de0b6b3a7640000613cd8565b8787613188565b60006106b78383670de0b6b3a764000061284b565b600080808061275787866127508b6114886127298c670de0b6b3a7640000613cd8565b7f0000000000000000000000000000000000000000000000000000000000000000906126f1565b919061284b565b9350612783847f00000000000000000000000000000000000000000000000000000000000000006106a2565b915060006127a461279c89670de0b6b3a7640000613cd8565b8a908861284b565b90506127d0817f00000000000000000000000000000000000000000000000000000000000000006126f1565b93506127fc847f00000000000000000000000000000000000000000000000000000000000000006106a2565b6128069084613bb7565b915050945094509450949050565b600081831161282357816106b7565b5090919050565b6000806128428461283c8a888a61284b565b9061149f565b9050611def8884865b600082600019048411830215820261286257600080fd5b50910281810615159190040190565b60006115296128808585613199565b83906b033b2e3c9fd0803ce80000006118fb565b60006106b783670de0b6b3a7640000846118fb565b6000806128b68484613207565b9092509050806128c8576128c8612512565b5092915050565b6040516001600160a01b0384811660248301528381166044830152606482018390526118f59186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050613243565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261298784826132b0565b6118f5576040516001600160a01b038481166024830152600060448301526129bc91869182169063095ea7b390606401612904565b6118f58482613243565b6040516335ea6a7560e01b81526001600160a01b03848116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a75906024016101e060405180830381865afa158015612a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a5691906140e2565b60e0015190506000612a6785611970565b60101b609085901b01919091019150509392505050565b60006106ba7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084613353565b600081600003612ae45750670de0b6b3a76400006106ba565b82600003612af4575060006106ba565b6000612aff83611c26565b90506000612b14612b0f86611c26565b613377565b9050818102612b2b670de0b6b3a764000082614205565b90506126158161359d565b600060016001607f1b0382111561199a5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612b7e575060016001607f1b0382135b1561199a5760405163a5353be560e01b815260040160405180910390fd5b600080612baa846000613732565b612bb5846000613732565b612bbf9190613d73565b90506000811315612bdb57612bd48186613bb7565b9450612bfa565b6000811215612bfa57612bed81613fab565b612bf79086613cd8565b94505b50929392505050565b6003546000908190612c1e906001600160801b03168461149f565b9050612c4a7f000000000000000000000000000000000000000000000000000000000000000082613bb7565b6002546001600160801b031611156119ad576002547f000000000000000000000000000000000000000000000000000000000000000090612c959083906001600160801b0316613cd8565b61152c9190613cd8565b612ca7613a8f565b600080612cb384612fab565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612cee9190613fc7565b6040805180830381865af4158015612d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2e9190613fd6565b9350905082612d4357506000915061183b9050565b6000612d6a612d658461016001518561014001516106a290919063ffffffff16565b611c26565b612d8a612d658561012001518661010001516126f190919063ffffffff16565b612d949190613d73565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612ecc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ef09190614233565b935093509350935080612f0c5750600098975050505050505050565b868414612f3d57612f1c84611970565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612f6e57612f4d83612b60565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612f9c57612f7e82611970565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612fb3613ae1565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916130ab9116613741565b81526004546001600160801b03600160801b91829004811660208401526005546040909301926130dd92900416613741565b905292915050565b6000806130f68888888888886137b7565b909250905080611e0957611e09612512565b6000806131528561148885817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613148818c61149f565b6114889190613cd8565b915061317e827f00000000000000000000000000000000000000000000000000000000000000006106a2565b9050935093915050565b6000806130f688888888888861387f565b60405163d15e005360e01b81526001600160a01b0383811660048301526000919083169063d15e005390602401602060405180830381865afa1580156131e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190614269565b60008060008361321686611c26565b6132209190613d73565b9050600081121561323857600080925092505061069b565b946001945092505050565b60006132586001600160a01b0384168361393f565b9050805160001415801561327d57508080602001905181019061327b9190613e1f565b155b156132ab57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516132cd9190614282565b6000604051808303816000865af19150503d806000811461330a576040519150601f19603f3d011682016040523d82523d6000602084013e61330f565b606091505b50915091508180156133395750805115806133395750808060200190518101906133399190613e1f565b80156119675750505050506001600160a01b03163b151590565b60006115296b033b2e3c9fd0803ce800000061336f8686613199565b8491906118fb565b60008082136133995760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f1982019061341c9084901c611c26565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e1982136135b857506000919050565b680755bf798b4a1bf1e582126135e1576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b01818105955092935090919061261574029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611c26565b600081831361282357816106b7565b600080670de0b6b3a76400006137556106c0565b61375f9190613dc0565b905080831161376f576000613779565b6137798184613cd8565b915061152c6137b0670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613dc0565b8390612894565b60008060006137c9898988888861394d565b90506137e3866119616137dc8a8d613bb7565b87906106a2565b98506137f0858a866118fb565b985088811015613807576000809250925050613874565b888103670de0b6b3a7640000811061383c5761383561382e670de0b6b3a76400008961149f565b8290612acb565b9050613854565b61385161382e670de0b6b3a764000089612894565b90505b8089101561386a57600080935093505050613874565b8803925060019150505b965096945050505050565b6000806000613891898988888861394d565b90506138a186611961898b613bb7565b9750878110156138b8576000809250925050613874565b8781036138c681868861284b565b9050670de0b6b3a764000081106138f3576138ec61382e670de0b6b3a76400008961149f565b905061390b565b61390861382e670de0b6b3a764000089612894565b90505b613915818661149f565b9050808a101561392d57600080935093505050613874565b90980398600198509650505050505050565b60606106b78383600061397c565b60006139598585612acb565b61397261396a86611961868b6126f1565b85908561284b565b6126159190613bb7565b6060814710156139a15760405163cd78605960e01b81523060048201526024016132a2565b600080856001600160a01b031684866040516139bd9190614282565b60006040518083038185875af1925050503d80600081146139fa576040519150601f19603f3d011682016040523d82523d6000602084013e6139ff565b606091505b5091509150612615868383606082613a1f57613a1a82613a66565b61152c565b8151158015613a3657506001600160a01b0384163b155b15613a5f57604051639996b31560e01b81526001600160a01b03851660048201526024016132a2565b508061152c565b805115613a765780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b604051806101200160405280613aa3613ae1565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008060008060808587031215613b5857600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115613b8457600080fd5b850160608188031215613b9657600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba613ba1565b6001600160a01b03811681146105ca57600080fd5b600060208284031215613bf157600080fd5b813561152c81613bca565b80151581146105ca57600080fd5b600060208284031215613c1c57600080fd5b813561152c81613bfc565b6000808335601e19843603018112613c3e57600080fd5b83018035915067ffffffffffffffff821115613c5957600080fd5b60200191503681900382131561069b57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a08201526000613ccb60c083018486613c6e565b9998505050505050505050565b818103818111156106ba576106ba613ba1565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c08201526000613d2560e083018486613c6e565b9a9950505050505050505050565b6001600160701b038181168382160190808211156128c8576128c8613ba1565b6001600160801b038181168382160190808211156128c8576128c8613ba1565b81810360008312801583831316838312821617156128c8576128c8613ba1565b8051613d9e81613bca565b919050565b600060208284031215613db557600080fd5b815161152c81613bca565b80820281158282048414176106ba576106ba613ba1565b6001600160801b038281168282160390808211156128c8576128c8613ba1565b8082018281126000831280158216821582161715613e1757613e17613ba1565b505092915050565b600060208284031215613e3157600080fd5b815161152c81613bfc565b634e487b7160e01b600052601260045260246000fd5b600082613e6157613e61613e3c565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106ba576106ba613ba1565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613f25828551613e93565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613f9a57600080fd5b505080516020909101519092909150565b6000600160ff1b8201613fc057613fc0613ba1565b5060000390565b61018081016106ba8284613e93565b60008060408385031215613fe957600080fd5b825191506020830151613ffb81613bfc565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff8111828210171561404e57634e487b7160e01b600052604160045260246000fd5b60405290565b60006020828403121561406657600080fd5b6040516020810181811067ffffffffffffffff8211171561409757634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516001600160801b0381168114613d9e57600080fd5b805164ffffffffff81168114613d9e57600080fd5b805161ffff81168114613d9e57600080fd5b60006101e082840312156140f557600080fd5b6140fd61401c565b6141078484614054565b8152614115602084016140a4565b6020820152614126604084016140a4565b6040820152614137606084016140a4565b6060820152614148608084016140a4565b608082015261415960a084016140a4565b60a082015261416a60c084016140bb565b60c082015261417b60e084016140d0565b60e082015261010061418e818501613d93565b908201526101206141a0848201613d93565b908201526101406141b2848201613d93565b908201526101606141c4848201613d93565b908201526101806141d68482016140a4565b908201526101a06141e88482016140a4565b908201526101c06141fa8482016140a4565b908201529392505050565b60008261421457614214613e3c565b600160ff1b82146000198414161561422e5761422e613ba1565b500590565b6000806000806080858703121561424957600080fd5b8451935060208501519250604085015191506060850151613b9681613bfc565b60006020828403121561427b57600080fd5b5051919050565b6000825160005b818110156142a35760208186018101518583015201614289565b50600092019182525091905056fea2646970667358221220d317bfe2aecb5b8cc99361afc0354a4cda3f091b83f219813e2dcc96a8206e0964736f6c63430008160033a26469706673582212208e44af9d4cf9756a67aa0c1d931ac0aebd02c9cf12c1ad4cb67e2aa4099c9a8f64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = AaveL2Target2DeployerContractFunctions(aavel2target2deployer_abi, self.w3, address)  # type: ignore

    functions: AaveL2Target2DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = AaveL2Target2DeployerContractFunctions(
            aavel2target2deployer_abi, w3, None
        )

        return contract
