"""A web3.py Contract class for the AaveL2Target0Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

aavel2target0deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class AaveL2Target0DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the AaveL2Target0Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class AaveL2Target0DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = AaveL2Target0DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class AaveL2Target0DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> AaveL2Target0DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> AaveL2Target0DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            AaveL2Target0DeployerDeployTargetContractFunction0._type_signature: AaveL2Target0DeployerDeployTargetContractFunction0.factory(
                "AaveL2Target0DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class AaveL2Target0DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the AaveL2Target0Deployer contract."""

    deployTarget: AaveL2Target0DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            AaveL2Target0DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class AaveL2Target0DeployerContract(Contract):
    """A web3.py Contract class for the AaveL2Target0Deployer contract."""

    abi: ABI = aavel2target0deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x608060405234801561001057600080fd5b50614ce5806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638c98b3c61462000033575b600080fd5b6200004a6200004436600462000247565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b60408051336020820152908101829052600090606001604051602081830303815290604052805190602001208585604051620000a290620000da565b620000af929190620003bc565b8190604051809103906000f5905080158015620000d0573d6000803e3d6000fd5b5095945050505050565b6147bf80620004f183390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff81118282101715620001255762000125620000e8565b60405290565b80356001600160a01b03811681146200014357600080fd5b919050565b6000608082840312156200015b57600080fd5b6040516080810181811067ffffffffffffffff82111715620001815762000181620000e8565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112620001c457600080fd5b813567ffffffffffffffff80821115620001e257620001e2620000e8565b604051601f8301601f19908116603f011681019082821181831017156200020d576200020d620000e8565b816040528381528660208588010111156200022757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000808486036102c08112156200026057600080fd5b610260808212156200027157600080fd5b6200027b620000fe565b915062000288876200012b565b825262000298602088016200012b565b6020830152620002ab604088016200012b565b6040830152606087013560608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e0830152610100808801358184015250610120808801358184015250610140808801358184015250610160620003168189016200012b565b908301526101806200032a8882016200012b565b908301526101a06200033e8882016200012b565b908301526101c0620003528882016200012b565b908301526101e0620003678989830162000148565b81840152508195506200037c8188016200012b565b9450505061028085013567ffffffffffffffff8111156200039c57600080fd5b620003aa87828801620001b2565b949793965093946102a0013593505050565b82516001600160a01b0316815261028081016020840151620003e960208401826001600160a01b03169052565b5060408401516200040560408401826001600160a01b03169052565b50606084015160608301526080840151608083015260a084015160a083015260c084015160c083015260e084015160e08301526101008085015181840152506101208085015181840152506101408085015181840152506101608085015162000478828501826001600160a01b03169052565b5050610180848101516001600160a01b03908116918401919091526101a0808601518216908401526101c0808601518216908401526101e0948501518051958401959095526020850151610200840152604085015161022084015260609094015161024083015291909216610260909201919091529056fe6102a06040523480156200001257600080fd5b50604051620047bf380380620047bf833981016040819052620000359162000578565b600160005581516001600160a01b039081166080908152602080850151831660a0818152928601516101a052918501516101c05260c0808601516101e090815260e08088015161020052610120808901519093526101008089015190915261014080890151909152908701805151909252815183015190528051604090810151610160529051606090810151610180528187015185166102405286015161026052928416610220528251633a9ae92360e11b815292519192637535d24692600480830193928290030181865afa15801562000114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013a9190620006b5565b6001600160a01b039081166102808190526080516200015d921690600162000165565b50506200072a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001bf90859083906200023116565b6200022b57604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200021f918691620002e216565b6200022b8482620002e2565b50505050565b6000806000846001600160a01b031684604051620002509190620006d5565b6000604051808303816000865af19150503d80600081146200028f576040519150601f19603f3d011682016040523d82523d6000602084013e62000294565b606091505b5091509150818015620002c2575080511580620002c2575080806020019051810190620002c2919062000706565b8015620002d957506000856001600160a01b03163b115b95945050505050565b6000620002f96001600160a01b0384168362000355565b90508051600014158015620003215750808060200190518101906200031f919062000706565b155b156200035057604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b606062000365838360006200036c565b9392505050565b606081471015620003935760405163cd78605960e01b815230600482015260240162000347565b600080856001600160a01b03168486604051620003b19190620006d5565b60006040518083038185875af1925050503d8060008114620003f0576040519150601f19603f3d011682016040523d82523d6000602084013e620003f5565b606091505b5090925090506200040886838362000412565b9695505050505050565b6060826200042b57620004258262000476565b62000365565b81511580156200044357506001600160a01b0384163b155b156200046e57604051639996b31560e01b81526001600160a01b038516600482015260240162000347565b508062000365565b805115620004875780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60405161020081016001600160401b0381118282101715620004d557634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b0381168114620004a057600080fd5b8051620004fe81620004db565b919050565b6000608082840312156200051657600080fd5b604051608081016001600160401b03811182821017156200054757634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000808284036102808112156200058e57600080fd5b610260808212156200059f57600080fd5b620005a9620004a3565b9150620005b685620004f1565b8252620005c660208601620004f1565b6020830152620005d960408601620004f1565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e083015261010080860151818401525061012080860151818401525061014080860151818401525061016062000644818701620004f1565b9083015261018062000658868201620004f1565b908301526101a06200066c868201620004f1565b908301526101c062000680868201620004f1565b908301526101e0620006958787830162000503565b8184015250819350620006aa818601620004f1565b925050509250929050565b600060208284031215620006c857600080fd5b81516200036581620004db565b6000825160005b81811015620006f85760208186018101518583015201620006dc565b506000920191825250919050565b6000602082840312156200071957600080fd5b815180151581146200036557600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516102605161028051613eec620008d36000396000818161154c01528181612692015281816126df01528181612b3f0152612dca015260008181610d9b01526123e8015260008181610d6c01526123ab015260008181610c4601528181610ecb01528181610f5b01528181610feb0152818161107b015281816116d60152818161176e0152818161193701528181611f6201528181612038015261218f01526000610e33015260008181610e0d015261259b015260008181610de70152612575015260008181610dc1015261254f01526000611188015260006111620152600061113c01526000611116015260008181610ea501526125c1015260008181610e590152818161131d0152612993015260008181610e7f0152612d0601526000818161062501528181610d3d01528181611ed30152612c5801526000818161075501528181610d0e015281816112b601528181612671015281816126be01528181612af90152612bdd0152613eec6000f3fe608060405234801561001057600080fd5b506004361061023c5760003560e01c806360246c881161013b578063becee9c3116100b8578063d81657431161007c578063d816574314610504578063e44808bc14610519578063e985e9c51461052c578063fba560081461053f578063fbfa77cf1461056e57600080fd5b8063becee9c3146104ae578063c55dae63146104ce578063c69e16ad146104d6578063c6e6f592146104de578063cf210e65146104f157600080fd5b8063a22cb465116100ff578063a22cb4651461044f578063ab033ea914610462578063b0d9658014610473578063b88fed9f14610488578063bd85b0391461049b57600080fd5b806360246c88146103fa5780637180c8ca1461040f5780637ecebe0014610421578063950c5d03146104345780639cd241af1461043c57600080fd5b806320fc4881116101c95780633e691db91161018d5780633e691db91461039657806346fbf68e146103a95780634e41a1fb146103cc5780634ed2d6ac146103df57806354fd4d50146103f257600080fd5b806320fc4881146102fb57806321ff32a914610340578063313ce567146103615780633656eec21461037b5780633a98ef391461038e57600080fd5b806306fdde031161021057806306fdde031461029a5780630a4e1493146102a257806314e5f07b146102c257806317fad7fc146102d55780631c0f12b6146102e857600080fd5b8062ad800c1461024157806301681a621461026a57806302329a291461027f57806304baa00b14610292575b600080fd5b61025461024f366004613087565b610576565b60405161026191906130f0565b60405180910390f35b61027d610278366004613118565b6105ad565b005b61027d61028d366004613143565b6105b6565b6102546105bf565b610254610600565b6102aa610617565b6040516001600160a01b039091168152602001610261565b61027d6102d036600461316f565b610657565b61027d6102e336600461324a565b610673565b61027d6102f63660046132df565b610689565b61030e610309366004613087565b61069c565b6040805182516001600160801b0390811682526020808501518216908301529282015190921690820152606001610261565b61035361034e366004613327565b610708565b604051908152602001610261565b61036961074e565b60405160ff9091168152602001610261565b610353610389366004613369565b6107e9565b610353610822565b6103536103a4366004613399565b610841565b6103bc6103b7366004613118565b61084c565b6040519015158152602001610261565b6102546103da366004613087565b61086c565b61027d6103ed3660046133d4565b61087a565b6102546108c8565b6104026108fd565b604051610261919061341e565b61027d61041d3660046134bf565b5050565b61035361042f366004613118565b610c0c565b6102aa610c38565b61027d61044a3660046134ed565b610c78565b61027d61045d3660046134bf565b610c89565b61027d610470366004613118565b50565b61047b610cf5565b6040516102619190613525565b610353610496366004613087565b6111bd565b6103536104a9366004613087565b6111cb565b6104c16104bc36600461364b565b6111ed565b604051610261919061368d565b6102aa6112a8565b6103536112e8565b6103536104ec366004613087565b611302565b6103536104ff366004613087565b611310565b61050c611347565b60405161026191906136d1565b61027d6105273660046137e2565b611453565b6103bc61053a366004613841565b61149b565b6105476114df565b6040805182516001600160801b039081168252602093840151169281019290925201610261565b6102aa61153e565b60606105a86105848361157e565b60405160200161059491906130f0565b6040516020818303038152906040526116a6565b919050565b610470816116ca565b61047081611935565b60606105fd6040518060400160405280601081526020016f416176654c324879706572647269766560801b81525060405160200161059491906130f0565b90565b60606105fd6001604051602001610594919061386f565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105fd9101610594565b610668898989898989898989611a4f565b505050505050505050565b610681868686868686611c46565b505050505050565b6106968484848433611cfa565b50505050565b60408051606081018252600080825260208201819052918101919091526105a860086000848152602001908152602001600020604051602001610594919081546001600160801b03808216835260809190911c6020830152600190920154909116604082015260600190565b6000838152600d602090815260408083206001600160a01b03868116855290835281842090851684528252808320548151928301526107479101610594565b9392505050565b60006105fd7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d59190613920565b6040805160ff909216602083015201610594565b6000828152600a602090815260408083206001600160a01b038516845282528083205481519283015261081c9101610594565b92915050565b60006105fd61082f611ebb565b60405160200161059491815260200190565b600061081c82611f4b565b60006105a861085a8361218a565b60408051911515602083015201610594565b60606105a86105848361226f565b836108848161236d565b6001600160a01b0316336001600160a01b0316146108b557604051632aab8bd360e01b815260040160405180910390fd5b6108c18585858561242a565b5050505050565b60606105fd60405180604001604052806007815260200166076312e302e32360cc1b81525060405160200161059491906130f0565b610976604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610980612497565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654939450926001600160801b03909216916109eb9190613969565b6109f5919061397c565b905060008215610b075773__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610a22856124aa565b6040805160e084811b6001600160e01b03191682528351600483015260208401516024830152918301516044820152606083015160648201526080830151608482015260a083015160a482015260c083015160c48201529082015160e482015261010082015161010482015261012082015161012482015261014082015161014482015261016090910151610164820152610184016040805180830381865af4158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061398f565b509050610b048184612640565b90505b604080516101e0810182526002546001600160801b038082168352600454600f81900b60208501526006546001600160701b036201000082041695850195909552600160801b9485900482166060850152918490048116608084015260a0830186905260c08301879052600354849004811660e0840152600554808216610100850152918490048116610120840152908390048116610140830152600754808216610160840152929092049091166101808201526000906101a081018415610bd857610bd38486612655565b610bdb565b60005b81526003546001600160801b0316602091820152604051919250610c05916105949184910161341e565b5050505090565b6001600160a01b0381166000908152600e60209081526040808320548151928301526105a89101610594565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105fd9101610594565b610c848383833361242a565b505050565b336000818152600c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610cfd612fa0565b6105fd6040518061020001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b91906139bf565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb91906139bf565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b91906139bf565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb91906139bf565b6001600160a01b0316815260200160405180608001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000008152508152506040516020016105949190613525565b60006105a861082f8361266a565b6000818152600b60209081526040808320548151928301526105a89101610594565b606060008267ffffffffffffffff81111561120a5761120a6139dc565b604051908082528060200260200182016040528015611233578160200160208202803683370190505b50905060005b8381101561128c576000858583818110611255576112556139f2565b90506020020135905060008154905080848481518110611277576112776139f2565b60209081029190910101525050600101611239565b506112a181604051602001610594919061368d565b5092915050565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105fd9101610594565b60006105fd60095460405160200161059491815260200190565b60006105a861082f836126b7565b60006105a861082f6113427f000000000000000000000000000000000000000000000000000000000000000085613969565b612704565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091526105fd6002604051602001610594919081546001600160801b038082168352608091821c602084015260018401548082166040850152821c60608401526002840154600f81900b83850152821c60a0840152600384015490811660c0840152811c60e083015260049092015460ff8082161515610100840152600882901c1615156101208301526001600160701b03601082901c1661014083015290911c6101608201526101800190565b8461145d8161236d565b6001600160a01b0316336001600160a01b03161461148e57604051632aab8bd360e01b815260040160405180910390fd5b6106818686868686611cfa565b6001600160a01b038281166000908152600c60209081526040808320938516835292815282822054835160ff909116151591810191909152909161081c9101610594565b60408051808201909152600080825260208201526040805180820182526007546001600160801b03808216808452600160801b90920481166020938401908152845193840192909252905116918101919091526105fd90606001610594565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105fd9101610594565b606060f882901c6001600160f81b038316600061159a82612748565b905060008360038111156115b0576115b061393d565b036115e2576040518060400160405280600d81526020016c048797065726472697665204c5609c1b815250935061169e565b60018360038111156115f6576115f661393d565b03611622578060405160200161160c9190613a08565b604051602081830303815290604052935061169e565b60028360038111156116365761163661393d565b0361164c578060405160200161160c9190613a41565b60038360038111156116605761166061393d565b0361169e576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b80604051636e64089360e11b81526004016116c191906130f0565b60405180910390fd5b6116d26127fd565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175691906139bf565b9050336001600160a01b0382161480159061180457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ee91906139bf565b6001600160a01b0316336001600160a01b031614155b801561181657506118143361218a565b155b15611833576040516282b42960e81b815260040160405180910390fd5b600061183d611ebb565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa158015611887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ab9190613a7b565b90506118c16001600160a01b0385168483612827565b816118ca611ebb565b146118e8576040516313dd85ff60e31b815260040160405180910390fd5b836001600160a01b0316836001600160a01b03167f951f51ee88c8e42633698bba90d1e53c0954470938036879e691c0232b47e09660405160405180910390a35050506104706001600055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b791906139bf565b6001600160a01b0316336001600160a01b0316141580156119de57506119dc3361218a565b155b156119fb576040516282b42960e81b815260040160405180910390fd5b600680548215156101000261ff00199091161790556040517f7c4d1fe30fdbfda9e9c4c43e759ef32e4db5128d4cb58ff3ae9583b89b6242a590611a4490831515815260200190565b60405180910390a150565b83421115611a705760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b038716611a975760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038781166000818152600e602090815260408083205481518084018f905280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b61010083015261010282018c90526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611b85573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b031614611bc357604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b038981166000818152600e6020908152604080832080546001019055600c8252808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050505050565b6001600160a01b0386161580611c6357506001600160a01b038516155b15611c815760405163f0dd15fd60e01b815260040160405180910390fd5b828114611ca15760405163174861a760e31b815260040160405180910390fd5b60005b83811015611cf157611ce9858583818110611cc157611cc16139f2565b905060200201358888868686818110611cdc57611cdc6139f2565b9050602002013533611cfa565b600101611ca4565b50505050505050565b6001600160a01b0384161580611d1757506001600160a01b038316155b15611d355760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b031614611df9576001600160a01b038085166000908152600c602090815260408083209385168352929052205460ff16611df9576000858152600d602090815260408083206001600160a01b03808916855290835281842090851684529091529020546000198114611df7576000868152600d602090815260408083206001600160a01b03808a168552908352818420908616845290915281208054859290611df190849061397c565b90915550505b505b6000858152600a602090815260408083206001600160a01b038816845290915281208054849290611e2b90849061397c565b90915550506000858152600a602090815260408083206001600160a01b038716845290915281208054849290611e62908490613969565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f469190613a7b565b905090565b6000611f556127fd565b611f5e82612879565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe291906139bf565b90506001600160a01b038116611ffb6020850185613118565b6001600160a01b03161461202257604051630ad13b3360e21b815260040160405180910390fd5b336001600160a01b038216148015906120ce57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015612094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b891906139bf565b6001600160a01b0316336001600160a01b031614155b80156120e057506120de3361218a565b155b156120fd576040516282b42960e81b815260040160405180910390fd5b6000612107612497565b60098054600090915590915061211e8183876128af565b93506001600160a01b0383167f3e5eb8642141e29a1b4e5c28b467396f814c1698e1adfc3ff327ddb9a6038361858461215d60408a0160208b01613143565b60408051938452602084019290925215159082015260600160405180910390a25050506105a86001600055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a64c90bf6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156121eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122139190810190613aef565b905060005b815181101561226557836001600160a01b031682828151811061223d5761223d6139f2565b60200260200101516001600160a01b03160361225d575060019392505050565b600101612218565b5060009392505050565b606060f882901c6001600160f81b038316600061228b82612748565b905060008360038111156122a1576122a161393d565b036122d3576040518060400160405280600d81526020016c0485950455244524956452d4c5609c1b815250935061169e565b60018360038111156122e7576122e761393d565b036122fd578060405160200161160c9190613ba1565b60028360038111156123115761231161393d565b03612327578060405160200161160c9190613bd9565b600383600381111561233b5761233b61393d565b0361169e57505060408051808201909152600d81526c485950455244524956452d575360981b60208201529392505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b6000848152600d602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000611f46670de0b6b3a764000061266a565b61250e6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916126069116612948565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261263892900416612948565b905292915050565b60006107478383670de0b6b3a76400006129be565b600061074783670de0b6b3a7640000846129be565b600061081c7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846129dc565b600061081c7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084612a07565b600061272c600b6000612718600286612a2b565b815260200190815260200160002054612a60565b61273e600b6000612718600187612a2b565b61081c9190613c05565b60408051604e80825260808201909252606091906000908260208201818036833701905050905060005b84156127ef57612783600a86613c3b565b61278e906030613969565b60f81b82600161279e848761397c565b6127a8919061397c565b815181106127b8576127b86139f2565b60200101906001600160f81b031916908160001a905350806127d981613c4f565b91506127e89050600a86613c68565b9450612772565b918290030190815292915050565b60026000540361282057604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c84908490612a8e565b60006128886020830183613118565b6001600160a01b0316036104705760405163f0dd15fd60e01b815260040160405180910390fd5b6000806128bc8585612640565b90506128c7816126b7565b9450846000036128db576000915050610747565b8491506128ee6040840160208501613143565b1561291d57612916856129046020860186613118565b6129116040870187613c7c565b612af1565b9150612940565b6129408561292e6020860186613118565b61293b6040870187613c7c565b612c56565b509392505050565b600080670de0b6b3a764000061295c612cfe565b6129669190613cc3565b9050808311612976576000612980565b612980818461397c565b91506107476129b7670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613cc3565b8390612655565b60008260001904841183021582026129d557600080fd5b5091020490565b60006129ff6129eb8585612d2a565b83906b033b2e3c9fd0803ce80000006129be565b949350505050565b60006129ff6b033b2e3c9fd0803ce8000000612a238686612d2a565b8491906129be565b60006001600160f81b03821115612a555760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60006001600160ff1b03821115612a8a5760405163396ea70160e11b815260040160405180910390fd5b5090565b6000612aa36001600160a01b03841683612d98565b90508051600014158015612ac8575080806020019051810190612ac69190613cda565b155b15610c8457604051635274afe760e01b81526001600160a01b03841660048201526024016116c1565b600080612b267f0000000000000000000000000000000000000000000000000000000000000000612b218861266a565b612da6565b60405163470cc4cf60e11b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e19899e906024016020604051808303816000875af1158015612b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb49190613a7b565b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018390529193507f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015612c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4c9190613cda565b5050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb84612c8f8761266a565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612cda573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190613cda565b6000611f46427f0000000000000000000000000000000000000000000000000000000000000000612e68565b60405163d15e005360e01b81526001600160a01b0383811660048301526000919083169063d15e005390602401602060405180830381865afa158015612d74573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190613a7b565b606061074783836000612e7e565b6040516335ea6a7560e01b81526001600160a01b03838116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a75906024016101e060405180830381865afa158015612e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e369190613d77565b60e081015190915060006000198514612e4f5784612e58565b6001600160801b035b60101b9190910195945050505050565b6000612e748284613c3b565b610747908461397c565b606081471015612ea35760405163cd78605960e01b81523060048201526024016116c1565b600080856001600160a01b03168486604051612ebf9190613e9a565b60006040518083038185875af1925050503d8060008114612efc576040519150601f19603f3d011682016040523d82523d6000602084013e612f01565b606091505b5091509150612f11868383612f1b565b9695505050505050565b606082612f3057612f2b82612f77565b610747565b8151158015612f4757506001600160a01b0384163b155b15612f7057604051639996b31560e01b81526001600160a01b03851660048201526024016116c1565b5080610747565b805115612f875780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180610200016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016130826040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b60006020828403121561309957600080fd5b5035919050565b60005b838110156130bb5781810151838201526020016130a3565b50506000910152565b600081518084526130dc8160208601602086016130a0565b601f01601f19169290920160200192915050565b60208152600061074760208301846130c4565b6001600160a01b038116811461047057600080fd5b60006020828403121561312a57600080fd5b813561074781613103565b801515811461047057600080fd5b60006020828403121561315557600080fd5b813561074781613135565b60ff8116811461047057600080fd5b60008060008060008060008060006101208a8c03121561318e57600080fd5b8935985060208a0135975060408a01356131a781613103565b965060608a01356131b781613103565b955060808a01356131c781613135565b945060a08a0135935060c08a01356131de81613160565b8093505060e08a013591506101008a013590509295985092959850929598565b60008083601f84011261321057600080fd5b50813567ffffffffffffffff81111561322857600080fd5b6020830191508360208260051b850101111561324357600080fd5b9250929050565b6000806000806000806080878903121561326357600080fd5b863561326e81613103565b9550602087013561327e81613103565b9450604087013567ffffffffffffffff8082111561329b57600080fd5b6132a78a838b016131fe565b909650945060608901359150808211156132c057600080fd5b506132cd89828a016131fe565b979a9699509497509295939492505050565b600080600080608085870312156132f557600080fd5b84359350602085013561330781613103565b9250604085013561331781613103565b9396929550929360600135925050565b60008060006060848603121561333c57600080fd5b83359250602084013561334e81613103565b9150604084013561335e81613103565b809150509250925092565b6000806040838503121561337c57600080fd5b82359150602083013561338e81613103565b809150509250929050565b6000602082840312156133ab57600080fd5b813567ffffffffffffffff8111156133c257600080fd5b82016060818503121561074757600080fd5b600080600080608085870312156133ea57600080fd5b8435935060208501356133fc81613103565b925060408501359150606085013561341381613103565b939692955090935050565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a080830151908201526101c091820151918101919091526101e00190565b600080604083850312156134d257600080fd5b82356134dd81613103565b9150602083013561338e81613135565b60008060006060848603121561350257600080fd5b83359250602084013561351481613103565b929592945050506040919091013590565b81516001600160a01b031681526102608101602083015161355160208401826001600160a01b03169052565b50604083015161356c60408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401518184015250610140808401518184015250610160808401516135de828501826001600160a01b03169052565b5050610180838101516001600160a01b03908116918401919091526101a0808501518216908401526101c080850151909116908301526101e0808401518051828501526020810151610200850152604081015161022085015260608101516102408501525b505092915050565b6000806020838503121561365e57600080fd5b823567ffffffffffffffff81111561367557600080fd5b613681858286016131fe565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156136c5578351835292840192918401916001016136a9565b50909695505050505050565b81516001600160801b03168152610180810160208301516136fd60208401826001600160801b03169052565b50604083015161371860408401826001600160801b03169052565b50606083015161373360608401826001600160801b03169052565b5060808301516137486080840182600f0b9052565b5060a083015161376360a08401826001600160801b03169052565b5060c083015161377e60c08401826001600160801b03169052565b5060e083015161379960e08401826001600160801b03169052565b506101008381015115159083015261012080840151151590830152610140808401516001600160701b031690830152610160808401516001600160801b03811682850152613643565b600080600080600060a086880312156137fa57600080fd5b85359450602086013561380c81613103565b9350604086013561381c81613103565b925060608601359150608086013561383381613103565b809150509295509295909350565b6000806040838503121561385457600080fd5b823561385f81613103565b9150602083013561338e81613103565b60006020808352600084548160018260011c9150600183168061389357607f831692505b6020831081036138b157634e487b7160e01b85526022600452602485fd5b60208801839052604088018180156138d057600181146138e657613911565b60ff198616825284151560051b82019650613911565b60008b81526020902060005b8681101561390b578154848201529085019089016138f2565b83019750505b50949998505050505050505050565b60006020828403121561393257600080fd5b815161074781613160565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561081c5761081c613953565b8181038181111561081c5761081c613953565b600080604083850312156139a257600080fd5b82519150602083015161338e81613135565b80516105a881613103565b6000602082840312156139d157600080fd5b815161074781613103565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b700243cb832b9323934bb32902637b7339d1607d1b815260008251613a348160118501602087016130a0565b9190910160110192915050565b710243cb832b9323934bb329029b437b93a1d160751b815260008251613a6e8160128501602087016130a0565b9190910160120192915050565b600060208284031215613a8d57600080fd5b5051919050565b6040516101e0810167ffffffffffffffff81118282101715613ab857613ab86139dc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613ae757613ae76139dc565b604052919050565b60006020808385031215613b0257600080fd5b825167ffffffffffffffff80821115613b1a57600080fd5b818501915085601f830112613b2e57600080fd5b815181811115613b4057613b406139dc565b8060051b9150613b51848301613abe565b8181529183018401918481019088841115613b6b57600080fd5b938501935b83851015613b955784519250613b8583613103565b8282529385019390850190613b70565b98975050505050505050565b6f242ca822a9222924ab2296a627a7239d60811b815260008251613bcc8160108501602087016130a0565b9190910160100192915050565b70242ca822a9222924ab2296a9a427a92a1d60791b815260008251613a348160118501602087016130a0565b81810360008312801583831316838312821617156112a1576112a1613953565b634e487b7160e01b600052601260045260246000fd5b600082613c4a57613c4a613c25565b500690565b600060018201613c6157613c61613953565b5060010190565b600082613c7757613c77613c25565b500490565b6000808335601e19843603018112613c9357600080fd5b83018035915067ffffffffffffffff821115613cae57600080fd5b60200191503681900382131561324357600080fd5b808202811582820484141761081c5761081c613953565b600060208284031215613cec57600080fd5b815161074781613135565b600060208284031215613d0957600080fd5b6040516020810181811067ffffffffffffffff82111715613d2c57613d2c6139dc565b6040529151825250919050565b80516001600160801b03811681146105a857600080fd5b805164ffffffffff811681146105a857600080fd5b805161ffff811681146105a857600080fd5b60006101e08284031215613d8a57600080fd5b613d92613a94565b613d9c8484613cf7565b8152613daa60208401613d39565b6020820152613dbb60408401613d39565b6040820152613dcc60608401613d39565b6060820152613ddd60808401613d39565b6080820152613dee60a08401613d39565b60a0820152613dff60c08401613d50565b60c0820152613e1060e08401613d65565b60e0820152610100613e238185016139b4565b90820152610120613e358482016139b4565b90820152610140613e478482016139b4565b90820152610160613e598482016139b4565b90820152610180613e6b848201613d39565b908201526101a0613e7d848201613d39565b908201526101c0613e8f848201613d39565b908201529392505050565b60008251613eac8184602087016130a0565b919091019291505056fea2646970667358221220027492a2b2cb54579e8697821ff77ffd42975d4319dbc26e349bda09cca8e16064736f6c63430008160033a264697066735822122024055918114095cf1348f6163455f1c9f5b9fcd274441ce1e44e7f5d7653561b64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = AaveL2Target0DeployerContractFunctions(aavel2target0deployer_abi, self.w3, address)  # type: ignore

    functions: AaveL2Target0DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = AaveL2Target0DeployerContractFunctions(
            aavel2target0deployer_abi, w3, None
        )

        return contract
