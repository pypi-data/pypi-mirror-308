"""A web3.py Contract class for the EETHTarget2Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

eethtarget2deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_liquidityPool",
                    "type": "address",
                    "internalType": "contract ILiquidityPool",
                }
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "liquidityPool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ILiquidityPool",
                }
            ],
            "stateMutability": "view",
        },
    ],
)


class EETHTarget2DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the EETHTarget2Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class EETHTarget2DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = EETHTarget2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class EETHTarget2DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> EETHTarget2DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> EETHTarget2DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            EETHTarget2DeployerDeployTargetContractFunction0._type_signature: EETHTarget2DeployerDeployTargetContractFunction0.factory(
                "EETHTarget2DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class EETHTarget2DeployerLiquidityPoolContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the liquidityPool() method."""

    _function_name = "liquidityPool"
    _type_signature = expand_struct_type_str(tuple([]), structs)
    _error_class = EETHTarget2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class EETHTarget2DeployerLiquidityPoolContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the liquidityPool method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "liquidityPool"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self) -> EETHTarget2DeployerLiquidityPoolContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> EETHTarget2DeployerLiquidityPoolContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            EETHTarget2DeployerLiquidityPoolContractFunction0._type_signature: EETHTarget2DeployerLiquidityPoolContractFunction0.factory(
                "EETHTarget2DeployerLiquidityPoolContractFunction0", **kwargs
            ),
        }
        return out


class EETHTarget2DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the EETHTarget2Deployer contract."""

    deployTarget: EETHTarget2DeployerDeployTargetContractFunction

    liquidityPool: EETHTarget2DeployerLiquidityPoolContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            EETHTarget2DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )
        self.liquidityPool = (
            EETHTarget2DeployerLiquidityPoolContractFunction.factory(
                "liquidityPool",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="liquidityPool",
            )
        )


class EETHTarget2DeployerContract(Contract):
    """A web3.py Contract class for the EETHTarget2Deployer contract."""

    abi: ABI = eethtarget2deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b815260040161217f929190613b50565b6040805180830381865af415801561219b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613bc6565b915091506121dd6121cf82611c58565b6121d890613bea565b612d0c565b9250826121f357600096505050505050506106e1565b6121fc826119a2565b600780546000906122179084906001600160801b0316613989565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612244816119a2565b60078054601090612266908490600160801b90046001600160801b0316613989565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6122c387612ea4565b6040518263ffffffff1660e01b81526004016122df9190613c06565b6040805180830381865af41580156122fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231f9190613c15565b9150915080612335575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161239b916137ed565b6123a5919061390e565b9050806000036123bd57506000958695509350505050565b60008087116123cd5760006123d8565b6123d884888461192d565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff81111561240c5761240c613c45565b6040519080825280601f01601f191660200182016040528015612436576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612457578692505b828152826000602083013e90999098509650505050505050565b600061249287878761248b88670de0b6b3a764000061390e565b8787612fde565b979650505050505050565b60006115506124de6124b784670de0b6b3a764000061390e565b6114af670de0b6b3a76400006124cd818a6114c6565b6124d7919061390e565b8790612723565b6124f090670de0b6b3a76400006137ed565b611e0e84670de0b6b3a764000061390e565b60008061253985612511611961565b61251b91906137ed565b600254610f19908790600160801b90046001600160801b031661390e565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b6000806000806000612570898789613001565b909250905061257f828961390e565b9750600061258e82888a61192d565b905061259a818b61390e565b9a989950979650505050505050565b6000826000036125ba575084611999565b811561260d576125eb6125cd84876137ed565b6125d785876106c9565b6125e1888a6106c9565b611e0e91906137ed565b905060006125f985886119d0565b905080821015612607578091505b50611999565b82850361261c57506000611999565b612647612629848761390e565b6126338587612723565b61263d888a6106c9565b611e0e919061390e565b9695505050505050565b6000612679600b6000612665600286611250565b815260200190815260200160002054611c58565b61268b600b6000612665600187611250565b6106e191906139a9565b60006126c17f000000000000000000000000000000000000000000000000000000000000000083612723565b6003546126d791906001600160801b03166137ed565b6002546126ed906001600160801b0316846106c9565b101592915050565b60006106e18260046120a0565b600061249287878761271c88670de0b6b3a764000061390e565b8787613081565b60006106de8383670de0b6b3a764000061287d565b600080808061278987866127828b6114af61275b8c670de0b6b3a764000061390e565b7f000000000000000000000000000000000000000000000000000000000000000090612723565b919061287d565b93506127b5847f00000000000000000000000000000000000000000000000000000000000000006106c9565b915060006127d66127ce89670de0b6b3a764000061390e565b8a908861287d565b9050612802817f0000000000000000000000000000000000000000000000000000000000000000612723565b935061282e847f00000000000000000000000000000000000000000000000000000000000000006106c9565b61283890846137ed565b915050945094509450949050565b600081831161285557816106de565b5090919050565b6000806128748461286e8a888a61287d565b906114c6565b9050611e218884865b600082600019048411830215820261289457600080fd5b50910281810615159190040190565b600080836001600160a01b0316633a98ef396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129089190613a45565b90508060000361291c576000915050611553565b611999856001600160a01b03166337cfdaca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561295d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129819190613a45565b84908361192d565b60006106de83670de0b6b3a76400008461192d565b6000806129ab8484613092565b9092509050806129bd576129bd612544565b5092915050565b6000816000036129dd5750670de0b6b3a76400006106e1565b826000036129ed575060006106e1565b60006129f883611c58565b90506000612a0d612a0886611c58565b6130ce565b9050818102612a24670de0b6b3a764000082613c5b565b9050612647816132f4565b600060016001607f1b038211156119cc5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612a77575060016001607f1b0382135b156119cc5760405163a5353be560e01b815260040160405180910390fd5b600080612aa3846000613489565b612aae846000613489565b612ab891906139a9565b90506000811315612ad457612acd81866137ed565b9450612af3565b6000811215612af357612ae681613bea565b612af0908661390e565b94505b50929392505050565b6003546000908190612b17906001600160801b0316846114c6565b9050612b437f0000000000000000000000000000000000000000000000000000000000000000826137ed565b6002546001600160801b031611156119df576002547f000000000000000000000000000000000000000000000000000000000000000090612b8e9083906001600160801b031661390e565b611553919061390e565b612ba06136c5565b600080612bac84612ea4565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612be79190613c06565b6040805180830381865af4158015612c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c279190613c15565b9350905082612c3c5750600091506118569050565b6000612c63612c5e8461016001518561014001516106c990919063ffffffff16565b611c58565b612c83612c5e85610120015186610100015161272390919063ffffffff16565b612c8d91906139a9565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612de99190613c89565b935093509350935080612e055750600098975050505050505050565b868414612e3657612e15846119a2565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612e6757612e4683612a59565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612e9557612e77826119a2565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612eac613717565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e08301526003540482166101008201526005549091610120830191612fa49116613498565b81526004546001600160801b03600160801b9182900481166020840152600554604090930192612fd692900416613498565b905292915050565b600080612fef88888888888861350e565b909250905080611e3b57611e3b612544565b60008061304b856114af85817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613041818c6114c6565b6114af919061390e565b9150613077827f00000000000000000000000000000000000000000000000000000000000000006106c9565b9050935093915050565b600080612fef8888888888886135d6565b6000806000836130a186611c58565b6130ab91906139a9565b905060008112156130c35760008092509250506106c2565b946001945092505050565b60008082136130f05760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906131739084901c611c58565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361330f57506000919050565b680755bf798b4a1bf1e58212613338576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b01818105955092935090919061264774029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611c58565b600081831361285557816106de565b600080670de0b6b3a76400006134ac6106e7565b6134b691906139e6565b90508083116134c65760006134d0565b6134d0818461390e565b9150611553613507670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006139e6565b8390612989565b60008060006135208989888888613696565b905061353a866119936135338a8d6137ed565b87906106c9565b9850613547858a8661192d565b98508881101561355e5760008092509250506135cb565b888103670de0b6b3a764000081106135935761358c613585670de0b6b3a7640000896114c6565b82906129c4565b90506135ab565b6135a8613585670de0b6b3a764000089612989565b90505b808910156135c1576000809350935050506135cb565b8803925060019150505b965096945050505050565b60008060006135e88989888888613696565b90506135f886611993898b6137ed565b97508781101561360f5760008092509250506135cb565b87810361361d81868861287d565b9050670de0b6b3a7640000811061364a57613643613585670de0b6b3a7640000896114c6565b9050613662565b61365f613585670de0b6b3a764000089612989565b90505b61366c81866114c6565b9050808a1015613684576000809350935050506135cb565b90980398600198509650505050505050565b60006136a285856129c4565b6136bb6136b386611993868b612723565b85908561287d565b61264791906137ed565b6040518061012001604052806136d9613717565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000806080858703121561378e57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff8111156137ba57600080fd5b8501606081880312156137cc57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106e1576106e16137d7565b6001600160a01b03811681146105f157600080fd5b60006020828403121561382757600080fd5b813561155381613800565b80151581146105f157600080fd5b60006020828403121561385257600080fd5b813561155381613832565b6000808335601e1984360301811261387457600080fd5b83018035915067ffffffffffffffff82111561388f57600080fd5b6020019150368190038213156106c257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a0820152600061390160c0830184866138a4565b9998505050505050505050565b818103818111156106e1576106e16137d7565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c0820152600061395b60e0830184866138a4565b9a9950505050505050505050565b6001600160701b038181168382160190808211156129bd576129bd6137d7565b6001600160801b038181168382160190808211156129bd576129bd6137d7565b81810360008312801583831316838312821617156129bd576129bd6137d7565b6000602082840312156139db57600080fd5b815161155381613800565b80820281158282048414176106e1576106e16137d7565b6001600160801b038281168282160390808211156129bd576129bd6137d7565b8082018281126000831280158216821582161715613a3d57613a3d6137d7565b505092915050565b600060208284031215613a5757600080fd5b5051919050565b600060208284031215613a7057600080fd5b815161155381613832565b634e487b7160e01b600052601260045260246000fd5b600082613aa057613aa0613a7b565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106e1576106e16137d7565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613b64828551613ad2565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613bd957600080fd5b505080516020909101519092909150565b6000600160ff1b8201613bff57613bff6137d7565b5060000390565b61018081016106e18284613ad2565b60008060408385031215613c2857600080fd5b825191506020830151613c3a81613832565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082613c6a57613c6a613a7b565b600160ff1b821460001984141615613c8457613c846137d7565b500590565b60008060008060808587031215613c9f57600080fd5b84519350602085015192506040850151915060608501516137cc8161383256fea2646970667358221220e9c587a220520b97f6d892ddc36f949c86b721005d6dc52195917d6658e8bbb364736f6c63430008160033a2646970667358221220c07a9fe8055a2074262e068c679d4a70c33bf30e70215563594063d9a494d72964736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = EETHTarget2DeployerContractFunctions(eethtarget2deployer_abi, self.w3, address)  # type: ignore

    functions: EETHTarget2DeployerContractFunctions

    class ConstructorArgs(NamedTuple):
        """Arguments to pass the contract's constructor function."""

        liquidityPool: str

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, liquidityPool: str, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor(dataclass_to_tuple(liquidityPool))

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        constructor_args: ConstructorArgs,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(
            *constructor_args, link_references
        )

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = EETHTarget2DeployerContractFunctions(
            eethtarget2deployer_abi, w3, None
        )

        return contract
