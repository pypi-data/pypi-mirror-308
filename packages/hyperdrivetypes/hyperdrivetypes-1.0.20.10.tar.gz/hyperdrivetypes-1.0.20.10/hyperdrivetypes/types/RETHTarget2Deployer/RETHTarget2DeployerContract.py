"""A web3.py Contract class for the RETHTarget2Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

rethtarget2deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class RETHTarget2DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the RETHTarget2Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class RETHTarget2DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = RETHTarget2DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class RETHTarget2DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> RETHTarget2DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> RETHTarget2DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            RETHTarget2DeployerDeployTargetContractFunction0._type_signature: RETHTarget2DeployerDeployTargetContractFunction0.factory(
                "RETHTarget2DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class RETHTarget2DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the RETHTarget2Deployer contract."""

    deployTarget: RETHTarget2DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            RETHTarget2DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class RETHTarget2DeployerContract(Contract):
    """A web3.py Contract class for the RETHTarget2Deployer contract."""

    abi: ABI = rethtarget2deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x608060405234801561001057600080fd5b5061466b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638c98b3c614610030575b600080fd5b61004361003e36600461022a565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60408051336020820152908101829052600090606001604051602081830303815290604052805190602001208585604051610099906100ce565b6100a4929190610386565b8190604051809103906000f59050801580156100c4573d6000803e3d6000fd5b5095945050505050565b61417e806104b883390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff81118282101715610115576101156100db565b60405290565b80356001600160a01b038116811461013257600080fd5b919050565b60006080828403121561014957600080fd5b6040516080810181811067ffffffffffffffff8211171561016c5761016c6100db565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f8301126101ae57600080fd5b813567ffffffffffffffff808211156101c9576101c96100db565b604051601f8301601f19908116603f011681019082821181831017156101f1576101f16100db565b8160405283815286602085880101111561020a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000808486036102c081121561024257600080fd5b6102608082121561025257600080fd5b61025a6100f1565b91506102658761011b565b82526102736020880161011b565b60208301526102846040880161011b565b6040830152606087013560608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e08301526101008088013581840152506101208088013581840152506101408088013581840152506101606102ed81890161011b565b908301526101806102ff88820161011b565b908301526101a061031188820161011b565b908301526101c061032388820161011b565b908301526101e061033689898301610137565b818401525081955061034981880161011b565b9450505061028085013567ffffffffffffffff81111561036857600080fd5b6103748782880161019d565b949793965093946102a0013593505050565b82516001600160a01b03168152610280810160208401516103b260208401826001600160a01b03169052565b5060408401516103cd60408401826001600160a01b03169052565b50606084015160608301526080840151608083015260a084015160a083015260c084015160c083015260e084015160e08301526101008085015181840152506101208085015181840152506101408085015181840152506101608085015161043f828501826001600160a01b03169052565b5050610180848101516001600160a01b03908116918401919091526101a0808601518216908401526101c0808601518216908401526101e0948501518051958401959095526020850151610200840152604085015161022084015260609094015161024083015291909216610260909201919091529056fe6102806040523480156200001257600080fd5b506040516200417e3803806200417e8339810160408190526200003591620001ae565b600160005581516001600160a01b039081166080908152602080850151831660a0908152918501516101a052908401516101c05260c0808501516101e090815260e080870151610200526101208088015190935261010080880151909152610140808801519091529086018051519092528151909201519091528051604090810151610160529051606090810151610180529084015182166102405290920151610260521661022052620002eb565b60405161020081016001600160401b03811182821017156200011657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013457600080fd5b919050565b6000608082840312156200014c57600080fd5b604051608081016001600160401b03811182821017156200017d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080828403610280811215620001c457600080fd5b61026080821215620001d557600080fd5b620001df620000e4565b9150620001ec856200011c565b8252620001fc602086016200011c565b60208301526200020f604086016200011c565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101606200027a8187016200011c565b908301526101806200028e8682016200011c565b908301526101a0620002a28682016200011c565b908301526101c0620002b68682016200011c565b908301526101e0620002cb8787830162000139565b8184015250819350620002e08186016200011c565b925050509250929050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051613cd1620004ad60003960005050600050506000610cb401526000505060008181610154015281816103640152612d5d0152600081816115ec01528181611d2a01528181611d8d0152818161253f0152818161293b0152818161297701528181612b760152612d3701526000818161086201528181610e1401528181610e5601528181610f48015281816113be0152818161141d0152612d1101526000611949015260008181611a6f01528181612634015281816126ad0152612e77015260008181610a2601528181610ec9015281816114b801528181611a430152612681015260008181610ea8015281816126000152612e3301526000818161088301528181610df201528181610e7701528181610f690152818161139c0152818161143e0152612d83015260008181610232015281816103fc0152818161095e015261336f01526000818161071c0152818161079c01528181610812015281816108de0152610916015260008181603d0152818161152101526117a3015260005050613cd16000f3fe60806040526004361061002d5760003560e01c8063cba2e58d14610082578063dbbe8070146100ae57600080fd5b3661007d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461007b576040516312171d8360e31b815260040160405180910390fd5b005b600080fd5b610095610090366004613725565b6100c1565b6040805192835260208301919091520160405180910390f35b6100956100bc366004613725565b6100de565b6000806100d0868686866100ed565b915091505b94509492505050565b6000806100d08686868661031d565b6000806100f861059d565b600654610100900460ff1615610121576040516321081abf60e01b815260040160405180910390fd5b6101296105c7565b610132836105e8565b60008061013f8886610621565b9092509050600061015083836106f6565b90507f00000000000000000000000000000000000000000000000000000000000000008110156101935760405163211ddda360e11b815260040160405180910390fd5b868210156101b4576040516342af972b60e01b815260040160405180910390fd5b60006101be610714565b90506101ce818460046001610745565b5060008060006101de8787610dc3565b919a5091945090925090508b88101561020a5760405163c972651760e01b815260040160405180910390fd5b816009600082825461021c919061379a565b9091555061022d9050844283610fa5565b6102577f00000000000000000000000000000000000000000000000000000000000000008561379a565b98506102658389888c6110e3565b600061027260018b61127d565b905061028b8161028560208e018e6137c2565b8b6112b2565b8d8a8a898e8561029e60208301836137c2565b6001600160a01b03167f7fc9757758f4c7f2eb9f011c4500beb349847d2f2acbdd5ffce3e2f01e79903a8688866102db60408801602089016137ed565b896102e960408a018a61380a565b6040516102fc979695949392919061387a565b60405180910390a350909b5050505050505050505050506100d56001600055565b60008061032861059d565b600654610100900460ff1615610351576040516321081abf60e01b815260040160405180910390fd5b6103596105c7565b610362836105e8565b7f00000000000000000000000000000000000000000000000000000000000000008610156103a35760405163211ddda360e11b815260040160405180910390fd5b60006103ad61135a565b9050848110156103d0576040516342af972b60e01b815260040160405180910390fd5b60006103da610714565b905060006103f36103e9610714565b8460046001610745565b905060006104217f00000000000000000000000000000000000000000000000000000000000000008461379a565b90506000806000806104348e898861136d565b600980549498509296509094509250839160009061045390849061379a565b909155506104649050874283610fa5565b610476610471858a6114f3565b611508565b61048190600161379a565b935050600061049184898d611594565b9050808d10156104b45760405163c972651760e01b815260040160405180910390fd5b6104be818c610621565b508e90506104ce81858b896115c6565b60006104db60028861127d565b90508c6104f5826104ef60208401846137c2565b856112b2565b858b868461050660208601866137c2565b6001600160a01b03167ffa6dd2e3e152dbc3fe91196c0b8aa871c26fd7a1d07de126ec3159fd4ede2c758d8a8661054360408b0160208c016137ed565b610557896105518a8d6138bb565b906106f6565b8d61056560408e018e61380a565b6040516105799897969594939291906138ce565b60405180910390a350989d50939b5050505050505050505050506100d56001600055565b6002600054036105c057604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b34156105e657604051631574f9f360e01b815260040160405180910390fd5b565b60006105f760208301836137c2565b6001600160a01b03160361061e5760405163f0dd15fd60e01b815260040160405180910390fd5b50565b8160008061063560408501602086016137ed565b1561065a576106508561064b604087018761380a565b61177a565b9093509050610672565b50346106728561066d604087018761380a565b611796565b61067a61135a565b915080156106ed57604051600090339083908381818185875af1925050503d80600081146106c4576040519150601f19603f3d011682016040523d82523d6000602084013e6106c9565b606091505b50509050806106eb576040516312171d8360e31b815260040160405180910390fd5b505b505b9250929050565b600061070b8383670de0b6b3a76400006117d0565b90505b92915050565b6000610740427f00000000000000000000000000000000000000000000000000000000000000006117ee565b905090565b600084815260086020526040812060018101546001600160801b031615158061076d57504286115b1561078657600101546001600160801b03169050610dbb565b6000806000610793610714565b905060006107c17f00000000000000000000000000000000000000000000000000000000000000008b61379a565b90505b81811015610837576000818152600860205260409020600101546001600160801b0316801561080f576000828152600860205260409020549094506001600160801b03169250610837565b507f0000000000000000000000000000000000000000000000000000000000000000016107c4565b836000036108aa578893506108a761084d611804565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611825565b92505b506108b483611845565b6001850180546001600160801b0319166001600160801b039290921691909117905561090a6109037f00000000000000000000000000000000000000000000000000000000000000008b6138bb565b8a84610fa5565b6109488961094261093b7f00000000000000000000000000000000000000000000000000000000000000008361379a565b4290611873565b84610fa5565b61095188611888565b50600090506008816109837f00000000000000000000000000000000000000000000000000000000000000008d6138bb565b815260208101919091526040016000908120600101546001600160801b031691506109af60028c61127d565b6000818152600b60205260408120549192508c8c8315610af557600192506000806109de86898d866000611a2c565b9150915080600960008282546109f4919061379a565b90915550610a10905086600084610a0a81611afb565b88611b25565b610a1a818361379a565b9150610a4a86838a8e877f0000000000000000000000000000000000000000000000000000000000000000611c9f565b9150610a5e610a5983856106f6565b611ce9565b60068054600290610a7f9084906201000090046001600160701b0316613916565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610aac82611845565b60068054601090610ace908490600160801b90046001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b6000610b0260018461127d565b6000818152600b60205260409020549091508015610c115760019450600080610b2f838b8f886001611a2c565b915091508060096000828254610b45919061379a565b90915550610b61905083600084610b5b81611afb565b8a611d13565b610b6b81836138bb565b9150610b7a610a5983876106f6565b60068054600290610b9b9084906201000090046001600160701b0316613916565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610bc882611845565b60068054601090610bea908490600160801b90046001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b8415610c4b57610c3d610c2387611afb565b610c2c83611afb565b610c369190613956565b6000611f04565b8e610c488482611f43565b50505b6000610c568461213d565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d349190613976565b90506001600160a01b03811615610da957610da65a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b03861693929190612289565b50505b509b9d50505050505050505050505050505b949350505050565b6000806000806000610dd3611804565b600254909150610e38908290600160801b90046001600160801b0316897f00000000000000000000000000000000000000000000000000000000000000008a7f0000000000000000000000000000000000000000000000000000000000000000612314565b600254909450610e9b908290600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611825565b9150610ef28785610eed857f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612340565b6123a5565b15610eff57610eff6123e7565b610f0b87858885612400565b91965094509250670de0b6b3a7640000610f8d610f28878461379a565b600254610f46908890600160801b90046001600160801b03166138bb565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611825565b1115610f9b57610f9b6123e7565b5092959194509250565b600083815260086020526040902054600160801b90046001600160801b0316808303610fd15750505050565b6000848152600860205260408120546001600160801b03169081900361102b57610ffa83611845565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790556110a9565b61107c611077670de0b6b3a764000061104488866138bb565b61104e9190613993565b85670de0b6b3a7640000611062878a6138bb565b61106c9190613993565b85929190600161244c565b611845565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b6110b284611845565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b600354600160801b90046001600160801b03166111256110778261110f670de0b6b3a764000086613993565b6005546001600160801b0316919088600161244c565b600580546001600160801b0319166001600160801b039290921691909117905561114e85611845565b600280546000906111699084906001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061119684611845565b600280546010906111b8908490600160801b90046001600160801b03166139aa565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506111e584611845565b6111ef9082613936565b600380546001600160801b03808416600160801b02911617905590506000611216836124f4565b90506112348161122587611afb565b61122f90846139ca565b611f04565b61123d84612538565b611249576112496123e7565b600061125485612598565b90508061127457604051638bdf918d60e01b815260040160405180910390fd5b50505050505050565b60006001600160f81b038211156112a75760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6000838152600a602090815260408083206001600160a01b0386168452909152812080548392906112e490849061379a565b90915550506000838152600b60205260408120805483929061130790849061379a565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6000610740670de0b6b3a7640000611508565b600080600080600061137d611804565b6002549091506113e2908290600160801b90046001600160801b03168a7f00000000000000000000000000000000000000000000000000000000000000008b7f00000000000000000000000000000000000000000000000000000000000000006125a5565b9350876113ef85896125c6565b11156113fd576113fd6123e7565b6002546000908190611462908490600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611825565b93506114788a670de0b6b3a7640000868c6125db565b5091935090915061148b905081836138bb565b61149590876138bb565b9550886114e2816114dc8d6114aa868c6138bb565b8d6114b587826126e9565b877f00000000000000000000000000000000000000000000000000000000000000006126ff565b906125c6565b975090945050505093509350935093565b600061070b83670de0b6b3a764000084612720565b604051638b32fa2360e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638b32fa2390602401602060405180830381865afa158015611570573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e91906139f2565b60006115a660408301602084016137ed565b156115b25750826115bf565b6115bc8484612746565b90505b9392505050565b6002546001600160801b0316838110156115e2576115e26123e7565b60045490849003907f00000000000000000000000000000000000000000000000000000000000000009061161a908390600f0b61275b565b1015611628576116286123e7565b6004546116729061107790600160801b90046001600160801b0316611655670de0b6b3a764000086613993565b600554600160801b90046001600160801b0316919089600161244c565b600580546001600160801b03928316600160801b02921691909117905561169881611845565b600280546001600160801b0319166001600160801b03929092169190911790556116c185611845565b600280546010906116e3908490600160801b90046001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061171085611845565b60048054601090611732908490600160801b90046001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611761836124f4565b90506112348161177088611afb565b61122f9084613956565b60008060405163350b944160e11b815260040160405180910390fd5b6117cb6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086612781565b505050565b60008260001904841183021582026117e757600080fd5b5091020490565b60006117fa8284613a21565b61070b90846138bb565b600254600454600091610740916001600160801b0390911690600f0b61275b565b600061183c826118368588886117d0565b906127e1565b95945050505050565b60006001600160801b0382111561186f57604051630f0af95160e11b815260040160405180910390fd5b5090565b6000818311611882578261070b565b50919050565b60065460009081906118ab908490600160801b90046001600160801b03166106f6565b6006546201000090046001600160701b03169250905081811115611a275760006118d583836138bb565b90506118e461107782866114f3565b60068054601090611906908490600160801b90046001600160801b03166139aa565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600061193f858361274690919063ffffffff16565b9050600061196d827f00000000000000000000000000000000000000000000000000000000000000006106f6565b90508060096000828254611981919061379a565b90915550611991905081836138bb565b915061199c82611845565b600280546000906119b79084906001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506119e48261284c565b600480546000906119f9908490600f0b613a35565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b600080611a398785612746565b91506000611a67837f00000000000000000000000000000000000000000000000000000000000000006106f6565b9050611a93817f00000000000000000000000000000000000000000000000000000000000000006106f6565b91508315611ab657611aa582826138bb565b611aaf90846138bb565b9250611acd565b611ac082826138bb565b611aca908461379a565b92505b86861015611af057611ae08387896117d0565b9250611aed8287896117d0565b91505b509550959350505050565b60006001600160ff1b0382111561186f5760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b0316611b6e61107782611b51670de0b6b3a764000086613993565b600554600160801b90046001600160801b031691908a600061244c565b600580546001600160801b03928316600160801b029216919091179055611b9486611845565b611b9e90826139aa565b600480546001600160801b03928316600160801b029216919091179055611bc484611845565b60028054600090611bdf9084906001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611c0c83612876565b60048054600090611c21908490600f0b613a35565b92506101000a8154816001600160801b030219169083600f0b6001600160801b03160217905550611c5185611845565b60028054601090611c73908490600160801b90046001600160801b03166139aa565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b600080611cb784611cb18a888a6117d0565b90612746565b9050611cc48884866117d0565b611cce908261379a565b905086811115611cde5786810391505b509695505050505050565b60006001600160701b0382111561186f5760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b031683811080611d5557507f0000000000000000000000000000000000000000000000000000000000000000611d5385836138bb565b105b15611d6257611d626123e7565b6004549084900390600f0b611d778482613956565b905083611d8386611afb565b138015611db857507f0000000000000000000000000000000000000000000000000000000000000000611db6838361275b565b105b15611dc557611dc56123e7565b600354600160801b90046001600160801b0316611e0761107782611df1670de0b6b3a764000088613993565b6005546001600160801b031691908c600061244c565b600580546001600160801b0319166001600160801b0392909216919091179055611e3188826138bb565b9050611e3c81611845565b600380546001600160801b03928316600160801b029216919091179055611e6283611845565b600280546001600160801b0319166001600160801b0392909216919091179055611e8b82612876565b600480546001600160801b0319166001600160801b0392909216919091179055611eb487611845565b60028054601090611ed6908490600160801b90046001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b600354611f1f90611077906001600160801b031684846128b2565b600380546001600160801b0319166001600160801b03929092169190911790555050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490918291611f8e916001600160801b0316906138bb565b905080600003611fa257600191505061070e565b6000611fad85612919565b905080600003611fc25760019250505061070e565b600080611fd08385896129b5565b9150915080611fe657600094505050505061070e565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401612022929190613ae0565b6040805180830381865af415801561203e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120629190613b56565b9150915061208061207282611afb565b61207b90613b7a565b612b30565b925082612096576000965050505050505061070e565b61209f82611845565b600780546000906120ba9084906001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506120e781611845565b60078054601090612109908490600160801b90046001600160801b0316613936565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61216687612cc8565b6040518263ffffffff1660e01b81526004016121829190613b96565b6040805180830381865af415801561219e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c29190613ba5565b91509150806121d8575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161223e9161379a565b61224891906138bb565b90508060000361226057506000958695509350505050565b600080871161227057600061227b565b61227b8488846117d0565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156122af576122af613bd5565b6040519080825280601f01601f1916602001820160405280156122d9576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156122fa578692505b828152826000602083013e90999098509650505050505050565b600061233587878761232e88670de0b6b3a76400006138bb565b8787612e02565b979650505050505050565b60006115bc61238161235a84670de0b6b3a76400006138bb565b6114dc670de0b6b3a7640000612370818a6114f3565b61237a91906138bb565b87906125c6565b61239390670de0b6b3a764000061379a565b611cb184670de0b6b3a76400006138bb565b6000806123dc856123b4611804565b6123be919061379a565b600254610f46908790600160801b90046001600160801b03166138bb565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b6000806000806000612413898789612e25565b909250905061242282896138bb565b9750600061243182888a6117d0565b905061243d818b6138bb565b9a989950979650505050505050565b60008260000361245d57508461183c565b81156124b05761248e612470848761379a565b61247a85876106f6565b612484888a6106f6565b611cb1919061379a565b9050600061249c8588611873565b9050808210156124aa578091505b5061183c565b8285036124bf5750600061183c565b6124ea6124cc84876138bb565b6124d685876125c6565b6124e0888a6106f6565b611cb191906138bb565b9695505050505050565b600061251c600b600061250860028661127d565b815260200190815260200160002054611afb565b61252e600b600061250860018761127d565b61070e9190613956565b60006125647f0000000000000000000000000000000000000000000000000000000000000000836125c6565b60035461257a91906001600160801b031661379a565b600254612590906001600160801b0316846106f6565b101592915050565b600061070e826004611f43565b60006123358787876125bf88670de0b6b3a76400006138bb565b8787612ea5565b600061070b8383670de0b6b3a7640000612720565b600080808061262c87866126258b6114dc6125fe8c670de0b6b3a76400006138bb565b7f0000000000000000000000000000000000000000000000000000000000000000906125c6565b9190612720565b9350612658847f00000000000000000000000000000000000000000000000000000000000000006106f6565b9150600061267961267189670de0b6b3a76400006138bb565b8a9088612720565b90506126a5817f00000000000000000000000000000000000000000000000000000000000000006125c6565b93506126d1847f00000000000000000000000000000000000000000000000000000000000000006106f6565b6126db908461379a565b915050945094509450949050565b60008183116126f8578161070b565b5090919050565b600080612717846127118a888a612720565b906114f3565b9050611cc48884865b600082600019048411830215820261273757600080fd5b50910281810615159190040190565b600061070b83670de0b6b3a7640000846117d0565b6000806127688484612eb6565b90925090508061277a5761277a6123e7565b5092915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526127db908590612ef2565b50505050565b6000816000036127fa5750670de0b6b3a764000061070e565b8260000361280a5750600061070e565b600061281583611afb565b9050600061282a61282586611afb565b612f5a565b9050818102612841670de0b6b3a764000082613beb565b90506124ea81613180565b600060016001607f1b0382111561186f5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612894575060016001607f1b0382135b1561186f5760405163a5353be560e01b815260040160405180910390fd5b6000806128c0846000613315565b6128cb846000613315565b6128d59190613956565b905060008113156128f1576128ea818661379a565b9450612910565b60008112156129105761290381613b7a565b61290d90866138bb565b94505b50929392505050565b6003546000908190612934906001600160801b0316846114f3565b90506129607f00000000000000000000000000000000000000000000000000000000000000008261379a565b6002546001600160801b03161115611882576002547f0000000000000000000000000000000000000000000000000000000000000000906129ab9083906001600160801b03166138bb565b6115bf91906138bb565b6129bd613672565b6000806129c984612cc8565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612a049190613b96565b6040805180830381865af4158015612a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a449190613ba5565b9350905082612a59575060009150612b289050565b6000612a80612a7b8461016001518561014001516106f690919063ffffffff16565b611afb565b612aa0612a7b8561012001518661010001516125c690919063ffffffff16565b612aaa9190613956565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765481830152606081018a9052608081018b905260a0810192909252845160c08301529284015160e08201529290910151610100830152509150600190505b935093915050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612be9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0d9190613c19565b935093509350935080612c295750600098975050505050505050565b868414612c5a57612c3984611845565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612c8b57612c6a83612876565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612cb957612c9b82611845565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612cd06136c4565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e08301526003540482166101008201526005549091610120830191612dc89116613324565b81526004546001600160801b03600160801b9182900481166020840152600554604090930192612dfa92900416613324565b905292915050565b600080612e1388888888888861339a565b909250905080611cde57611cde6123e7565b600080612e6f856114dc85817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000612e65818c6114f3565b6114dc91906138bb565b9150612e9b827f00000000000000000000000000000000000000000000000000000000000000006106f6565b9050935093915050565b600080612e13888888888888613462565b600080600083612ec586611afb565b612ecf9190613956565b90506000811215612ee75760008092509250506106ef565b946001945092505050565b6000612f076001600160a01b03841683613522565b90508051600014158015612f2c575080806020019051810190612f2a9190613c4f565b155b156117cb57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b6000808213612f7c5760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f19820190612fff9084901c611afb565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361319b57506000919050565b680755bf798b4a1bf1e582126131c4576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b0181810595509293509091906124ea74029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611afb565b60008183136126f8578161070b565b600080670de0b6b3a7640000613338610714565b6133429190613993565b905080831161335257600061335c565b61335c81846138bb565b91506115bf613393670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613993565b8390612746565b60008060006133ac8989888888613530565b90506133c6866118366133bf8a8d61379a565b87906106f6565b98506133d3858a866117d0565b9850888110156133ea576000809250925050613457565b888103670de0b6b3a7640000811061341f57613418613411670de0b6b3a7640000896114f3565b82906127e1565b9050613437565b613434613411670de0b6b3a764000089612746565b90505b8089101561344d57600080935093505050613457565b8803925060019150505b965096945050505050565b60008060006134748989888888613530565b905061348486611836898b61379a565b97508781101561349b576000809250925050613457565b8781036134a9818688612720565b9050670de0b6b3a764000081106134d6576134cf613411670de0b6b3a7640000896114f3565b90506134ee565b6134eb613411670de0b6b3a764000089612746565b90505b6134f881866114f3565b9050808a101561351057600080935093505050613457565b90980398600198509650505050505050565b606061070b8383600061355f565b600061353c85856127e1565b61355561354d86611836868b6125c6565b859085612720565b6124ea919061379a565b6060814710156135845760405163cd78605960e01b8152306004820152602401612f51565b600080856001600160a01b031684866040516135a09190613c6c565b60006040518083038185875af1925050503d80600081146135dd576040519150601f19603f3d011682016040523d82523d6000602084013e6135e2565b606091505b50915091506124ea868383606082613602576135fd82613649565b6115bf565b815115801561361957506001600160a01b0384163b155b1561364257604051639996b31560e01b81526001600160a01b0385166004820152602401612f51565b50806115bf565b8051156136595780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518061012001604052806136866136c4565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000806080858703121561373b57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561376757600080fd5b85016060818803121561377957600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561070e5761070e613784565b6001600160a01b038116811461061e57600080fd5b6000602082840312156137d457600080fd5b81356115bf816137ad565b801515811461061e57600080fd5b6000602082840312156137ff57600080fd5b81356115bf816137df565b6000808335601e1984360301811261382157600080fd5b83018035915067ffffffffffffffff82111561383c57600080fd5b6020019150368190038213156106ef57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a082015260006138ae60c083018486613851565b9998505050505050505050565b8181038181111561070e5761070e613784565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c0820152600061390860e083018486613851565b9a9950505050505050505050565b6001600160701b0381811683821601908082111561277a5761277a613784565b6001600160801b0381811683821601908082111561277a5761277a613784565b818103600083128015838313168383128216171561277a5761277a613784565b60006020828403121561398857600080fd5b81516115bf816137ad565b808202811582820484141761070e5761070e613784565b6001600160801b0382811682821603908082111561277a5761277a613784565b80820182811260008312801582168215821617156139ea576139ea613784565b505092915050565b600060208284031215613a0457600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082613a3057613a30613a0b565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561070e5761070e613784565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613af4828551613a62565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613b6957600080fd5b505080516020909101519092909150565b6000600160ff1b8201613b8f57613b8f613784565b5060000390565b610180810161070e8284613a62565b60008060408385031215613bb857600080fd5b825191506020830151613bca816137df565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082613bfa57613bfa613a0b565b600160ff1b821460001984141615613c1457613c14613784565b500590565b60008060008060808587031215613c2f57600080fd5b8451935060208501519250604085015191506060850151613779816137df565b600060208284031215613c6157600080fd5b81516115bf816137df565b6000825160005b81811015613c8d5760208186018101518583015201613c73565b50600092019182525091905056fea26469706673582212202372f1b5859d4a1272bdbaaaa0f08f2bff31da86f12b5f3940f46228b33ca91a64736f6c63430008160033a2646970667358221220092f6a322af65511d95bc86bbc923be87846543a4741bff12451897682f7648e64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = RETHTarget2DeployerContractFunctions(rethtarget2deployer_abi, self.w3, address)  # type: ignore

    functions: RETHTarget2DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = RETHTarget2DeployerContractFunctions(
            rethtarget2deployer_abi, w3, None
        )

        return contract
