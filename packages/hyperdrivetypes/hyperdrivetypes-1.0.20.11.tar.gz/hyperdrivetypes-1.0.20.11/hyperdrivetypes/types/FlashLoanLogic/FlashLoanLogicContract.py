"""A web3.py Contract class for the FlashLoanLogic contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

from typing import Any, Iterable, NamedTuple, Sequence, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import PypechainBaseContractErrors, combomethod_typed
from typing_extensions import Self
from web3 import Web3
from web3._utils.events import EventLogErrorFlags
from web3._utils.filters import LogFilter
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractEvent,
    ContractEvents,
    ContractFunctions,
)
from web3.logs import WARN
from web3.types import BlockIdentifier, TxReceipt

from ..BorrowLogic import BorrowLogicContract
from .FlashLoanLogicTypes import FlashLoanEvent, ReserveDataUpdatedEvent

structs = {}

flashloanlogic_abi: ABI = cast(
    ABI,
    [
        {
            "type": "event",
            "name": "FlashLoan",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "initiator",
                    "type": "address",
                    "indexed": False,
                    "internalType": "address",
                },
                {
                    "name": "asset",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "interestRateMode",
                    "type": "uint8",
                    "indexed": False,
                    "internalType": "enum DataTypes.InterestRateMode",
                },
                {
                    "name": "premium",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "referralCode",
                    "type": "uint16",
                    "indexed": True,
                    "internalType": "uint16",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "ReserveDataUpdated",
            "inputs": [
                {
                    "name": "reserve",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "liquidityRate",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "stableBorrowRate",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "variableBorrowRate",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "liquidityIndex",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "variableBorrowIndex",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
    ],
)


class FlashLoanLogicContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the FlashLoanLogic contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class FlashLoanLogicContractFunctions(ContractFunctions):
    """ContractFunctions for the FlashLoanLogic contract."""

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)


class FlashLoanLogicFlashLoanContractEvent(ContractEvent):
    """ContractEvent for FlashLoan."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    @combomethod_typed
    def get_logs_typed(
        self,
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[FlashLoanEvent]:
        """Extension of `get_logs` that return a typed dataclass of the event."""
        abi_events = super().get_logs(
            argument_filters=argument_filters,
            from_block=from_block,
            to_block=to_block,
            block_hash=block_hash,
        )
        # TODO there may be issues with this function if the user uses a middleware that changes event structure.
        return [
            FlashLoanEvent(
                log_index=abi_event.logIndex,
                transaction_index=abi_event.transactionIndex,
                transaction_hash=abi_event.transactionHash,
                address=abi_event.address,
                block_hash=abi_event.blockHash,
                block_number=abi_event.blockNumber,
                args=FlashLoanEvent.FlashLoanEventArgs(
                    target=abi_event.args["target"],
                    initiator=abi_event.args["initiator"],
                    asset=abi_event.args["asset"],
                    amount=abi_event.args["amount"],
                    interestRateMode=abi_event.args["interestRateMode"],
                    premium=abi_event.args["premium"],
                    referralCode=abi_event.args["referralCode"],
                ),
            )
            for abi_event in abi_events
        ]

    @combomethod_typed
    def process_receipt_typed(
        self, txn_receipt: TxReceipt, errors: EventLogErrorFlags = WARN
    ) -> Iterable[FlashLoanEvent]:
        """Extension of `process_receipt` that return a typed dataclass of the event."""
        abi_events = super().process_receipt(txn_receipt, errors)
        # TODO there may be issues with this function if the user uses a middleware that changes event structure.
        return [
            FlashLoanEvent(
                log_index=abi_event.logIndex,
                transaction_index=abi_event.transactionIndex,
                transaction_hash=abi_event.transactionHash,
                address=abi_event.address,
                block_hash=abi_event.blockHash,
                block_number=abi_event.blockNumber,
                args=FlashLoanEvent.FlashLoanEventArgs(
                    target=abi_event.args["target"],
                    initiator=abi_event.args["initiator"],
                    asset=abi_event.args["asset"],
                    amount=abi_event.args["amount"],
                    interestRateMode=abi_event.args["interestRateMode"],
                    premium=abi_event.args["premium"],
                    referralCode=abi_event.args["referralCode"],
                ),
            )
            for abi_event in abi_events
        ]

    @combomethod_typed
    def create_filter(  # type: ignore
        self,
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class FlashLoanLogicReserveDataUpdatedContractEvent(ContractEvent):
    """ContractEvent for ReserveDataUpdated."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    @combomethod_typed
    def get_logs_typed(
        self,
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[ReserveDataUpdatedEvent]:
        """Extension of `get_logs` that return a typed dataclass of the event."""
        abi_events = super().get_logs(
            argument_filters=argument_filters,
            from_block=from_block,
            to_block=to_block,
            block_hash=block_hash,
        )
        # TODO there may be issues with this function if the user uses a middleware that changes event structure.
        return [
            ReserveDataUpdatedEvent(
                log_index=abi_event.logIndex,
                transaction_index=abi_event.transactionIndex,
                transaction_hash=abi_event.transactionHash,
                address=abi_event.address,
                block_hash=abi_event.blockHash,
                block_number=abi_event.blockNumber,
                args=ReserveDataUpdatedEvent.ReserveDataUpdatedEventArgs(
                    reserve=abi_event.args["reserve"],
                    liquidityRate=abi_event.args["liquidityRate"],
                    stableBorrowRate=abi_event.args["stableBorrowRate"],
                    variableBorrowRate=abi_event.args["variableBorrowRate"],
                    liquidityIndex=abi_event.args["liquidityIndex"],
                    variableBorrowIndex=abi_event.args["variableBorrowIndex"],
                ),
            )
            for abi_event in abi_events
        ]

    @combomethod_typed
    def process_receipt_typed(
        self, txn_receipt: TxReceipt, errors: EventLogErrorFlags = WARN
    ) -> Iterable[ReserveDataUpdatedEvent]:
        """Extension of `process_receipt` that return a typed dataclass of the event."""
        abi_events = super().process_receipt(txn_receipt, errors)
        # TODO there may be issues with this function if the user uses a middleware that changes event structure.
        return [
            ReserveDataUpdatedEvent(
                log_index=abi_event.logIndex,
                transaction_index=abi_event.transactionIndex,
                transaction_hash=abi_event.transactionHash,
                address=abi_event.address,
                block_hash=abi_event.blockHash,
                block_number=abi_event.blockNumber,
                args=ReserveDataUpdatedEvent.ReserveDataUpdatedEventArgs(
                    reserve=abi_event.args["reserve"],
                    liquidityRate=abi_event.args["liquidityRate"],
                    stableBorrowRate=abi_event.args["stableBorrowRate"],
                    variableBorrowRate=abi_event.args["variableBorrowRate"],
                    liquidityIndex=abi_event.args["liquidityIndex"],
                    variableBorrowIndex=abi_event.args["variableBorrowIndex"],
                ),
            )
            for abi_event in abi_events
        ]

    @combomethod_typed
    def create_filter(  # type: ignore
        self,
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class FlashLoanLogicContractEvents(ContractEvents):
    """ContractEvents for the FlashLoanLogic contract."""

    FlashLoan: Type[FlashLoanLogicFlashLoanContractEvent]

    ReserveDataUpdated: Type[FlashLoanLogicReserveDataUpdatedContractEvent]

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
    ) -> None:
        super().__init__(abi, w3, address)
        self.FlashLoan = cast(
            Type[FlashLoanLogicFlashLoanContractEvent],
            FlashLoanLogicFlashLoanContractEvent.factory(
                "FlashLoan",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="FlashLoan",
            ),
        )
        self.ReserveDataUpdated = cast(
            Type[FlashLoanLogicReserveDataUpdatedContractEvent],
            FlashLoanLogicReserveDataUpdatedContractEvent.factory(
                "ReserveDataUpdated",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="ReserveDataUpdated",
            ),
        )


class FlashLoanLogicContract(Contract):
    """A web3.py Contract class for the FlashLoanLogic contract."""

    abi: ABI = flashloanlogic_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x61297a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80632e7263ea14610045578063a1fe0e8d14610067575b600080fd5b81801561005157600080fd5b506100656100603660046121a5565b610087565b005b81801561007357600080fd5b50610065610082366004612356565b610a6f565b61009a8582602001518360400151610c9b565b6100ec6040518060e0016040528060006001600160a01b031681526020016000815260200160006001600160a01b03168152602001600081526020016060815260200160008152602001600081525090565b81602001515167ffffffffffffffff81111561010a5761010a611f47565b604051908082528060200260200182016040528015610133578160200160208202803683370190505b50608082015281516001600160a01b031681526101c0820151610160578161010001518260e00151610164565b6000805b60c083015260a0820152600060208201525b816020015151816020015110156103ff5781604001518160200151815181106101a1576101a1612420565b60209081029190910101516060820152600082606001518260200151815181106101cd576101cd612420565b602002602001015160028111156101e6576101e6612436565b60028111156101f7576101f7612436565b14610203576000610216565b60a0810151606082015161021691610df1565b816080015182602001518151811061023057610230612420565b602002602001018181525050610299866000846020015184602001518151811061025c5761025c612420565b6020908102919091018101516001600160a01b03168252818101929092526040908101600020815192830190915254815251600160fc1b16151590565b15610339576102ab8160600151610e17565b86600084602001518460200151815181106102c8576102c8612420565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060090160108282829054906101000a90046001600160801b03166103149190612462565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b856000836020015183602001518151811061035657610356612420565b6020908102919091018101516001600160a01b039081168352908201929092526040908101600020600490810154855160608601519351634efecaa560e01b8152908516928101929092526024820192909252911690634efecaa590604401600060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b50505060208201805191506103f782612489565b905250610176565b80600001516001600160a01b031663920f5c84836020015184604001518460800151338760a001516040518663ffffffff1660e01b8152600401610447959493929190612524565b6020604051808303816000875af1158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a91906125bf565b60405180604001604052806002815260200161313360f01b815250906104cc5760405162461bcd60e51b81526004016104c391906125dc565b60405180910390fd5b50600060208201525b81602001515181602001511015610a6757816020015181602001518151811061050057610500612420565b602002602001015181604001906001600160a01b031690816001600160a01b031681525050816040015181602001518151811061053f5761053f612420565b602090810291909101015160608201526000826060015182602001518151811061056b5761056b612420565b6020026020010151600281111561058457610584612436565b600281111561059557610595612436565b036106475761064286600083604001516001600160a01b03166001600160a01b031681526020019081526020016000206040518060c001604052808460600151815260200184608001518560200151815181106105f4576105f4612420565b602002602001015181526020018460c00151815260200184604001516001600160a01b0316815260200185600001516001600160a01b031681526020018560c0015161ffff16815250610e84565b610a4f565b73__$5f76d850ac254f0697945c46b13dedf9fb$__631e6473f98787878760405180610180016040528088604001516001600160a01b03168152602001336001600160a01b0316815260200189608001516001600160a01b031681526020018860600151815260200189606001518960200151815181106106ca576106ca612420565b602002602001015160028111156106e3576106e3612436565b60028111156106f4576106f4612436565b81526020018960c0015161ffff1681526020016000151581526020018961018001516001600160a01b031663e82fec2f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077791906125ef565b81526020018961018001516001600160a01b03166372218d046040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e391906125ef565b81526020018961016001516001600160a01b031663fca513a86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190612608565b6001600160a01b031681526020016108ea8a61018001516001600160a01b031663eddf1b798c608001516040518263ffffffff1660e01b81526004016108a491906001600160a01b0391909116815260200190565b602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e591906125ef565b61111a565b60ff1681526020018961016001516001600160a01b0316635eb88d3d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109599190612608565b6001600160a01b03168152506040518663ffffffff1660e01b8152600401610985959493929190612647565b60006040518083038186803b15801561099d57600080fd5b505af41580156109b1573d6000803e3d6000fd5b505050508160c0015161ffff1681604001516001600160a01b031683600001516001600160a01b03167fefefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f03385606001518760600151876020015181518110610a1b57610a1b612420565b60200260200101516002811115610a3457610a34612436565b6000604051610a46949392919061273b565b60405180910390a45b60208101805190610a5f82612489565b9052506104d5565b505050505050565b610a7d82826040015161117b565b805160c08201516040830151600091610a969190610df1565b6040805160208101909152855490819052909150600160fc1b1615610b0b57610ac28360400151610e17565b600985018054601090610ae6908490600160801b90046001600160801b0316612462565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b60048481015484516040808701519051634efecaa560e01b81526001600160a01b039283169481019490945260248401521690634efecaa590604401600060405180830381600087803b158015610b6157600080fd5b505af1158015610b75573d6000803e3d6000fd5b50505050602083015160408085015160608601519151631b11d0ff60e01b81526001600160a01b03861693631b11d0ff93610bb89391928791339160040161276e565b6020604051808303816000875af1158015610bd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfb91906125bf565b60405180604001604052806002815260200161313360f01b81525090610c345760405162461bcd60e51b81526004016104c391906125dc565b50610c95846040518060c00160405280866040015181526020018481526020018660a00151815260200186602001516001600160a01b0316815260200186600001516001600160a01b03168152602001866080015161ffff16815250610e84565b50505050565b805182511460405180604001604052806002815260200161343960f01b81525090610cd95760405162461bcd60e51b81526004016104c391906125dc565b5060005b8251811015610c95576000610cf38260016127b3565b90505b8351811015610d8957838181518110610d1157610d11612420565b60200260200101516001600160a01b0316848381518110610d3457610d34612420565b60200260200101516001600160a01b0316141560405180604001604052806002815260200161343960f01b81525090610d805760405162461bcd60e51b81526004016104c391906125dc565b50600101610cf6565b50610de9846000858481518110610da257610da2612420565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020838381518110610ddc57610ddc612420565b602002602001015161117b565b600101610cdd565b600081156113881983900484111517610e0957600080fd5b506127109102611388010490565b60006001600160801b03821115610e805760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016104c3565b5090565b6000610ea182604001518360200151610df190919063ffffffff16565b90506000818360200151610eb591906127c6565b9050600083602001518460000151610ecd91906127b3565b90506000610eda86611327565b9050610ee686826114f7565b6101008101516008870154610f8191610f08916001600160801b03169061154f565b826101e001516001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6f91906125ef565b610f7991906127b3565b879085611592565b6101008201819052610f9d90610f98908690611617565b610e17565b600887018054600090610fba9084906001600160801b03166127d9565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610ffc8186606001518460008a61165490949392919063ffffffff16565b60808501516101e08201516060870151611022926001600160a01b039091169185611975565b6101e081015160808601516040516337ecbb3b60e11b81526001600160a01b0391821660048201819052602482015260448101859052911690636fd9767690606401600060405180830381600087803b15801561107e57600080fd5b505af1158015611092573d6000803e3d6000fd5b505050508460a0015161ffff1685606001516001600160a01b031686608001516001600160a01b03167fefefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0338960000151600060028111156110f5576110f5612436565b8b6020015160405161110a949392919061273b565b60405180910390a4505050505050565b600060ff821115610e805760405162461bcd60e51b815260206004820152602560248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2038604482015264206269747360d81b60648201526084016104c3565b604080516020810190915282548082526710000000000000001615151560405180604001604052806002815260200161323960f01b815250906111d15760405162461bcd60e51b81526004016104c391906125dc565b50805167010000000000000016151560405180604001604052806002815260200161323760f01b815250906112195760405162461bcd60e51b81526004016104c391906125dc565b50805167800000000000000016151560405180604001604052806002815260200161393160f01b815250906112615760405162461bcd60e51b81526004016104c391906125dc565b508051600160fc1b1615806112ee5750818360040160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112eb91906125ef565b10155b60405180604001604052806002815260200161191b60f11b81525090610c955760405162461bcd60e51b81526004016104c391906125dc565b61132f611e9a565b611337611e9a565b60408051602081018252845481526101c0830181905251901c61ffff166101a082015260018301546001600160801b03808216610100840181905260e084015260028501548082166101408501819052610120850152600160801b928390048216610160850152829004166101808301526004808501546001600160a01b039081166101e085015260058601548116610200850152600686015416610220840181905260038601549290920464ffffffffff166102408401526040805163b1bf962d60e01b8152905163b1bf962d928281019260209291908290030181865afa158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c91906125ef565b81602001818152508160000181815250508061020001516001600160a01b031663797743386040518163ffffffff1660e01b8152600401608060405180830381865afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c491906127f9565b64ffffffffff166102608501526060840181905260808401829052604084019290925260c083015260a082015292915050565b600382015464ffffffffff428116600160801b9092041603611517575050565b6115218282611a17565b61152b8282611af6565b50600301805464ffffffffff60801b1916600160801b4264ffffffffff1602179055565b600081156b019d971e4fe8401e74000000198390048411151761157157600080fd5b50676765c793fa10079d601b1b91026b019d971e4fe8401e74000000010490565b600183015460009081906115e0906001600160801b0316676765c793fa10079d601b1b6115d06115c188611c5e565b6115ca88611c5e565b90611617565b6115da91906127b3565b9061154f565b90506115eb81610e17565b6001860180546001600160801b0319166001600160801b039290921691909117905590505b9392505050565b60008115676765c793fa10079d601b1b6002840419048411171561163a57600080fd5b50676765c793fa10079d601b1b9190910260028204010490565b61167f6040518060800160405280600081526020016000815260200160008152602001600081525090565b61014085015160208601516116939161154f565b60608281019182526007880154604080516101408101825260088b01546001600160801b03600160801b918290048116835260208084018b90528385018a905260c08d810151978501979097529651608084015260a0808d0151908401526101a08c0151958301959095526001600160a01b038a811660e0840152835196870184528c5496879052600160fc1b909616151561010083015260098c01540490931661012084015251637b424dcf60e11b815292169163f6849b9e9161175a91600401612844565b606060405180830381865afa158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179b91906128c7565b604084015260208301528082526117b190610e17565b6001870180546001600160801b03928316600160801b02921691909117905560208101516117de90610e17565b6003870180546001600160801b0319166001600160801b0392909216919091179055604081015161180e90610e17565b6002870180546001600160801b03928316600160801b02921691909117905560408051602081019091528654815261184c9051600160fc1b16151590565b156119015782156118a95761186083610e17565b600987018054601090611884908490600160801b90046001600160801b03166127d9565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b8115611901576118b882610e17565b6009870180546010906118dc908490600160801b90046001600160801b0316612462565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b80516020808301516040808501516101008a01516101408b015183519687529486019390935290840152606083015260808201526001600160a01b038516907f804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a9060a00160405180910390a2505050505050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16119ba573d6000803e3d6000fd5b506119c485611c79565b611a105760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d0000000000000060448201526064016104c3565b5050505050565b61016081015115611a86576000611a38826101600151836102400151611d21565b9050611a518260e001518261154f90919063ffffffff16565b6101008301819052611a6290610e17565b6001840180546001600160801b0319166001600160801b0392909216919091179055505b805115611af2576000611aa3826101800151836102400151611d67565b9050611abd8261012001518261154f90919063ffffffff16565b6101408301819052611ace90610e17565b6002840180546001600160801b0319166001600160801b0392909216919091179055505b5050565b611b2f6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b816101a00151600003611b4157505050565b6101208201518251611b529161154f565b60208201526101408201518251611b689161154f565b60408201526060820151610260830151610240840151611b9092919064ffffffffff16611d70565b606082018190526040830151611ba59161154f565b808252602082015160808401516040840151611bc191906127b3565b611bcb91906127c6565b611bd591906127c6565b608082018190526101a0830151611bec9190610df1565b60a0820181905215611c5957611c17610f988361010001518360a0015161161790919063ffffffff16565b600884018054600090611c349084906001600160801b03166127d9565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b505050565b633b9aca008181029081048214611c7457600080fd5b919050565b6000611c9e565b62461bcd60e51b600052602060045280602452508060445260646000fd5b3d8015611cdd5760208114611d0e57611cd87f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f611c80565b611d1b565b823b611d0557611d057311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014611c80565b60019150611d1b565b3d6000803e600051151591505b50919050565b600080611d3564ffffffffff8416426127c6565b611d3f90856128f5565b6301e1338090049050611d5d81676765c793fa10079d601b1b6127b3565b9150505b92915050565b60006116108383425b600080611d8464ffffffffff8516846127c6565b905080600003611da257676765c793fa10079d601b1b915050611610565b60001981016000808060028511611dba576000611dbf565b600285035b925066038882915c4000611dd38a8061154f565b81611de057611de061290c565b0491506301e13380611df2838b61154f565b81611dff57611dff61290c565b049050600082611e0f86886128f5565b611e1991906128f5565b60029004905060008285611e2d888a6128f5565b611e3791906128f5565b611e4191906128f5565b60069004905080826301e13380611e588a8f6128f5565b611e629190612922565b611e7790676765c793fa10079d601b1b6127b3565b611e8191906127b3565b611e8b91906127b3565b9b9a5050505050505050505050565b6040518061028001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611f1e6040518060200160405280600081525090565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff81118282101715611f8157611f81611f47565b60405290565b60405160e0810167ffffffffffffffff81118282101715611f8157611f81611f47565b604051601f8201601f1916810167ffffffffffffffff81118282101715611fd357611fd3611f47565b604052919050565b6001600160a01b0381168114611ff057600080fd5b50565b8035611c7481611fdb565b600067ffffffffffffffff82111561201857612018611f47565b5060051b60200190565b600082601f83011261203357600080fd5b8135602061204861204383611ffe565b611faa565b8083825260208201915060208460051b87010193508684111561206a57600080fd5b602086015b8481101561208f57803561208281611fdb565b835291830191830161206f565b509695505050505050565b600082601f8301126120ab57600080fd5b813560206120bb61204383611ffe565b8083825260208201915060208460051b8701019350868411156120dd57600080fd5b602086015b8481101561208f57803583529183019183016120e2565b600082601f83011261210a57600080fd5b813567ffffffffffffffff81111561212457612124611f47565b612137601f8201601f1916602001611faa565b81815284602083860101111561214c57600080fd5b816020850160208301376000918101602001919091529392505050565b803561ffff81168114611c7457600080fd5b803560ff81168114611c7457600080fd5b8015158114611ff057600080fd5b8035611c748161218c565b600080600080600060a086880312156121bd57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff808211156121f157600080fd5b908701906101e0828a03121561220657600080fd5b61220e611f5d565b61221783611ff3565b815260208301358281111561222b57600080fd5b6122378b828601612022565b60208301525060408301358281111561224f57600080fd5b61225b8b82860161209a565b60408301525060608301358281111561227357600080fd5b61227f8b82860161209a565b60608301525061229160808401611ff3565b608082015260a0830135828111156122a857600080fd5b6122b48b8286016120f9565b60a0830152506122c660c08401612169565b60c082015260e083810135908201526101008084013590820152610120808401359082015261014080840135908201526101609150612306828401611ff3565b82820152610180915061231a828401611ff3565b828201526101a0915061232e82840161217b565b828201526101c0915061234282840161219a565b828201528093505050509295509295909350565b6000806040838503121561236957600080fd5b82359150602083013567ffffffffffffffff8082111561238857600080fd5b9084019060e0828703121561239c57600080fd5b6123a4611f87565b6123ad83611ff3565b81526123bb60208401611ff3565b6020820152604083013560408201526060830135828111156123dc57600080fd5b6123e8888286016120f9565b6060830152506123fa60808401612169565b608082015260a083013560a082015260c083013560c08201528093505050509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6001600160801b038281168282160390808211156124825761248261244c565b5092915050565b60006001820161249b5761249b61244c565b5060010190565b60008151808452602080850194506020840160005b838110156124d3578151875295820195908201906001016124b7565b509495945050505050565b6000815180845260005b81811015612504576020818501810151868301820152016124e8565b506000602082860101526020601f19601f83011685010191505092915050565b60a0808252865190820181905260009060209060c0840190828a01845b828110156125665781516001600160a01b031684529284019290840190600101612541565b505050838103602085015261257b81896124a2565b915050828103604084015261259081876124a2565b6001600160a01b0386166060850152838103608085015290506125b381856124de565b98975050505050505050565b6000602082840312156125d157600080fd5b81516116108161218c565b60208152600061161060208301846124de565b60006020828403121561260157600080fd5b5051919050565b60006020828403121561261a57600080fd5b815161161081611fdb565b6003811061264357634e487b7160e01b600052602160045260246000fd5b9052565b85815260208101859052604081018490526060810183905281516001600160a01b03166080820152610200810160208301516001600160a01b03811660a08401525060408301516001600160a01b03811660c084015250606083015160e083015260808301516101006126bc81850183612625565b60a085015191506101206126d58186018461ffff169052565b60c086015192506101406126ec8187018515159052565b60e08701516101608781019190915292870151610180870152908601516001600160a01b039081166101a08701529086015160ff166101c0860152908501519081166101e0850152905061208f565b6001600160a01b0385168152602081018490526080810161275f6040830185612625565b82606083015295945050505050565b6001600160a01b03868116825260208201869052604082018590528316606082015260a0608082018190526000906127a8908301846124de565b979650505050505050565b80820180821115611d6157611d6161244c565b81810381811115611d6157611d6161244c565b6001600160801b038181168382160190808211156124825761248261244c565b6000806000806080858703121561280f57600080fd5b845193506020850151925060408501519150606085015164ffffffffff8116811461283957600080fd5b939692955090935050565b600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e08301516128a760e08401826001600160a01b03169052565b506101008381015180151584830152505061012092830151919092015290565b6000806000606084860312156128dc57600080fd5b8351925060208401519150604084015190509250925092565b8082028115828204841417611d6157611d6161244c565b634e487b7160e01b600052601260045260246000fd5b60008261293f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e72f0ae3b92d89eb1333ef4d2f893e367da4d3f7b0815129259a7a8a6ca5ff4c64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = FlashLoanLogicContractFunctions(flashloanlogic_abi, self.w3, address)  # type: ignore
        self.events = FlashLoanLogicContractEvents(flashloanlogic_abi, self.w3, address)  # type: ignore

    events: FlashLoanLogicContractEvents

    functions: FlashLoanLogicContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        BorrowLogic: BorrowLogicContract

    link_references_placeholder_lookup: dict[str, str] = {
        "BorrowLogic": "__$5f76d850ac254f0697945c46b13dedf9fb$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["BorrowLogic"],
                link_references.BorrowLogic.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = FlashLoanLogicContractFunctions(
            flashloanlogic_abi, w3, None
        )

        return contract
