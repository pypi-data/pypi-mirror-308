"""A web3.py Contract class for the AaveL2Target3Deployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, NamedTuple, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive
from ..LPMath import LPMathContract

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

aavel2target3deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class AaveL2Target3DeployerContractErrors(PypechainBaseContractErrors):
    """ContractErrors for the AaveL2Target3Deployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class AaveL2Target3DeployerDeployTargetContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget(IHyperdrive.PoolConfig,str,bytes,bytes) method."""

    _function_name = "deployTarget"
    _type_signature = expand_struct_type_str(
        tuple(["IHyperdrive.PoolConfig", "str", "bytes", "bytes"]), structs
    )
    _error_class = AaveL2Target3DeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class AaveL2Target3DeployerDeployTargetContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployTarget method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployTarget"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, _config: IHyperdrive.PoolConfig, _adminController: str, arg3: bytes, _salt: bytes) -> AaveL2Target3DeployerDeployTargetContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> AaveL2Target3DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            AaveL2Target3DeployerDeployTargetContractFunction0._type_signature: AaveL2Target3DeployerDeployTargetContractFunction0.factory(
                "AaveL2Target3DeployerDeployTargetContractFunction0", **kwargs
            ),
        }
        return out


class AaveL2Target3DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the AaveL2Target3Deployer contract."""

    deployTarget: AaveL2Target3DeployerDeployTargetContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            AaveL2Target3DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )


class AaveL2Target3DeployerContract(Contract):
    """A web3.py Contract class for the AaveL2Target3Deployer contract."""

    abi: ABI = aavel2target3deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063bf3aa15690610476908490600401613c16565b602060405180830381865af4158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190613c25565b91506104ca6104c58c6117c5565b6117f3565b6002546001600160801b03808216835260048054600f0b6020850152600160801b9092041660408084019190915251635f9d50ab60e11b815273__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9163bf3aa1569161052b91859101613c16565b602060405180830381865af4158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190613c25565b92508183101561058f5760405163184d952160e11b815260040160405180910390fd5b6105a5848361059e8187613b85565b9190611819565b9c507f00000000000000000000000000000000000000000000000000000000000000008d10156105e85760405163211ddda360e11b815260040160405180910390fd5b508f6105f4868e611837565b10156106135760405163c972651760e01b815260040160405180910390fd5b61063160008e600001602081019061062b9190613c53565b8e61184c565b61063a896118f4565b95508561065a57604051638bdf918d60e01b815260040160405180910390fd5b600088905060008d9050368f905060008c9050600061071d600260000160009054906101000a90046001600160801b03166001600160801b03166002800160009054906101000a9004600f0b600f0b600260000160109054906101000a90046001600160801b03166001600160801b031685600260010160009054906101000a90046001600160801b03166001600160801b03166102627f00000000000000000000000000000000000000000000000000000000000000008c61025d9190613b72565b9b5090508a158061073757506107348c6000611901565b81125b1561075557604051630552b01360e31b815260040160405180910390fd5b6000881561076d5761076887848b611819565b610770565b60005b905061077f6020850185613c53565b6001600160a01b03167fdcc4a01cea4510bd52201cebc8cd2d47d60429b35d68329abc591a70aa2efabf868d866107bc60408a0160208b01613c7e565b866107ca60408c018c613c9b565b6040516107dd9796959493929190613ce2565b60405180910390a250505050505050505050505050505050506100786001600055565b600061080a610bb9565b610812610be3565b61081b82610c04565b60065460ff161561083f57604051637983c05160e01b815260040160405180910390fd5b60008061084c8685610c89565b909250905061087c7f00000000000000000000000000000000000000000000000000000000000000006002613d36565b82101561089c57604051632afb507160e21b815260040160405180910390fd5b6006805460ff1916600117905560405163594f0e8f60e11b815260048101839052602481018290527f00000000000000000000000000000000000000000000000000000000000000006044820152606481018690527f000000000000000000000000000000000000000000000000000000000000000060848201527f000000000000000000000000000000000000000000000000000000000000000060a482015260027f000000000000000000000000000000000000000000000000000000000000000002830393506000908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b81526004016124f7929190613ec4565b6040805180830381865af4158015612513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125379190613f3a565b91509150612555612547826117c5565b61255090613f5e565b612afb565b92508261256b576000965050505050505061144c565b6125748261193c565b6007805460009061258f9084906001600160801b0316613d9b565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506125bc8161193c565b600780546010906125de908490600160801b90046001600160801b0316613d9b565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61263b8761168b565b6040518263ffffffff1660e01b81526004016126579190613c16565b6040805180830381865af4158015612673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126979190613f7a565b91509150806126ad575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161271391613b72565b61271d9190613b85565b90508060000361273557506000958695509350505050565b6000808711612745576000612750565b612750848884611819565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff81111561278457612784613faa565b6040519080825280601f01601f1916602001820160405280156127ae576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156127cf578692505b828152826000602083013e9093509150505b9550959350505050565b6000806000836127fa866117c5565b6128049190613dbb565b9050600081121561281c576000809250925050610d57565b946001945092505050565b60008060006128398888888888613252565b90506000612864670de0b6b3a76400006128538888613008565b61285d9190613b72565b8390611837565b9050670de0b6b3a764000081106128985761289161288a670de0b6b3a764000089611837565b8290612cac565b90506128b0565b6128ad61288a670de0b6b3a764000089613008565b90505b6128ba8186611837565b9050888110156128d2576000809350935050506127e1565b97909703976001975095505050505050565b60008060006128f68989888888613281565b9050612910866119b36129098a8d613b72565b87906121a9565b985061291d858a86611819565b985088811015612934576000809250925050611654565b888103670de0b6b3a764000081106129625761295b61288a670de0b6b3a764000089613008565b905061297a565b61297761288a670de0b6b3a764000089611837565b90505b8089101561299057600080935093505050611654565b90970398600198509650505050505050565b60008060008060006129b58987896132a6565b90925090506129c48289613b85565b975060006129d382888a611819565b90506129df818b613b85565b9a989950979650505050505050565b6000806129fc84600061332c565b612a0784600061332c565b612a119190613dbb565b90506000811315612a2d57612a268186613b72565b9450612a4c565b6000811215612a4c57612a3f81613f5e565b612a499086613b85565b94505b50929392505050565b60006100918383670de0b6b3a76400005b6000826000190484118302158202612a7d57600080fd5b50910281810615159190040190565b600080670de0b6b3a7640000612aa0610d5e565b612aaa9190613d36565b9050808311612aba576000612ac4565b612ac48184613b85565b915061009161285d670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613d36565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd89190613fc0565b935093509350935080612bf45750600098975050505050505050565b868414612c2557612c048461193c565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612c5657612c3583611966565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612c8457612c668261193c565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600081600003612cc55750670de0b6b3a764000061144c565b82600003612cd55750600061144c565b6000612ce0836117c5565b90506000612cf5612cf0866117c5565b613342565b9050818102612d0c670de0b6b3a764000082614001565b9050612d1781613568565b9695505050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052611bc79186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506136fd565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052612dd9848261376a565b611bc7576040516001600160a01b03848116602483015260006044830152612e0e91869182169063095ea7b390606401612d56565b611bc784826136fd565b6040516335ea6a7560e01b81526001600160a01b03848116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a75906024016101e060405180830381865afa158015612e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea891906140f5565b60e0015190506000612eb98561193c565b60101b609085901b01919091019150509392505050565b600061144c7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008461380d565b600061144c7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084613831565b600082600003612f7b575084610078565b8115612fce57612fac612f8e8487613b72565b612f9885876121a9565b612fa2888a6121a9565b6116859190613b72565b90506000612fba8588611d34565b905080821015612fc8578091505b50610078565b828503612fdd57506000610078565b610075612fea8487613b85565b612ff48587612a55565b612ffe888a6121a9565b6116859190613b85565b600061009183670de0b6b3a764000084612a66565b600060016001607f1b038211156117ef5760405163a5353be560e01b815260040160405180910390fd5b6003546000908190613062906001600160801b031684613008565b905061308e7f000000000000000000000000000000000000000000000000000000000000000082613b72565b6002546001600160801b03161115611910576002547f0000000000000000000000000000000000000000000000000000000000000000906130d99083906001600160801b0316613b85565b6100919190613b85565b6130eb613a44565b6000806130f78461168b565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b81526004016131329190613c16565b6040805180830381865af415801561314e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131729190613f7a565b9350905082613187575060009150611b0d9050565b60006131a96116168461016001518561014001516121a990919063ffffffff16565b6131c9611616856101200151866101000151612a5590919063ffffffff16565b6131d39190613dbb565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b600061325e8585612cac565b61327761326f866119b3868b6121a9565b859085611819565b6100759190613b72565b600061328d8585612cac565b61327761329e866119b3868b612a55565b859085612a66565b6000806132f6856132f085817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400006132e6818c613008565b6132f09190613b85565b90612a55565b9150613322827f00000000000000000000000000000000000000000000000000000000000000006121a9565b9050935093915050565b600081831361333b5781610091565b5090919050565b60008082136133645760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906133e79084901c6117c5565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361358357506000919050565b680755bf798b4a1bf1e582126135ac576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b018181059550929350909190612d1774029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c6117c5565b60006137126001600160a01b03841683613854565b905080516000141580156137375750808060200190518101906137359190613e30565b155b1561376557604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516137879190614218565b6000604051808303816000865af19150503d80600081146137c4576040519150601f19603f3d011682016040523d82523d6000602084013e6137c9565b606091505b50915091508180156137f35750805115806137f35750808060200190518101906137f39190613e30565b80156100785750505050506001600160a01b03163b151590565b600061008e6b033b2e3c9fd0803ce80000006138298686613862565b849190611819565b600061008e6138408585613862565b83906b033b2e3c9fd0803ce8000000611819565b6060610091838360006138d0565b60405163d15e005360e01b81526001600160a01b0383811660048301526000919083169063d15e005390602401602060405180830381865afa1580156138ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100919190613c25565b6060814710156138f55760405163cd78605960e01b815230600482015260240161375c565b600080856001600160a01b031684866040516139119190614218565b60006040518083038185875af1925050503d806000811461394e576040519150601f19603f3d011682016040523d82523d6000602084013e613953565b606091505b5091509150612d178683836060826139735761396e826139ba565b610091565b815115801561398a57506001600160a01b0384163b155b156139b357604051639996b31560e01b81526001600160a01b038516600482015260240161375c565b5080610091565b8051156139ca5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101200160405280613a586139e3565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006060828403121561191057600080fd5b600080600080600060a08688031215613ac057600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115613af357600080fd5b613aff88828901613a96565b9150509295509295909350565b600080600060608486031215613b2157600080fd5b8335925060208401359150604084013567ffffffffffffffff811115613b4657600080fd5b613b5286828701613a96565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561144c5761144c613b5c565b8181038181111561144c5761144c613b5c565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b610180810161144c8284613b98565b600060208284031215613c3757600080fd5b5051919050565b6001600160a01b0381168114610c3a57600080fd5b600060208284031215613c6557600080fd5b813561009181613c3e565b8015158114610c3a57600080fd5b600060208284031215613c9057600080fd5b813561009181613c70565b6000808335601e19843603018112613cb257600080fd5b83018035915067ffffffffffffffff821115613ccd57600080fd5b602001915036819003821315610d5757600080fd5b878152866020820152856040820152841515606082015283608082015260c060a08201528160c0820152818360e0830137600081830160e090810191909152601f909201601f191601019695505050505050565b808202811582820484141761144c5761144c613b5c565b600080600060608486031215613d6257600080fd5b8351925060208401519150604084015190509250925092565b6001600160701b0381811683821601908082111561193557611935613b5c565b6001600160801b0381811683821601908082111561193557611935613b5c565b818103600083128015838313168383128216171561193557611935613b5c565b8051613de681613c3e565b919050565b600060208284031215613dfd57600080fd5b815161009181613c3e565b8082018281126000831280158216821582161715613e2857613e28613b5c565b505092915050565b600060208284031215613e4257600080fd5b815161009181613c70565b634e487b7160e01b600052601260045260246000fd5b600082613e7257613e72613e4d565b500690565b6001600160801b0382811682821603908082111561193557611935613b5c565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561144c5761144c613b5c565b60006102a082019050613ed8828551613b98565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613f4d57600080fd5b505080516020909101519092909150565b6000600160ff1b8201613f7357613f73613b5c565b5060000390565b60008060408385031215613f8d57600080fd5b825191506020830151613f9f81613c70565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613fd657600080fd5b8451935060208501519250604085015191506060850151613ff681613c70565b939692955090935050565b60008261401057614010613e4d565b600160ff1b82146000198414161561402a5761402a613b5c565b500590565b6040516101e0810167ffffffffffffffff8111828210171561406157634e487b7160e01b600052604160045260246000fd5b60405290565b60006020828403121561407957600080fd5b6040516020810181811067ffffffffffffffff821117156140aa57634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516001600160801b0381168114613de657600080fd5b805164ffffffffff81168114613de657600080fd5b805161ffff81168114613de657600080fd5b60006101e0828403121561410857600080fd5b61411061402f565b61411a8484614067565b8152614128602084016140b7565b6020820152614139604084016140b7565b604082015261414a606084016140b7565b606082015261415b608084016140b7565b608082015261416c60a084016140b7565b60a082015261417d60c084016140ce565b60c082015261418e60e084016140e3565b60e08201526101006141a1818501613ddb565b908201526101206141b3848201613ddb565b908201526101406141c5848201613ddb565b908201526101606141d7848201613ddb565b908201526101806141e98482016140b7565b908201526101a06141fb8482016140b7565b908201526101c061420d8482016140b7565b908201529392505050565b6000825160005b81811015614239576020818601810151858301520161421f565b50600092019182525091905056fea264697066735822122001386c875fff4bc801ce8158787d5be42b9093f6a838fdd61fa0a79ae169974764736f6c63430008160033a26469706673582212201e11f2c9988c21a884941e4b6a92774e9f1f3f695efc55f2af7402ed7d462fea64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = AaveL2Target3DeployerContractFunctions(aavel2target3deployer_abi, self.w3, address)  # type: ignore

    functions: AaveL2Target3DeployerContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = AaveL2Target3DeployerContractFunctions(
            aavel2target3deployer_abi, w3, None
        )

        return contract
