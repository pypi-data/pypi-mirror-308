"""A web3.py Contract class for the AerodromeLpHyperdriveCoreDeployer contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.47.
See documentation at https://github.com/delvtech/pypechain """

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overridden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long

# We use protected classes within pypechain
# pylint: disable=protected-access

# We sometimes define a variable that might not be returned in `call`,
# but we still may want to call the function
# pylint: disable=unused-variable


from __future__ import annotations

import copy
from typing import Any, Type, cast, overload

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from pypechain.core import (
    PypechainBaseContractErrors,
    PypechainContractFunction,
    dataclass_to_tuple,
    expand_struct_type_str,
    get_arg_type_names,
    rename_returned_types,
)
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from ..IHyperdrive import IHyperdriveTypes as IHyperdrive

structs = {
    "IHyperdrive.Fees": IHyperdrive.Fees,
    "IHyperdrive.PoolConfig": IHyperdrive.PoolConfig,
}

aerodromelphyperdrivecoredeployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "function",
            "name": "deployHyperdrive",
            "inputs": [
                {"name": "__name", "type": "string", "internalType": "string"},
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {
                    "name": "_extraData",
                    "type": "bytes",
                    "internalType": "bytes",
                },
                {
                    "name": "_target0",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target1",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target2",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target3",
                    "type": "address",
                    "internalType": "address",
                },
                {
                    "name": "_target4",
                    "type": "address",
                    "internalType": "address",
                },
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        }
    ],
)


class AerodromeLpHyperdriveCoreDeployerContractErrors(
    PypechainBaseContractErrors
):
    """ContractErrors for the AerodromeLpHyperdriveCoreDeployer contract."""

    def __init__(
        self,
    ) -> None:

        self._all = []


class AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction0(
    PypechainContractFunction
):
    """ContractFunction for the deployHyperdrive(str,IHyperdrive.PoolConfig,str,bytes,str,str,str,str,str,bytes) method."""

    _function_name = "deployHyperdrive"
    _type_signature = expand_struct_type_str(
        tuple(
            [
                "str",
                "IHyperdrive.PoolConfig",
                "str",
                "bytes",
                "str",
                "str",
                "str",
                "str",
                "str",
                "bytes",
            ]
        ),
        structs,
    )
    _error_class = AerodromeLpHyperdriveCoreDeployerContractErrors

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier | None = None,
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # We handle the block identifier = None case here for typing.
        if block_identifier is None:
            block_identifier = self.w3.eth.default_block

        # Define the expected return types from the smart contract call
        return_types = str

        # Call the function
        raw_values = self._call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction(
    PypechainContractFunction
):
    """ContractFunction for the deployHyperdrive method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    _function_name = "deployHyperdrive"

    # Make lookup for function signature -> overloaded function
    # The function signatures are python types, as we need to do a
    # lookup of arguments passed in to contract function
    _functions: dict[str, PypechainContractFunction]

    @overload
    def __call__(self, __name: str, _config: IHyperdrive.PoolConfig, _adminController: str, _extraData: bytes, _target0: str, _target1: str, _target2: str, _target3: str, _target4: str, _salt: bytes) -> AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction0:  # type: ignore
        ...

    def __call__(self, *args, **kwargs) -> AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction:  # type: ignore
        clone = super().__call__(
            *(dataclass_to_tuple(arg) for arg in args),
            **{key: dataclass_to_tuple(arg) for key, arg in kwargs.items()},
        )

        # Arguments is the flattened set of arguments from args and kwargs, ordered by the abi
        # We get the python types of the args passed in, but remapped from tuples -> dataclasses
        arg_types = get_arg_type_names(clone.arguments)

        # Look up the function class based on arg types.
        # We ensure we use a copy of the original object.
        function_obj = copy.copy(self._functions[arg_types])

        function_obj.args = clone.args
        function_obj.kwargs = clone.kwargs

        # The `@overload` of `__call__` takes care of setting the type of this object correctly
        return function_obj  # type: ignore

    @classmethod
    def factory(cls, class_name: str, **kwargs: Any) -> Self:
        out = super().factory(class_name, **kwargs)

        # We initialize our overridden functions here.
        # Note that we use the initialized object to ensure each function
        # is attached to the instanciated object
        # (attached to a specific web3 and contract address)
        out._functions = {
            AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction0._type_signature: AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction0.factory(
                "AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction0",
                **kwargs,
            ),
        }
        return out


class AerodromeLpHyperdriveCoreDeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the AerodromeLpHyperdriveCoreDeployer contract."""

    deployHyperdrive: (
        AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction
    )

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployHyperdrive = AerodromeLpHyperdriveCoreDeployerDeployHyperdriveContractFunction.factory(
            "deployHyperdrive",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="deployHyperdrive",
        )


class AerodromeLpHyperdriveCoreDeployerContract(Contract):
    """A web3.py Contract class for the AerodromeLpHyperdriveCoreDeployer contract."""

    abi: ABI = aerodromelphyperdrivecoredeployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x608060405234801561001057600080fd5b50612360806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638cc23ce01462000033575b600080fd5b6200004a62000044366004620003f1565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b6000601488511015620000bf5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964205f657874726144617461206c656e67746800000000000000604482015260640160405180910390fd5b600088806020019051810190620000d79190620004f1565b60408051336020820152908101859052909150606001604051602081830303815290604052805190602001208c8c8c8b8b8b8b8b896040516200011a9062000162565b6200012e9998979695949392919062000638565b8190604051809103906000f59050801580156200014f573d6000803e3d6000fd5b509150505b9a9950505050505050505050565b611c18806200071383390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff81118282101715620001ad57620001ad62000170565b60405290565b600082601f830112620001c557600080fd5b813567ffffffffffffffff80821115620001e357620001e362000170565b604051601f8301601f19908116603f011681019082821181831017156200020e576200020e62000170565b816040528381528660208588010111156200022857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146200025e57600080fd5b50565b80356200026e8162000248565b919050565b6000608082840312156200028657600080fd5b6040516080810181811067ffffffffffffffff82111715620002ac57620002ac62000170565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006102608284031215620002f157600080fd5b620002fb62000186565b9050620003088262000261565b8152620003186020830162000261565b60208201526200032b6040830162000261565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013581830152506101606200039681840162000261565b90820152610180620003aa83820162000261565b908201526101a0620003be83820162000261565b908201526101c0620003d283820162000261565b908201526101e0620003e78484830162000273565b9082015292915050565b6000806000806000806000806000806103808b8d0312156200041257600080fd5b8a3567ffffffffffffffff808211156200042b57600080fd5b620004398e838f01620001b3565b9b506200044a8e60208f01620002dd565b9a506200045b6102808e0162000261565b99506102a08d01359150808211156200047357600080fd5b50620004828d828e01620001b3565b975050620004946102c08c0162000261565b9550620004a56102e08c0162000261565b9450620004b66103008c0162000261565b9350620004c76103208c0162000261565b9250620004d86103408c0162000261565b91506103608b013590509295989b9194979a5092959850565b6000602082840312156200050457600080fd5b8151620005118162000248565b9392505050565b80516001600160a01b0316825260208101516200054060208401826001600160a01b03169052565b5060408101516200055c60408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151818401525061014080820151818401525061016080820151620005cf828501826001600160a01b03169052565b5050610180818101516001600160a01b03908116918401919091526101a0808301518216908401526101c080830151909116908301526101e090810151805191830191909152602081015161020083015260408101516102208301526060015161024090910152565b60006103608083528b518082850152600091505b8082101562000670576020828e01015161038083860101526020820191506200064c565b6103809150600082828601015281601f19601f830116850101925050506200069c602083018b62000518565b6001600160a01b0389166102808301526001600160a01b0388166102a08301526001600160a01b0387166102c08301526001600160a01b0386166102e08301526001600160a01b0385166103008301526001600160a01b0384166103208301526001600160a01b0383166103408301526200015456fe6103406040523480156200001257600080fd5b5060405162001c1838038062001c188339810160408190526200003591620006c3565b6001600081905588516001600160a01b0390811660809081526020808c0151831660a0908152918c01516101a052908b01516101c05260c0808c01516101e090815260e0808e015161020052610120808f0151909352610100808f0151909152610140808f0151909152908d01805151909252815190920151909152805160409081015161016052905160609081015161018052908b01518216610240528a01516102605288166102205281908a908a908a908a908a908a908a908a90620000fe89826200088f565b506001600160a01b03948516610280529284166102a0529083166102c05282166102e0528116610300529384166103205250508951620001449216905030600162000153565b5050505050505050506200099d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001ad90859083906200021f16565b6200021957604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200020d918691620002d016565b620002198482620002d0565b50505050565b6000806000846001600160a01b0316846040516200023e91906200095b565b6000604051808303816000865af19150503d80600081146200027d576040519150601f19603f3d011682016040523d82523d6000602084013e62000282565b606091505b5091509150818015620002b0575080511580620002b0575080806020019051810190620002b0919062000979565b8015620002c757506000856001600160a01b03163b115b95945050505050565b6000620002e76001600160a01b0384168362000343565b905080516000141580156200030f5750808060200190518101906200030d919062000979565b155b156200033e57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b606062000353838360006200035a565b9392505050565b606081471015620003815760405163cd78605960e01b815230600482015260240162000335565b600080856001600160a01b031684866040516200039f91906200095b565b60006040518083038185875af1925050503d8060008114620003de576040519150601f19603f3d011682016040523d82523d6000602084013e620003e3565b606091505b509092509050620003f686838362000400565b9695505050505050565b6060826200041957620004138262000464565b62000353565b81511580156200043157506001600160a01b0384163b155b156200045c57604051639996b31560e01b81526001600160a01b038516600482015260240162000335565b508062000353565b805115620004755780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60405161020081016001600160401b0381118282101715620004ca57620004ca6200048e565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004fb57620004fb6200048e565b604052919050565b60005b838110156200052057818101518382015260200162000506565b50506000910152565b80516001600160a01b03811681146200054157600080fd5b919050565b6000608082840312156200055957600080fd5b604051608081016001600160401b03811182821017156200057e576200057e6200048e565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006102608284031215620005c357600080fd5b620005cd620004a4565b9050620005da8262000529565b8152620005ea6020830162000529565b6020820152620005fd6040830162000529565b6040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101606200066881840162000529565b908201526101806200067c83820162000529565b908201526101a06200069083820162000529565b908201526101c0620006a483820162000529565b908201526101e0620006b98484830162000546565b9082015292915050565b60008060008060008060008060006103608a8c031215620006e357600080fd5b89516001600160401b0380821115620006fb57600080fd5b818c0191508c601f8301126200071057600080fd5b8151818111156200072557620007256200048e565b6200073a601f8201601f1916602001620004d0565b91508082528d60208285010111156200075257600080fd5b6200076581602084016020860162000503565b5099506200077990508b60208c01620005af565b97506200078a6102808b0162000529565b96506200079b6102a08b0162000529565b9550620007ac6102c08b0162000529565b9450620007bd6102e08b0162000529565b9350620007ce6103008b0162000529565b9250620007df6103208b0162000529565b9150620007f06103408b0162000529565b90509295985092959850929598565b600181811c908216806200081457607f821691505b6020821081036200083557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033e576000816000526020600020601f850160051c81016020861015620008665750805b601f850160051c820191505b81811015620008875782815560010162000872565b505050505050565b81516001600160401b03811115620008ab57620008ab6200048e565b620008c381620008bc8454620007ff565b846200083b565b602080601f831160018114620008fb5760008415620008e25750858301515b600019600386901b1c1916600185901b17855562000887565b600085815260208120601f198616915b828110156200092c578886015182559484019460019091019084016200090b565b50858210156200094b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200096f81846020870162000503565b9190910192915050565b6000602082840312156200098c57600080fd5b815180151581146200035357600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e051610300516103205161114262000ad6600039600061075201526000818161060e0152818161067a01526107ee0152600081816105860152818161081e015261087c01526000818161053f0152610a110152600081816105da01526107100152600081816101d90152818161039b0152818161064a015281816106ac015281816106de015281816107bf01528181610851015281816108ad015281816109e50152610a440152600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506111426000f3fe6080604052600436106101c25760003560e01c806377d05ff4116100f7578063cbc1343411610095578063e44808bc11610064578063e44808bc146105a8578063eac3e799146105c8578063f3f70707146105fc578063f698da2514610630576101c2565b8063cbc134341461030f578063d899e11214610574578063dbbe807014610561578063ded06231146103d5576101c2565b8063a22cb465116100d1578063a22cb465146104ba578063a6e8a8591461052d578063ab033ea9146102d2578063cba2e58d14610561576101c2565b806377d05ff4146104da5780639032c726146104ed5780639cd241af1461050d576101c2565b806330adf81f11610164578063414f826d1161013e578063414f826d1461046c5780634c2ac1d91461048c5780634ed2d6ac1461049f5780637180c8ca146104ba576101c2565b806330adf81f146104035780633d18b912146104375780633e691db91461044c576101c2565b806317fad7fc116101a057806317fad7fc146103495780631c0f12b61461036957806321b57d531461038957806329b23fc1146103d5576101c2565b806301681a62146102d257806302329a29146102f4578063074a6de91461030f575b3480156101ce57600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610211929190610b1a565b600060405180830381855af49150503d806000811461024c576040519150601f19603f3d011682016040523d82523d6000602084013e610251565b606091505b5091509150811561027557604051638bb0a34b60e01b815260040160405180910390fd5b600061028082610b2a565b90506001600160e01b03198116636e64089360e11b146102a257815160208301fd5b8151600319810160048401908152926102c391810160200190602401610b9b565b80519650602001945050505050f35b3480156102de57600080fd5b506102f26102ed366004610c60565b610645565b005b34801561030057600080fd5b506102f26102ed366004610c99565b34801561031b57600080fd5b5061032f61032a366004610cc6565b610672565b604080519283526020830191909152015b60405180910390f35b34801561035557600080fd5b506102f2610364366004610d62565b6106a7565b34801561037557600080fd5b506102f2610384366004610df7565b6106d9565b34801561039557600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610340565b3480156103e157600080fd5b506103f56103f0366004610e3f565b610709565b604051908152602001610340565b34801561040f57600080fd5b506103f57f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561044357600080fd5b506102f261073d565b34801561045857600080fd5b506103f5610467366004610e99565b6107b8565b34801561047857600080fd5b506102f2610487366004610ed6565b6107e9565b6103f561049a366004610ef8565b610817565b3480156104ab57600080fd5b506102f2610384366004610f5c565b3480156104c657600080fd5b506102f26104d5366004610fa6565b61084c565b6103f56104e8366004610cc6565b610875565b3480156104f957600080fd5b506102f2610508366004610fdb565b6108a8565b34801561051957600080fd5b506102f2610528366004611059565b6109e0565b34801561053957600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b61032f61056f366004610e3f565b610a09565b34801561058057600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b457600080fd5b506102f26105c3366004611091565b610a3f565b3480156105d457600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060857600080fd5b506103bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561063c57600080fd5b506103f5610a70565b61066e7f0000000000000000000000000000000000000000000000000000000000000000610afe565b5050565b60008061069e7f0000000000000000000000000000000000000000000000000000000000000000610afe565b50935093915050565b6106d07f0000000000000000000000000000000000000000000000000000000000000000610afe565b50505050505050565b6107027f0000000000000000000000000000000000000000000000000000000000000000610afe565b5050505050565b60006107347f0000000000000000000000000000000000000000000000000000000000000000610afe565b50949350505050565b604051630c00007b60e41b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c00007b090602401600060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b50505050565b60006107e37f0000000000000000000000000000000000000000000000000000000000000000610afe565b50919050565b6108127f0000000000000000000000000000000000000000000000000000000000000000610afe565b505050565b60006108427f0000000000000000000000000000000000000000000000000000000000000000610afe565b5095945050505050565b6108127f0000000000000000000000000000000000000000000000000000000000000000610afe565b60006108a07f0000000000000000000000000000000000000000000000000000000000000000610afe565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108dd610a70565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b1790525161098691906110f0565b600060405180830381855af49150503d80600081146109c1576040519150601f19603f3d011682016040523d82523d6000602084013e6109c6565b606091505b5091509150816109d857805160208201fd5b805160208201f35b6107b27f0000000000000000000000000000000000000000000000000000000000000000610afe565b600080610a357f0000000000000000000000000000000000000000000000000000000000000000610afe565b5094509492505050565b610a687f0000000000000000000000000000000000000000000000000000000000000000610afe565b505050505050565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516109869291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610b595780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b92578181015183820152602001610b7a565b50506000910152565b600060208284031215610bad57600080fd5b815167ffffffffffffffff80821115610bc557600080fd5b818401915084601f830112610bd957600080fd5b815181811115610beb57610beb610b61565b604051601f8201601f19908116603f01168101908382118183101715610c1357610c13610b61565b81604052828152876020848701011115610c2c57600080fd5b610c3d836020830160208801610b77565b979650505050505050565b6001600160a01b0381168114610c5d57600080fd5b50565b600060208284031215610c7257600080fd5b8135610c7d81610c48565b9392505050565b80358015158114610c9457600080fd5b919050565b600060208284031215610cab57600080fd5b610c7d82610c84565b6000606082840312156107e357600080fd5b600080600060608486031215610cdb57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610d0057600080fd5b610d0c86828701610cb4565b9150509250925092565b60008083601f840112610d2857600080fd5b50813567ffffffffffffffff811115610d4057600080fd5b6020830191508360208260051b8501011115610d5b57600080fd5b9250929050565b60008060008060008060808789031215610d7b57600080fd5b8635610d8681610c48565b95506020870135610d9681610c48565b9450604087013567ffffffffffffffff80821115610db357600080fd5b610dbf8a838b01610d16565b90965094506060890135915080821115610dd857600080fd5b50610de589828a01610d16565b979a9699509497509295939492505050565b60008060008060808587031215610e0d57600080fd5b843593506020850135610e1f81610c48565b92506040850135610e2f81610c48565b9396929550929360600135925050565b60008060008060808587031215610e5557600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610e8157600080fd5b610e8d87828801610cb4565b91505092959194509250565b600060208284031215610eab57600080fd5b813567ffffffffffffffff811115610ec257600080fd5b610ece84828501610cb4565b949350505050565b60008060408385031215610ee957600080fd5b50508035926020909101359150565b600080600080600060a08688031215610f1057600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610f4357600080fd5b610f4f88828901610cb4565b9150509295509295909350565b60008060008060808587031215610f7257600080fd5b843593506020850135610f8481610c48565b9250604085013591506060850135610f9b81610c48565b939692955090935050565b60008060408385031215610fb957600080fd5b8235610fc481610c48565b9150610fd260208401610c84565b90509250929050565b600080600080600080600060e0888a031215610ff657600080fd5b873561100181610c48565b9650602088013561101181610c48565b955061101f60408901610c84565b945060608801359350608088013560ff8116811461103c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060006060848603121561106e57600080fd5b83359250602084013561108081610c48565b929592945050506040919091013590565b600080600080600060a086880312156110a957600080fd5b8535945060208601356110bb81610c48565b935060408601356110cb81610c48565b92506060860135915060808601356110e281610c48565b809150509295509295909350565b60008251611102818460208701610b77565b919091019291505056fea2646970667358221220d80b015eba01e30f344e47c52573b5103d9e5298f652a324e20b41ad1f8e36e864736f6c63430008160033a264697066735822122090ffaf1a612eaba44a04dbee270070e816e4122d743eb9484e50d166e856899c64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = AerodromeLpHyperdriveCoreDeployerContractFunctions(aerodromelphyperdrivecoredeployer_abi, self.w3, address)  # type: ignore

    functions: AerodromeLpHyperdriveCoreDeployerContractFunctions

    @classmethod
    def constructor(cls) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(cls, w3: Web3, account: LocalAccount | ChecksumAddress) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor()

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = AerodromeLpHyperdriveCoreDeployerContractFunctions(
            aerodromelphyperdrivecoredeployer_abi, w3, None
        )

        return contract
