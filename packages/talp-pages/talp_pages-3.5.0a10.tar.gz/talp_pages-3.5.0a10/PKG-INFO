Metadata-Version: 2.1
Name: talp-pages
Version: 3.5.0a10
Summary: Command line tools to generate performance reports using the TALP module of DLB
Home-page: https://pm.bsc.es/gitlab/dlb/dlb/
License: GPL-3.0-only
Keywords: HPC,Performance Analysis,Profiling,Continuous Performance Analysis
Author: Valentin Seitz
Author-email: valentin.seitz@bsc.es
Maintainer: Valentin Seitz
Maintainer-email: valentin.seitz@bsc.es
Requires-Python: >=3.9,<4.0
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: System :: Distributed Computing
Requires-Dist: jinja2 (>=3.1.4,<4.0.0)
Requires-Dist: kaleido (==0.2.1)
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: plotly
Requires-Dist: python-gitlab (>=4.4.0,<5.0.0)
Requires-Dist: tqdm
Project-URL: Repository, https://pm.bsc.es/gitlab/dlb/dlb/
Description-Content-Type: text/markdown

# Talp Pages

## Please note

**This an alpha release version**, so expect sudden API changes and non-documented features.

## Overview

TALP Pages is a collection of Python scripts to postprocess the `json` outputs of [DLB TALP](https://pm.bsc.es/ftp/dlb/doc/user-guide/intro.html#talp-tracking-application-live-performance) in your project.
We also provide you with exemplary pipelines, which makes it easy to integrate TALP into your CI/CD setup and run Continous Benchmarking without having to code up your own solution.

**We provide:**

- `talp`: A Command line tool to postprocess JSONS generated by TALP and download artifacts from previous GitLab Jobs
- A static page you can easily host using GitLab Pages that gives you both **insight** into application performance as well as tracking the performance **evolution** through the history of the code.
- Badges you can add into your repository to view the current parallel effiency of your application as reported by TALP

## Installation

TALP Pages is written in Python (3.9+). We rely on [poetry](https://python-poetry.org/) for packaging.
To use, simply install via:

```pip install talp-pages```

From there you should have the following command-line tools available:

- `talp`
- `talp_download_artifacts_gitlab`

## Documentation

Extensive documentation with examples can be found in our [DLB Readthedocs](https://dlb-docs.readthedocs.io)

## License

TALP Pages is available under the General Public License v3.0.

