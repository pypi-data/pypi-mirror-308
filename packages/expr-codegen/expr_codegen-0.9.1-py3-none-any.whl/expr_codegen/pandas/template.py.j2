# this code is auto generated by the expr_codegen
# https://github.com/wukan1986/expr_codegen
# 此段代码由 expr_codegen 自动生成，欢迎提交 issue 或 pull request
import re

import numpy as np # noqa
import pandas as pd # noqa
# import talib as ta

from loguru import logger # noqa


{{ syms1 }}

{{ syms2 }}

_DATE_ = '{{ date }}'
_ASSET_ = '{{ asset }}'
_NONE_ = None
_TRUE_ = True
_FALSE_ = False

{%-for row in extra_codes %}
{{ row-}}
{% endfor %}

def signed_power(x, y):
    return x.sign() * (x.abs() ** y)

def scale(x, scale=1):
    return x / x.abs().sum() * scale

def neutralize(x):
    return x - x.mean()

{% for key, value in funcs.items() %}
def {{ key }}(df: pd.DataFrame) -> pd.DataFrame:
{{ value }}
    return df
{% endfor %}

"""
{%-for row in exprs_dst %}
{{ row-}}
{% endfor %}
"""

"""
{%-for key, value in exprs_src.items() %}
{{ key }} = {{ value-}}
{% endfor %}
"""


def main(df: pd.DataFrame) -> pd.DataFrame:
    # logger.info("start...")
    {% for key, value in groupbys.items() %}
    {{ value-}}
    {% endfor %}

    # drop intermediate columns
    # df = df.drop(columns=list(filter(lambda x: re.search(r"^_x_\d+", x), df.columns)))
    df = df.drop(columns=list(filter(lambda x: x.startswith("_"), df.columns)))

    # logger.info('done')

    # save
    # df.to_parquet('output.parquet', compression='zstd')

    return df

if __name__ in ("__main__", "builtins"):
    # TODO: 数据加载或外部传入
    df_output = main(df_input)