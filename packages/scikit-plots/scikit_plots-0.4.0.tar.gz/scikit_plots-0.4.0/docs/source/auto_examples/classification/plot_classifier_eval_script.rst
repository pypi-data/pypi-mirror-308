
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/classification/plot_classifier_eval_script.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_classification_plot_classifier_eval_script.py>`
        to download the full example code. or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_classification_plot_classifier_eval_script.py:


plot_classifier_eval with examples
==================================

An example showing the :py:func:`~scikitplot.api.metrics.plot_classifier_eval` function
used by a scikit-learn classifier.

.. GENERATED FROM PYTHON SOURCE LINES 8-71

.. code-block:: Python


    # Authors: scikit-plots developers
    # License: MIT

    from sklearn.datasets import (
        make_classification,
        load_breast_cancer as data_2_classes,
        load_iris as data_3_classes,
        load_digits as data_10_classes,
    )
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.naive_bayes import GaussianNB
    from sklearn.svm import LinearSVC
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import cross_val_predict
    import numpy as np; np.random.seed(0)
    # importing pylab or pyplot
    # import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import scikit-plot
    import scikitplot as skplt
    # import scikitplot.api as skplt

    # Load the data
    X, y = data_3_classes(return_X_y=True, as_frame=True)
    X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.5, random_state=0)

    # Create an instance of the LogisticRegression
    model = LogisticRegression(max_iter=int(1e5), random_state=0).fit(X_train, y_train)

    # Perform predictions
    y_val_pred = model.predict(X_val)
    y_train_pred = model.predict(X_train)

    fig1 = skplt.metrics.plot_classifier_eval(
        y_val, y_val_pred, 
        labels=np.unique(y_train),
        figsize=(8, 2),
        title='Val',
    );
    # plt.show(block=True)
    fig2 = skplt.metrics.plot_classifier_eval(
        y_train, y_train_pred, 
        labels=np.unique(y_train),
        figsize=(8, 2),
        title='Train',
    );

    # Save the combined figure as an image file
    combined_fig = skplt.utils.combine_and_save_figures(
        (fig1, fig2),
        to_save=False
    );

    # Adjust layout to make sure everything fits
    plt.tight_layout()
    # Save the plot to a file
    # plt.savefig('plot_classifier_eval_script.png')
    # Display the plot
    plt.show(block=True)




.. image-sg:: /auto_examples/classification/images/sphx_glr_plot_classifier_eval_script_001.png
   :alt: plot classifier eval script
   :srcset: /auto_examples/classification/images/sphx_glr_plot_classifier_eval_script_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 72-79

.. tags::

   model-type: Classification
   model-workflow: Model Evaluation
   plot-type: matrix
   plot-type: specialty
   level: beginner
   purpose: showcase


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.071 seconds)


.. _sphx_glr_download_auto_examples_classification_plot_classifier_eval_script.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/scikit-plots/scikit-plots/0.4.X?urlpath=lab/tree/notebooks/auto_examples/classification/plot_classifier_eval_script.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/index.html?path=auto_examples/classification/plot_classifier_eval_script.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_classifier_eval_script.ipynb <plot_classifier_eval_script.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_classifier_eval_script.py <plot_classifier_eval_script.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_classifier_eval_script.zip <plot_classifier_eval_script.zip>`


.. include:: plot_classifier_eval_script.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
