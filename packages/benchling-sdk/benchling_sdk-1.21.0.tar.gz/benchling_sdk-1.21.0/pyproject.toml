[tool.poetry]
name = "benchling-sdk"
version = "1.21.0"   # NOTE: This version number is ignored and does not correspond to releases (see README)
description = "SDK for interacting with the Benchling Platform."
authors = ["Benchling Support <support@benchling.com>"]
packages = [{include = "benchling_sdk"}]
include = [
    "LICENSE", "benchling_sdk/py.typed", "docs"
]
license = "Apache-2.0"
readme = "README.md"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.poetry.dependencies]
python = "^3.9"
backoff = ">=1.10.0, <3"
dataclasses-json = "^0.5.2"
httpx = ">=0.23.0"
attrs = ">=20.1.0"
python-dateutil = "^2.8.0"
PyYAML = "^6.0"
# See issue: https://github.com/giampaolo/psutil/issues/2165
psutil = {version = "^5.9.4", python = "^3.11" }
jwcrypto = "^1.5.1"
benchling-api-client = "2.0.342"
# Minimum version due to vulnerability in 2022.9.24
certifi = ">=2022.12.7"
# Cryptography extras - see ExtrasPackage.CRYPTOGRAPHY
# Intentionally pin with >= because crytography is updated often for CVEs
# Accept that we could be affected by breaking changes, but allow customers more freedeom to pin
cryptography = { version = ">=42.0.0", optional = true }
# Python jose extras - see ExtrasPackage.PYTHON_JOSE
python-jose = { version = "^3.3.0", extras=["cryptography"], optional = true }
ordered-set = "^4.1.0"

[tool.poetry.extras]
cryptography = ["cryptography"]
python-jose = ["python-jose"]

[tool.poetry.group.dev.dependencies]
black = "^22.3.0"
isort = "^5.10.1"
pre-commit = "^2.6.0"
ipython = "^7.16.1"
mypy = "^1.13"
flake8 = "^3.8.3"
taskipy = "^1.6.0"
Jinja2 = "^3.1.2"
Markdown = "3.3.4" # Errors in Markdown 3.3.5 related to TypeError: entry_points() got an unexpected keyword argument 'group'
toml = "^0.10.2"
packaging = "^20.9"
coverage = "^5.5"
flake8-docstrings = "^1.6.0"
ddt = "1.4.4"
pytest = "^7.1.2"
beautifulsoup4 = "4.10.0"
sphinx = "^4.4.0"
types-PyYAML = "^6.0.8"
# Used by integration tests for retrieving API secrets in SSM
boto3 = "^1.24.67"
boto3-stubs = {extras = ["ssm"], version = "1.24.67"}
types-s3transfer = "0.6.0.post4"
botocore-stubs = "1.28.4"
# Used by flake8, version pinning is because v5 removes a deprecated call flake is currently using.
importlib-metadata = "^4.13.0"
sphinx-multiversion-pre-post-build = "^0.2.4"
time-machine = "^2.15.0"  # change to >=2.15.0 once we drop Python 3.8 support
python-jose = "^3.3.0"
gitpython = "^3.1.31"
pytest-rerunfailures = "^12.0"
respx = "^0.20.2"

[tool.taskipy.tasks]
unit = "pytest -s tests/unit/"
integration = "pytest -vv --reruns 3 --reruns-delay 1 -s tests/integration/"
# Separate than unit tests because they intentionally take awhile but still mock Benchling
retry_strategy_tests = "pytest -vv --reruns 3 --reruns-delay 1 -s tests/retries/"
models = "task generate_models && task sort_models && task format_models"
generate_models = "python3 -m regenerate_models"
format_models = "black benchling_sdk/models"
sort_models = "isort benchling_sdk/models"
regenerate_docs = "./scripts/regenerate_docs.sh"
regenerate_doc_sources = "sphinx-apidoc --module-first -H benchling-sdk -e -f -o sphinx/source . tests* regenerate* > stdout.log 2> stderr.log"
check_docs = "python3 -m regenerate_docs --check"

[tool.black]
line-length=110

[tool.isort]
combine_as_imports=true
default_section="THIRDPARTY"
force_alphabetical_sort_within_sections=true
force_sort_within_sections=true
include_trailing_comma=true
known_first_party=["benchling_sdk"]
known_third_party=["attr", "backoff", "benchling_api_client", "benchling_jira_api", "boto3", "bs4", "cryptography", "dataclasses_json", "httpx", "jinja2", "jose", "jwcrypto", "ordered_set", "pytest", "time_machine", "util", "yaml"]
line_length=110
multi_line_output=3
order_by_type=false
skip = ["tests/packaged/run_smoke_test.py"]

[build-system]
requires = ["poetry>=1.2"]
build-backend = "poetry.masonry.api"
