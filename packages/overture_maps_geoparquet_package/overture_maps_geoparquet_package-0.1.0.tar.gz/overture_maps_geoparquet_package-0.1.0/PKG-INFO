Metadata-Version: 2.1
Name: overture_maps_geoparquet_package
Version: 0.1.0
Summary: A Python package for downloading and processing Overture Maps geospatial data with configurable bounding box extraction and data management.
License: GPL-3.0-only
Author: ediakatos
Author-email: ediakatos@mapaction.org
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiobotocore (==2.15.1)
Requires-Dist: aiohappyeyeballs (==2.4.3)
Requires-Dist: aiohttp (==3.10.9)
Requires-Dist: aioitertools (==0.12.0)
Requires-Dist: aiosignal (==1.3.1)
Requires-Dist: async-timeout (==4.0.3)
Requires-Dist: attrs (==24.2.0)
Requires-Dist: botocore (==1.35.23)
Requires-Dist: certifi (==2024.8.30)
Requires-Dist: click (==8.1.7)
Requires-Dist: frozenlist (==1.4.1)
Requires-Dist: fsspec (==2024.9.0)
Requires-Dist: geopandas (==1.0.1)
Requires-Dist: idna (==3.10)
Requires-Dist: jmespath (==1.0.1)
Requires-Dist: multidict (==6.1.0)
Requires-Dist: numpy (==2.1.2)
Requires-Dist: overturemaps (==0.9.0)
Requires-Dist: packaging (==24.1)
Requires-Dist: pandas (==2.2.3)
Requires-Dist: propcache (==0.2.0)
Requires-Dist: pyarrow (==17.0.0)
Requires-Dist: pyogrio (==0.10.0)
Requires-Dist: pyproj (==3.7.0)
Requires-Dist: python-dateutil (==2.9.0.post0)
Requires-Dist: pytz (==2024.2)
Requires-Dist: s3fs (==2024.9.0)
Requires-Dist: shapely (==2.0.6)
Requires-Dist: six (==1.16.0)
Requires-Dist: typing-extensions (==4.12.2)
Requires-Dist: tzdata (==2024.2)
Requires-Dist: urllib3 (==2.2.3)
Requires-Dist: wrapt (==1.16.0)
Requires-Dist: yarl (==1.14.0)
Description-Content-Type: text/markdown


# Overture Maps GeoParquet Project

This project processes GeoJSON files to extract bounding boxes
and download corresponding data in GeoParquet format using the Overture Maps API.

## Project Structure

```text
├── countries
├── json
│   └── zwe.json
├── LICENSE
├── Makefile
├── poetry.lock
├── poetry.toml
├── pyproject.toml
├── README.md
├── requirements.txt
├── src
│   ├── downloader.py
│   ├── __init__.py
│   └── utils
│       ├── extract_bbox.py
│       └── __init__.py
└── tests
    ├── example
    │   ├── __init__.py
    │   └── test_example.py
    └── __init__.py
```

## Requirements

- Python 3.10+
- Poetry

## Installation

1. Clone the repository:

    ```sh
    git clone <repository-url>
    cd <repository-directory>
    ```

2. Install project dependencies:

    ```sh
    make .venv
    ```

3. Add pre-commit hooks:

    ```sh
    make hooks
    ```

## Usage

### Running the Application

To run the application:

```sh
make run
```

### Running Tests

To run unit tests:

```sh
make test
```

### Running Lint Tests

To run lint tests:

```sh
make lint
```

### Cleaning Up

To remove the virtual environment:

```sh
make clean
```

### Installing Additional Requirements

To install additional requirements from `requirements.txt`:

```sh
make install-requirements
```

## Available Make Commands

- `make help` - Print help
- `make .venv` - Install project dependencies
- `make hooks` - Add pre-commit hooks
- `make test` - Run unit tests
- `make lint` - Run lint tests
- `make clean` - Remove the virtual environment
- `make install-requirements` - Install additional requirements from `requirements.txt`
- `make run` - Run the application

## License

