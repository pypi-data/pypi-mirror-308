[project.scripts]
camel2karam = "camel2karam.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "camel2karam"
dynamic = ["version"]
description = ""
readme = "README.md"
readme-content-type = "text/markdown"
requires-python = ">=3.10"
license = "AGPL-3.0-or-later"
license-file = "LICENSE.txt"
keywords = [
    "convert",
]
authors = [
    { name = "Marceau-h", email = "pypi@marceau-h.fr" },
    # TODO: Ask for others if they want to be listed
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent", 
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
]
dependencies = [
    "polars",
    "tqdm",
    "camel_tools",
#    "BeautifulSoup4",
#    "lxml"
]

[project.urls]
Homepage = "https://github.com/CERES-Sorbonne/C2K"
Documentation = "https://github.com/CERES-Sorbonne/C2K#readme"
Issues = "https://github.com/CERES-Sorbonne/C2K/issues"
Source = "https://github.com/CERES-Sorbonne/C2K"

[tool.hatch.version]
path = "camel2karam/__about__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/camel2karam",
]

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[[tool.hatch.envs.all.matrix]]
target-version = ["py310", "py311", "py312", "py313"]

[tool.ruff]
target-version = ["py310", "py311", "py312", "py313"]
line-length = 120
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.isort]
known-first-party = ["camel2karam"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["camel2karam", "tests"]
branch = true
parallel = true
omit = [
    "camel2karam/__about__.py",
]

[tool.coverage.paths]
camel2karam = ["camel2karam"]


[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
