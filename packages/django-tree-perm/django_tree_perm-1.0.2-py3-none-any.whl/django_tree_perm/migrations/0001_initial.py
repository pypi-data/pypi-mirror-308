# Generated by Django 4.2.16 on 2024-10-23 14:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True, validators=[django.core.validators.RegexValidator('^[a-z]([a-z0-9_-]){0,62}[a-z0-9]$', message='由小写字母、数字、中横线、下划线组成，字母开头、字母或数据结尾，长度范围为2~64')], verbose_name='唯一标识')),
                ('alias', models.CharField(blank=True, default='', max_length=64, verbose_name='显示名称')),
                ('description', models.CharField(blank=True, default='', max_length=1024, verbose_name='描述')),
                ('can_manage', models.BooleanField(default=False, verbose_name='允许管理结点')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '角色',
            },
        ),
        migrations.CreateModel(
            name='TreeNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, validators=[django.core.validators.RegexValidator('^[a-z]([a-z0-9_-]){0,62}[a-z0-9]$', message='由小写字母、数字、中横线、下划线组成，字母开头、字母或数据结尾，长度范围为2~64')], verbose_name='标识')),
                ('alias', models.CharField(blank=True, default='', max_length=64, verbose_name='别名')),
                ('description', models.CharField(blank=True, default='', max_length=1024, verbose_name='描述')),
                ('is_key', models.BooleanField(default=False, verbose_name='作为Key')),
                ('disabled', models.BooleanField(db_index=True, default=False, verbose_name='是否禁用')),
                ('path', models.CharField(blank=True, db_index=True, default='', max_length=191, verbose_name='结点路径')),
                ('depth', models.SmallIntegerField(default=1, verbose_name='深度')),
                ('node_hash', models.CharField(db_index=True, error_messages={'unique': '结点已存在，请更换标识'}, max_length=32, unique=True, verbose_name='结点哈希值')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='django_tree_perm.treenode', verbose_name='父类结点')),
            ],
            options={
                'verbose_name': '树结点',
                'ordering': ('path',),
            },
        ),
        migrations.CreateModel(
            name='NodeRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='noderole_set', to='django_tree_perm.treenode')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='noderole_set', to='django_tree_perm.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='noderole_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '结点角色关系',
            },
        ),
        migrations.AddIndex(
            model_name='treenode',
            index=models.Index(fields=['is_key', 'disabled', 'name'], name='django_tree_is_key_c5ed86_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='noderole',
            unique_together={('node', 'role', 'user')},
        ),
    ]
