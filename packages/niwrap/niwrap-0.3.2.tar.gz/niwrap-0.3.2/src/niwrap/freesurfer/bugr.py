# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

BUGR_METADATA = Metadata(
    id="5042932b382661a1522f88122883df464b6d66c6.boutiques",
    name="bugr",
    package="freesurfer",
    container_image_tag="freesurfer/freesurfer:7.4.1",
)


class BugrOutputs(typing.NamedTuple):
    """
    Output object returned when calling `bugr(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def bugr(
    subject_name: str,
    command_line: str,
    error_message: str,
    log_file: InputPathType | None = None,
    runner: Runner | None = None,
) -> BugrOutputs:
    """
    Utility for generating and reporting FreeSurfer bugs.
    
    Author: FreeSurfer Developers
    
    URL: https://github.com/freesurfer/freesurfer
    
    Args:
        subject_name: Subject name to include in the bug report.
        command_line: The entire command-line executed.
        error_message: The error message generated.
        log_file: Log file path of the subject's recon-all process.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `BugrOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(BUGR_METADATA)
    cargs = []
    cargs.append("bugr")
    cargs.append("-subject")
    cargs.append(subject_name)
    cargs.append("-command")
    cargs.append(command_line)
    cargs.append("-error")
    cargs.append(error_message)
    cargs.append("-log")
    if log_file is not None:
        cargs.append(execution.input_file(log_file))
    ret = BugrOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "BUGR_METADATA",
    "BugrOutputs",
    "bugr",
]
