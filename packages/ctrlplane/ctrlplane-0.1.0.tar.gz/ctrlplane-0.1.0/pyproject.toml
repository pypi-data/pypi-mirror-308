[build-system]
requires = ["hatchling", "typing_extensions"]
build-backend = "hatchling.build"

[project]
name = "ctrlplane"
dynamic = ["version"]
description = "A client library for accessing Ctrlplane API"
authors = [{ name = "Ctrlplane", email = "support@ctrlplane.dev" }]
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "httpx>=0.20.0,<0.28.0",
    "attrs>=21.3.0",
    "python-dateutil>=2.8.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Go",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
"Source" = "https://github.com/ctrlplanedev/python"
"Bug Reports" = "https://github.com/ctrlplanedev/ctrlplane/issues"
"Documentation" = "https://docs.ctrlplane.dev/"

[tool.poetry]
name = "ctrlplane-api-client"
version = "1.0.0"
description = "A client library for accessing Ctrlplane API"
authors = []
readme = "README.md"
packages = [
    {include = "ctrlplane_api_client"},
]
include = ["CHANGELOG.md", "ctrlplane_api_client/py.typed"]

[tool.hatch.build.targets.sdist]
include = [
    "ctrlplane",
]
exclude = [".gitignore"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["F", "E", "W", "B", "I", "N", "D", "C90", "UP"]
ignore = [
    # pydocstyle rules: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D100",  # Allow missing docstrings in modules.
    "D101",  # Allow missing docstrings in classes.
    "D104",  # Allow missing docstrings in packages.
    "D105",  # Allow missing docstrings in magic (dunder) methods, e.g. __str__().
    "D106",  # Allow missing docstrings in nested classes.
    "D107",  # Allow missing docstrings in __init__ methods.
]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.hatch.version]
path = "ctrlplane/__init__.py"
