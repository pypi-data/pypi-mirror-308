name: Run Tests

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "native/**"
      - ".github/workflows/build_tests.yml"
      - "pyproject.toml"
  pull_request:
    branches:
      - main
    paths:
      - "src/**"
      - "native/**"
      - ".github/workflows/build_tests.yml"
      - "pyproject.toml"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python v${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Prepare Linux
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          sudo apt install ffmpeg

      - name: Prepare MacOS
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          brew install ffmpeg@6
          echo "/opt/homebrew/opt/ffmpeg@6/bin" >> $GITHUB_PATH


      - name: Prepare Windows
        if: ${{ matrix.platform == 'windows-latest' }}
        shell: bash
        run: |
          choco install ninja ffmpeg
          echo "CMAKE_GENERATOR=Ninja" >> "$GITHUB_ENV"

      - name: Install dependencies
        shell: bash
        run : |
          pip install -v '.[dev]' -C'build-dir=build' -C'cmake.build-type=Profile' -C'build.verbose=true'

      - name: Lint Python files
        shell: bash
        run: |
          ruff check --output-format=github .
        continue-on-error: true

      - name: Run tests
        shell: bash
        run: |
          pytest --cov=pymusly