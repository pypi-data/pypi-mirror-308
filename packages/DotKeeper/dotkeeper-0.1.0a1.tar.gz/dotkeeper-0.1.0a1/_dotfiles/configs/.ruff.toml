force-exclude     = true
indent-width      = 4
line-length       = 100
respect-gitignore = true
target-version    = "py312"
unsafe-fixes      = true

[format]
  docstring-code-format      = true
  docstring-code-line-length = "dynamic"
  indent-style               = "space"
  line-ending                = "lf"
  quote-style                = "single"
  skip-magic-trailing-comma  = false

[lint]
  fixable   = ["ALL"]
  unfixable = []

  select = [
    "A",     # flake8-builtins
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle - error
    "F",     # pyflakes
    "FA",    # flake8-future-annotations
    "FBT",   # flake8-boolean-trap
    "FLY",   # flynt
    "FURB",  # refurb
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "LOG",   # flake8-logging
    "N",     # pep8-naming
    "NPY",   # numpy-specific rules
    "PD",    # pandas-vet
    "PERF",  # perflint
    "PIE",   # flake8-pie
    "PLC",   # pylint - convention
    "PLE",   # pylint - error
    "PLR",   # pylint - refactor
    "PT",    # flake8-pytest-style
    "PTH",   # flake8-use-pathlib
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "RSE",   # flake8-raise
    "RUF",   # ruff-specific rules
    "S",     # flake8-bandit
    "SIM",   # flake8-simplify
    "SLOT",  # flake8-slots
    "T10",   # flake8-debugger
    "TCH",   # flake8-type-checking
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
    "W",     # warning
    "YTT",   # flake8-2020
  ]

  ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "ANN401",  # any-type
    "N817",    # camelcase-imported-as-acronym
    "N818",    # error-suffix-on-exception-name
    "PLR2004", # magic-value-comparison
    "S108",    # hardcoded-temp-file
    "S602",    # subprocess-popen-with-shell-equals-true
    "S603",    # subprocess-without-shell-equals-true
    "S604",    # call-with-shell-equals-true
    "S605",    # start-process-with-a-shell
    "S606",    # start-process-with-no-shell
    "S607",    # start-process-with-partial-path
    "S701",    # jinja2-autoescape-false
  ]

  [lint.isort]
    known-first-party = ["app", "core", "db", "lib", "models"]

  [lint.per-file-ignores]
    "__init__.py"      = ["D103", "D104", "F401"]
    "**/*test*.py"     = ["D103", "D104", "Q000", "S101"]
    "**/cfg.py"        = ["ARG003"]
    "**/codemod*/*.py" = ["ARG002", "N802"]
    "**/compat*.py"    = ["UP"]
    "**/config.py"     = ["ARG003"]
    "**/types/*.py"    = ["UP040"]
    "**/typing/*.py"   = ["UP040"]

  [lint.flake8-unused-arguments]
    ignore-variadic-names = true

  [lint.flake8-annotations]
    allow-star-arg-any = true

  [lint.flake8-quotes]
    inline-quotes = "single"

  [lint.pydocstyle]
    convention = "numpy"

  [lint.pylint]
    allow-magic-value-types = ["int"]
    max-args                = 10
    max-bool-expr           = 10
    max-branches            = 20
    max-locals              = 15
    max-nested-blocks       = 10
    max-positional-args     = 10
    max-returns             = 10
    max-statements          = 75
