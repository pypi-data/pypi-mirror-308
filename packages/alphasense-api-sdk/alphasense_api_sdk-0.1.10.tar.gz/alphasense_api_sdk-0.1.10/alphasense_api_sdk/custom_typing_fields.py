# Generated by alphasense-api-sdk 
# Copyright by AlphaSense

from .base_operation import GraphQLField


class AISummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISummaryGraphQLField":
        self._alias = alias
        return self


class AISummaryItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISummaryItemGraphQLField":
        self._alias = alias
        return self


class AISummaryModuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISummaryModuleGraphQLField":
        self._alias = alias
        return self


class AISummaryReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISummaryReferenceGraphQLField":
        self._alias = alias
        return self


class AISummaryTopicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISummaryTopicGraphQLField":
        self._alias = alias
        return self


class AISummaryTopicGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AISummaryTopicGroupGraphQLField":
        self._alias = alias
        return self


class BrokerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerGraphQLField":
        self._alias = alias
        return self


class BrokerResearchDocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerResearchDocumentTypeGraphQLField":
        self._alias = alias
        return self


class BrokerResearchEntitlementRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerResearchEntitlementRequestGraphQLField":
        self._alias = alias
        return self


class BrokerResearchEntitlementSalesContactGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerResearchEntitlementSalesContactGraphQLField":
        self._alias = alias
        return self


class BrokerResearchEntitlementUpdateResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerResearchEntitlementUpdateResultGraphQLField":
        self._alias = alias
        return self


class BrokerResearchSourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerResearchSourceGraphQLField":
        self._alias = alias
        return self


class BrokerResearchUserEntitlementsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BrokerResearchUserEntitlementsGraphQLField":
        self._alias = alias
        return self


class CommonUserDocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommonUserDocumentTypeGraphQLField":
        self._alias = alias
        return self


class CompanyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyGraphQLField":
        self._alias = alias
        return self


class CompanyTopicsDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyTopicsDataGraphQLField":
        self._alias = alias
        return self


class CompanyTopicV2GraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyTopicV2GraphQLField":
        self._alias = alias
        return self


class CountryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CountryGraphQLField":
        self._alias = alias
        return self


class DocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentGraphQLField":
        self._alias = alias
        return self


class DocumentCountGroupingPropertyUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "DocumentCountGroupingPropertyUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "DocumentCountGroupingPropertyUnion":
        self._alias = alias
        return self


class DocumentCountResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentCountResponseGraphQLField":
        self._alias = alias
        return self


class DocumentExportResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentExportResultGraphQLField":
        self._alias = alias
        return self


class DocumentExportTaskGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentExportTaskGraphQLField":
        self._alias = alias
        return self


class DocumentImageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentImageGraphQLField":
        self._alias = alias
        return self


class DocumentKpiGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentKpiGraphQLField":
        self._alias = alias
        return self


class DocumentKpiClusterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentKpiClusterGraphQLField":
        self._alias = alias
        return self


class DocumentKpiRelationAttributeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentKpiRelationAttributeGraphQLField":
        self._alias = alias
        return self


class DocumentMutationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentMutationGraphQLField":
        self._alias = alias
        return self


class DocumentTopicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentTopicGraphQLField":
        self._alias = alias
        return self


class DocumentTopicClusterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentTopicClusterGraphQLField":
        self._alias = alias
        return self


class DocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentTypeGraphQLField":
        self._alias = alias
        return self


class DocumentTypeAndDateGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentTypeAndDateGroupGraphQLField":
        self._alias = alias
        return self


class ExpertCallContentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExpertCallContentGraphQLField":
        self._alias = alias
        return self


class ExpertCallsDocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExpertCallsDocumentTypeGraphQLField":
        self._alias = alias
        return self


class GroupedCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GroupedCountGraphQLField":
        self._alias = alias
        return self


class HitOffsetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HitOffsetGraphQLField":
        self._alias = alias
        return self


class IndustryBranchGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndustryBranchGraphQLField":
        self._alias = alias
        return self


class IndustrySectorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndustrySectorGraphQLField":
        self._alias = alias
        return self


class KeywordGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KeywordGraphQLField":
        self._alias = alias
        return self


class KeywordResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "KeywordResultGraphQLField":
        self._alias = alias
        return self


class NoteDocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NoteDocumentTypeGraphQLField":
        self._alias = alias
        return self


class PageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PageInfoGraphQLField":
        self._alias = alias
        return self


class PublicUserInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PublicUserInfoGraphQLField":
        self._alias = alias
        return self


class QAndAAISummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QAndAAISummaryGraphQLField":
        self._alias = alias
        return self


class QAndASummaryItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "QAndASummaryItemGraphQLField":
        self._alias = alias
        return self


class SavedSearchGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedSearchGraphQLField":
        self._alias = alias
        return self


class SavedSearchResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedSearchResponseGraphQLField":
        self._alias = alias
        return self


class SearchDocumentImageResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchDocumentImageResponseGraphQLField":
        self._alias = alias
        return self


class SearchResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchResponseGraphQLField":
        self._alias = alias
        return self


class SentimentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SentimentGraphQLField":
        self._alias = alias
        return self


class SentimentCountsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SentimentCountsGraphQLField":
        self._alias = alias
        return self


class SentimentCountV2GraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SentimentCountV2GraphQLField":
        self._alias = alias
        return self


class SourceInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SourceInfoGraphQLField":
        self._alias = alias
        return self


class StatementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatementGraphQLField":
        self._alias = alias
        return self


class SubIndustryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubIndustryGraphQLField":
        self._alias = alias
        return self


class TopicSentimentTrendGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TopicSentimentTrendGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserDocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserDocumentTypeGraphQLField":
        self._alias = alias
        return self


class UserOrganisationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserOrganisationGraphQLField":
        self._alias = alias
        return self


class WatchlistGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WatchlistGraphQLField":
        self._alias = alias
        return self


class WatchlistEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WatchlistEdgeGraphQLField":
        self._alias = alias
        return self


class WatchlistMutationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WatchlistMutationGraphQLField":
        self._alias = alias
        return self


class WatchlistMutationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WatchlistMutationResultGraphQLField":
        self._alias = alias
        return self


class WatchlistsConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WatchlistsConnectionGraphQLField":
        self._alias = alias
        return self


class WebClipperDocumentTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebClipperDocumentTypeGraphQLField":
        self._alias = alias
        return self
