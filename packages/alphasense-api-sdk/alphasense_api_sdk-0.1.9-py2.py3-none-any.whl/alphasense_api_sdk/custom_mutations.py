# Generated by alphasense-api-sdk 
# Copyright by AlphaSense

from typing import Any, Dict, Optional

from .custom_fields import (
    BrokerResearchEntitlementUpdateResultFields,
    DocumentMutationFields,
    WatchlistMutationFields,
)
from .input_types import (
    BrokerResearchEntitlementUpdateInput,
    BrokerResearchUserEntitlementUpdateInput,
)


class Mutation:
    @classmethod
    def update_broker_research_entitlement_requests(
        cls, entitlements_update: BrokerResearchEntitlementUpdateInput
    ) -> BrokerResearchEntitlementUpdateResultFields:
        arguments: Dict[str, Dict[str, Any]] = {
            "entitlementsUpdate": {
                "type": "BrokerResearchEntitlementUpdateInput!",
                "value": entitlements_update,
            }
        }
        cleared_arguments = {
            key: value for key, value in arguments.items() if value["value"] is not None
        }
        return BrokerResearchEntitlementUpdateResultFields(
            field_name="updateBrokerResearchEntitlementRequests",
            arguments=cleared_arguments,
        )

    @classmethod
    def update_broker_research_user_entitlements(
        cls, entitlements_update: BrokerResearchUserEntitlementUpdateInput
    ) -> BrokerResearchEntitlementUpdateResultFields:
        arguments: Dict[str, Dict[str, Any]] = {
            "entitlementsUpdate": {
                "type": "BrokerResearchUserEntitlementUpdateInput!",
                "value": entitlements_update,
            }
        }
        cleared_arguments = {
            key: value for key, value in arguments.items() if value["value"] is not None
        }
        return BrokerResearchEntitlementUpdateResultFields(
            field_name="updateBrokerResearchUserEntitlements",
            arguments=cleared_arguments,
        )

    @classmethod
    def document(cls) -> DocumentMutationFields:
        return DocumentMutationFields(field_name="document")

    @classmethod
    def watchlist(cls) -> WatchlistMutationFields:
        return WatchlistMutationFields(field_name="watchlist")
