"use strict";(self.webpackChunka_jupyterlite_session=self.webpackChunka_jupyterlite_session||[]).push([[509],{509:(e,t,i)=>{i.r(t),i.d(t,{default:()=>o});var a=i(537),s=i(1),n=i(347);const o={id:"a-jupyterlite-session:plugin",autoStart:!0,requires:[s.IContents],activate:(e,t)=>{const i=".sessions",s="requirements.txt";t.ready.then((async()=>{console.log("JupyterLite server extension a-jupyterlite-session is activated!");const o=await t.storage,r=new Date;await o.getItem(i)||await o.setItem(i,{name:i,path:i,last_modified:r.toISOString(),created:r.toISOString(),format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"});const c=r.toLocaleDateString("en-us",{year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"}).replace(/\//g,"-").replace(/:/g,"-").replace(", ","-"),l=(0,n.v4)().slice(0,8),p=a.PathExt.join(i,`${c}-${l}`);await o.setItem(p,{name:a.PathExt.basename(p),path:p,last_modified:r.toISOString(),created:r.toISOString(),format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"}),e.router.get("/api/a-session",(async e=>new Response(p))),await t.copy(s,p).catch((e=>console.warn(`Failed to copy the ${s} file to the new session: ${e}`)))}))}}}}]);