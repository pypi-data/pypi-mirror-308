[tool.poetry]
name = "aucurriculum"
version = "0.1.1"
description = "A Curriculum Learning Toolkit for Deep Learning Tasks built on top of autrainer."
authors = [
    "Simon Rampp <simon.rampp@tum.de>",
    "Manuel Milling <manuel.milling@tum.de>",
    "Andreas Triantafyllopoulos <andreas.triantafyllopoulos@tum.de>",
    "Bj√∂rn W. Schuller <schuller@tum.de>",
]
license = "MIT"
readme = "README.md"
keywords = [
    "curriculum learning",
    "autrainer",
    "computer audition",
    "deep learning",
    "artificial intelligence",
    "pytorch",
    "hydra-core",
    "command-line",
    "yaml",
]
include = [
    { path = "aucurriculum-configurations", format = [
        "sdist",
        "wheel",
    ] },
]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
repository = "https://github.com/autrainer/aucurriculum"
documentation = "https://autrainer.github.io/aucurriculum/"

[tool.poetry.dependencies]
python = "^3.9"
autrainer = "0.4.0"

[tool.poetry.group.dev.dependencies]
codespell = "^2.2.6"
pre-commit = "^3.7.0"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
ruff = "^0.4.2"

[tool.poetry.group.docs.dependencies]
catppuccin = { extras = ["pygments"], version = "^2.3.0" }
pydata-sphinx-theme = "^0.15.3"
sphinx = "^7.3.7"
sphinx-argparse = "^0.4.0"
sphinx-autodoc-typehints = "^2.2.0"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.6.0"
sphinxcontrib-jquery = "^4.1"
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
aucurriculum = "aucurriculum.core.scripts.cli:main"

[tool.ruff]
line-length = 79
target-version = "py39"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "E9", "F63", "F7", "F82", "Q0", "N801", "I"]
ignore = ["E741"]

[tool.ruff.lint.isort]
force-sort-within-sections = true
lines-after-imports = 2

[tool.codespell]
skip = "*.ipynb,poetry.lock"

[tool.pytest.ini_options]
addopts = "--cov=aucurriculum --cov-report=term-missing"
testpaths = "tests"

[tool.coverage.report]
omit = ["config.py", "config-3.py"]
