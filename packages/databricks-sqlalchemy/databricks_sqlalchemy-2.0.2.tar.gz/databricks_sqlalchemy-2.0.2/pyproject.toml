[tool.poetry]
name = "databricks-sqlalchemy"
version = "2.0.2"
description = "Databricks SQLAlchemy plugin for Python"
authors = ["Databricks <databricks-sql-connector-maintainers@databricks.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "databricks", from = "src" }]
include = ["CHANGELOG.md"]

[tool.poetry.dependencies]
python = "^3.8.0"
databricks_sql_connector = { version = "==4.0.0.b4"}
sqlalchemy = { version = ">=2.0.21" }

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
mypy = "^1.10.1"
pylint = ">=2.12.0"
black = "^22.3.0"
pytest-dotenv = "^0.5.2"

[tool.poetry.urls]
"Homepage" = "https://github.com/databricks/databricks-sqlalchemy"
"Bug Tracker" = "https://github.com/databricks/databricks-sqlalchemy/issues"

[tool.poetry.plugins."sqlalchemy.dialects"]
"databricks" = "databricks.sqlalchemy:DatabricksDialect"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
exclude = '/(\.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|\.svn|_build|buck-out|build|dist|thrift_api)/'
#
[tool.pytest.ini_options]
markers = {"reviewed" = "Test case has been reviewed by Databricks"}
minversion = "6.0"
log_cli = "false"
log_cli_level = "INFO"
testpaths = ["tests", "src/databricks/sqlalchemy/test_local"]
env_files = ["test.env"]
