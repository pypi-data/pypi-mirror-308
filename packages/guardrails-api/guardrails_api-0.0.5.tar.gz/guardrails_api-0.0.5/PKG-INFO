Metadata-Version: 2.1
Name: guardrails-api
Version: 0.0.5
Summary: Guardrails API
Author-email: Guardrails AI <contact@guardrailsai.com>
License: ## THE FOLLOWING LICENSE HAS BEEN ADOPTED FROM THE ELSSTIC LICENSE ##
        
        Acceptance
        By using the software, you agree to all of the terms and conditions below.
        
        Copyright License
        The licensor grants you a non-exclusive, royalty-free, worldwide, non-sublicensable, non-transferable license to use, copy, distribute, make available, and prepare derivative works of the software, in each case subject to the limitations and conditions below.
        
        Limitations
        You may not provide the software to third parties as a hosted or managed service, where the service provides users with access to any substantial set of the features or functionality of the software.
        
        You may not move, change, disable, or circumvent the license key functionality in the software, and you may not remove or obscure any functionality in the software that is protected by the license key.
        
        You may not alter, remove, or obscure any licensing, copyright, or other notices of the licensor in the software. Any use of the licensorâ€™s trademarks is subject to applicable law.
        
        Patents
        The licensor grants you a license, under any patent claims the licensor can license, or becomes able to license, to make, have made, use, sell, offer for sale, import and have imported the software, in each case subject to the limitations and conditions in this license. This license does not cover any patent claims that you cause to be infringed by modifications or additions to the software. If you or your company make any written claim that the software infringes or contributes to infringement of any patent, your patent license for the software granted under these terms ends immediately. If your company makes such a claim, your patent license ends immediately for work on behalf of your company.
        
        Notices
        You must ensure that anyone who gets a copy of any part of the software from you also gets a copy of these terms.
        
        If you modify the software, you must include in any modified copies of the software prominent notices stating that you have modified the software.
        
        No Other Rights
        These terms do not imply any licenses other than those expressly granted in these terms.
        
        Termination
        If you use the software in violation of these terms, such use is not licensed, and your licenses will automatically terminate. If the licensor provides you with a notice of your violation, and you cease all violation of this license no later than 30 days after you receive that notice, your licenses will be reinstated retroactively. However, if you violate these terms after such reinstatement, any additional violation of these terms will cause your licenses to terminate automatically and permanently.
        
        No Liability
        As far as the law allows, the software comes as is, without any warranty or condition, and the licensor will not be liable to you for any damages arising out of these terms or the use or nature of the software, under any kind of legal claim.
        
        Definitions
        The licensor is the entity offering these terms, and the software is the software the licensor makes available under these terms, including any portion of it.
        
        you refers to the individual or entity agreeing to these terms.
        
        your company is any legal entity, sole proprietorship, or other kind of organization that you work for, plus all organizations that have control over, are under the control of, or are under common control with that organization. control means ownership of substantially all the assets of an entity, or the power to direct its management and policies by vote, contract, or otherwise. Control can be direct or indirect.
        
        your licenses are all the licenses granted to you for the software under these terms.
        
        use means anything you do with the software requiring one of your licenses.
        
        trademark means trademarks, service marks, and similar rights.
Keywords: Guardrails,Guardrails AI,Guardrails API,Guardrails API
Requires-Python: >=3.8, <4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: guardrails-ai<0.6.0,>=0.5.6
Requires-Dist: flask<4,>=3.0.3
Requires-Dist: Flask-SQLAlchemy<4,>=3.1.1
Requires-Dist: Flask-Caching<3,>=2.3.0
Requires-Dist: Werkzeug<4,>=3.0.3
Requires-Dist: jsonschema<5,>=4.22.0
Requires-Dist: referencing<1,>=0.35.1
Requires-Dist: Flask-Cors<6,>=4.0.1
Requires-Dist: boto3<2,>=1.34.115
Requires-Dist: psycopg2-binary<3,>=2.9.9
Requires-Dist: litellm<2,>=1.39.3
Requires-Dist: typer<1,>=0.9.4
Requires-Dist: opentelemetry-api<2,>=1.0.0
Requires-Dist: opentelemetry-sdk<2,>=1.0.0
Requires-Dist: opentelemetry-exporter-otlp-proto-grpc<2,>=1.0.0
Requires-Dist: opentelemetry-exporter-otlp-proto-http<2,>=1.0.0
Requires-Dist: opentelemetry-instrumentation-flask<1,>=0.12b0
Requires-Dist: requests>=2.32.3
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: gunicorn<23,>=22.0.0; extra == "dev"

# guardrails-poc
Docker compose stub of Guardrails as a Service

## Setting Up
We strongly encourage you to use a virtual environment when developing in python.
To set one up for this project run the following:
```bash
python3 -m venv ./.venv
source ./.venv/bin/activate
```
Your terminal should now show that you are working from within the virtual environment.
Now you can install the dependencies:
```bash
make install
```

And start the dev server:
```bash
make start
```

Once the service has launched, you should be able to navigate to the Swagger documenation for the guardrails-api at http://localhost:8000


### Local Infrastructure
By default, the server will start with an in-memory store for Guards.  As of June 4th, 2024 this store does not support write operations via the API.  In order to utilize all CRUD operations you will need a postgres database running locally and you will need to provide the following environment variables (sane defaults included for demonstration purposes):

```sh
export PGPORT=5432
export PGDATABASE=postgres
export PGHOST=localhost
export PGUSER=${PGUSER:-postgres}
export PGPASSWORD=${PGPASSWORD:-changeme}
```

You can create this database however you wish, but we do have a docker-compose configuration to stand up the database as well as a local opentelemetry stack.
To use this make sure you have docker installed, then run:

`docker compose --profile db up --build`
to run just the database.

`docker compose --profile infra up --build`
to run the database and opentelemetry infrastructure

or
`docker compose --profile all up --build`
to run everything including the guardrails-api


The last option is useful when checking that everything will work as planned in a more productionized environment.  When developing, it's generally faster to just run the minimum infrastructure you need via docker and run the api on a bare process with the `make start` command.
