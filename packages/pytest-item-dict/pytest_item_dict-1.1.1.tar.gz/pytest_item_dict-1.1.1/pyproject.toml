#############################################
#	Dual License: BSD-3-Clause AND MPL-2.0	#
#	Copyright (c) 2024, Adam Nogowski		#
#############################################

[build-system]
requires = ["setuptools>=61.0.0", "wheel>=0.44.0", "setuptools_scm[toml]>=3.4"]
build-backend = "setuptools.build_meta"
[tool.setuptools_scm]
write_to = "src/pytest_item_dict/version.py"

[project]
dynamic = ["version"]
name = "pytest-item-dict"
description = "Get a hierarchical dict of session.items"
keywords = [
	"pytest",
	"items",
	"dict",
	"session.items",
	"session",
	"hierarchical",
	"hierarchy",
	"tree",
]
readme = { file = "README.rst", content-type = "text/x-rst" }
requires-python = ">=3.11"
authors = [{ name = "Adam Nogowski", email = "anogowski@live.com" }]
maintainers = [{ name = "Adam Nogowski", email = "anogowski@live.com" }]
license = { file = "LICENSE" }
classifiers = [
	"Framework :: Pytest",
	"Development Status :: 4 - Beta",
	"Intended Audience :: Developers",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: Implementation :: CPython",
	"Programming Language :: Python :: Implementation :: PyPy",
	"License :: OSI Approved :: BSD License",
	"License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
	"Topic :: Software Development :: Quality Assurance",
	"Topic :: Software Development :: Testing",
	"Topic :: Utilities",
]
dependencies = ["pytest>=8.3.0"]
[project.urls]
Repository = "https://github.com/anogowski/pytest-item-dict"
[project.entry-points.pytest11]
item-dict = "pytest_item_dict.plugin"


[tool.pytest.ini_options]
#Directories
# Cached Files
cache_dir = "./output/.pycache"
# Example Files
pytester_example_dir = "./suites"

# Test Directories
testpaths = ["test_dev"]        #root testing directories
junit_duration_report = "total"
junit_suite_name = "pytest"
junit_family = "xunit2"
junit_logging = "no"

# Non-Test Directories
norecursedirs = [
	".github",
	".venv",
	".vscode",
	"dist",
	"docs",
	"examples",
	"output",
	"src",
] #do not check these directories

# Reports
log_level = "INFO"
log_format = "%(asctime)s %(funcName)s(%(filename)s:%(lineno)s)\n[%(levelname)8s]\t%(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

# Terminal
log_cli = true
log_cli_level = "ERROR"
log_cli_format = "%(asctime)s %(funcName)s(%(filename)s:%(lineno)s)\n[%(levelname)8s]\n%(funcName)s\t%(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# File
log_file = "./output/logs/results_pytest.log"
log_file_level = "INFO"
log_file_format = "%(asctime)s %(funcName)s(%(filename)s:%(lineno)s)\n[%(levelname)8s]\n%(funcName)s\t%(message)s"
log_file_date_format = "%Y-%m-%d %H:%M:%S"


#Command Line Flags
# all cmd line flags for pytest: https://docs.pytest.org/en/8.0.x/reference/reference.html#command-line-flags
addopts = "--showlocals -s -v --tb=auto --junitxml=./output/reports/juint.xml"
markers = [
	"it: Integration Tests",
	"rt: Regression Tests",
	"vt: Verification Tests",
	"linux: Linux OS",
	"windows: Windows OS",
]

# pytest-item-dict
set_collect_dict_markers = true
set_test_dict_durations = true
set_test_hierarchy_dict_outcomes = true
set_test_hierarchy_dict_durations = true
