[tool.poetry]
name = "melon-translate"
version = "0.17.0"
description = "Melon-translate is a micro service for easing localisation and translation."
authors = []

packages = [
    { include = "translate", from="." },
]
exclude = ["client"]

[tool.poetry.dependencies]
python = "^3.8"
python-decouple = "^3.5"
Django = "4.2.13"
djangorestframework = "^3.13.1"
psycopg2-binary = "2.9.1"
django-model-utils = "^4.2.0"
polib = "^1.1.1"
django-auditlog = "^1.0.0"
django-admin-inline-paginator = "^0.3.0"
django-health-check = "^3.16.5"
requests = "^2.27.1"
python-dotenv = "^0.20.0"
redis = "^5.0.8"
django-baton = "^2.3.0"
django-redis = "^5.4.0"
sentry-sdk = "^1.39.0"
python-json-logger = "^2.0.7"
whitenoise = "^6.4.0"
gunicorn = "^20.1.0"
gevent = "^22.10.2"
redis-om = "^0.3.1"
aiohttp = "^3.8.4"
python-redis-lock = "^4.0.0"
auto-changelog = "^0.6.0"
drf-spectacular = "0.24.1"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
black = "^24.4.2"
pytest = "^6.2.5"
pytest-dotenv = "^0.5.2"
factory-boy = "^3.2.1"
pytest-flake8 = "^1.1.0"
pytest-cov = "^3.0.0"
pytest-isort = "^3.0.0"
pytest-black = "^0.3.12"
pytest-xdist = "^3.1.0"
pytest-forked = "^1.6.0"

[tool.black]
line-length = 120
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | docs/conf.py
)
'''

[tool.pydocstyle]
add_ignore = ["D105", "D107", "D202", "D401"]


[tool.isort]
profile = "black"


[tool.pytest.ini_options]
env_files = [".env.test"]
addopts = "--disable-warnings --isort --black -vvv"
doctest_optionflags = "ALLOW_UNICODE"
flake8-ignore = ["*.py", "E121", "E126", "E203", "E226", "E231", "W503", "W504", "docs/conf.py", "ALL"]
flake8-max-line-length = 120
testpaths = ["conftest.py", "translate"]
isort_ignore = "translate/core/local.py"
markers = [
    "integration: mark a test as a integration.",
    "serializer: mark a test as serializer test.",
    "jobs: mark a test as a job test.",
    "migration: mark a test as a migration test.",
    "shelled: mark a test as a shelled test.",
    "serial: mark a test that can not be run in parallel",
    "model: mark model tests",
    "view: mark view tests",
    "serializer: mark serializer tests",
    "filter: mark filter tests",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
env_files = ".env.test"
