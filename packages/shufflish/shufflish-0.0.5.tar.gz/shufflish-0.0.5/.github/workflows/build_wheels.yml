name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }} ${{ matrix.build_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, macos-14, windows-2019]
        arch: [x86_64, aarch64]
        build: [""]
        build_name: [""]
        exclude:
          - os: macos-12
            arch: aarch64
          - os: macos-14
            arch: x86_64
          - os: windows-2019
            arch: aarch64
          - os: ubuntu-latest
            arch: aarch64
        include:
          - os: ubuntu-latest
            arch: aarch64
            build: "pp*"
            build_name: "pypy"
          - os: ubuntu-latest
            arch: aarch64
            build: "cp*manylinux*"
            build_name: "manylinux"
          - os: ubuntu-latest
            arch: aarch64
            build: "cp*musllinux*"
            build_name: "musllinux"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3.2.0
        with:
          platforms: arm64
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.build_name }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build SDist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error
  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/shufflish
    permissions:
      contents: write
      id-token: write
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.11.0
      - name: Create Github Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: dist/*
          draft: false
          prerelease: false
