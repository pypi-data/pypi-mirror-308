name: CI - Main branch

on:
  push:
    branches:
      - main

jobs:
  test-and-coverage:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -e '.[tests]'

      - name: Run tests
        run: pytest --cov --cov-report=xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-publish:
    name: Build and publish package
    runs-on: ubuntu-latest
    needs: test-and-coverage

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -e '.[build]'  # Ensure build dependencies are installed

      - name: Set up Git user
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'

      - name: Checkout main branch
        run: |
          git fetch origin main
          git checkout FETCH_HEAD

      - name: Increment version and create tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          IFS='.' read -ra ADDR <<< "$latest_tag"
          new_version="${ADDR[0]}.$((${ADDR[1]}+1)).0"
          echo "New version: $new_version"
          git tag -a "$new_version" -m "Version $new_version"
          git push origin "$new_version"

      - name: Build and publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m build 
          twine upload dist/*
