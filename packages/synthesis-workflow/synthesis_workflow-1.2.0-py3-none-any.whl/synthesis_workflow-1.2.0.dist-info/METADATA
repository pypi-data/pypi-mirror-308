Metadata-Version: 2.1
Name: synthesis-workflow
Version: 1.2.0
Summary: Workflow used for synthesis and its validation.
Home-page: https://synthesis-workflow.readthedocs.io
Author: Blue Brain Project, EPFL
License: Apache License 2.0
Project-URL: Tracker, https://github.com/BlueBrain/synthesis-workflow/issues
Project-URL: Source, https://github.com/BlueBrain/synthesis-workflow
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
License-File: AUTHORS.md
Requires-Dist: bluepyparallel >=0.0.8
Requires-Dist: brainbuilder >=0.20.1
Requires-Dist: diameter-synthesis >=0.5.4
Requires-Dist: dictdiffer >=0.9
Requires-Dist: gitpython >=3.1.30
Requires-Dist: jinja2 >=3
Requires-Dist: joblib >=1.2
Requires-Dist: jsonpath-ng >=1.5.3
Requires-Dist: luigi >=3.2
Requires-Dist: luigi-tools >=0.2.1
Requires-Dist: matplotlib >=3.6.2
Requires-Dist: morph-tool <3,>=2.9.1
Requires-Dist: morphio <4,>=3.3.6
Requires-Dist: neuroc <1,>=0.3.0
Requires-Dist: neurocollage >=0.3.6
Requires-Dist: neurom <4,>=3.2.2
Requires-Dist: neurots <4,>=3.6
Requires-Dist: numpy >=1.26.4
Requires-Dist: pandas >=2.1
Requires-Dist: PyYAML >=6
Requires-Dist: region-grower <2,>=1.5.1
Requires-Dist: scipy >=1.13
Requires-Dist: seaborn >=0.12.2
Requires-Dist: tmd >=2.3
Requires-Dist: tqdm >=4.64.1
Requires-Dist: voxcell <4,>=3.1.5
Provides-Extra: docs
Requires-Dist: docutils <0.21 ; extra == 'docs'
Requires-Dist: graphviz ; extra == 'docs'
Requires-Dist: m2r2 ; extra == 'docs'
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinx-argparse ; extra == 'docs'
Requires-Dist: sphinx-autoapi ; extra == 'docs'
Requires-Dist: sphinx-bluebrain-theme ; extra == 'docs'
Provides-Extra: test
Requires-Dist: dir-content-diff >=1.9.1 ; extra == 'test'
Requires-Dist: graphviz >=0.14 ; extra == 'test'
Requires-Dist: pandas >=1.5 ; extra == 'test'
Requires-Dist: pytest >=6.2 ; extra == 'test'
Requires-Dist: pytest-console-scripts >=1.3 ; extra == 'test'
Requires-Dist: pytest-cov >=3 ; extra == 'test'
Requires-Dist: pytest-html >=3 ; extra == 'test'
Requires-Dist: pytest-xdist >=3.0.2 ; extra == 'test'
Requires-Dist: matplotlib ==3.6.* ; extra == 'test'
Requires-Dist: seaborn ==0.12.* ; extra == 'test'

Synthesis Workflow
==================

This project contains several workflows used for neuron synthesis and the validation of this process.
It is divided into two packages:

* **synthesis-workflow**, which contains the workflow tasks and tools.
* **MorphVal**, which is a library used for morphology validation and can be used as a standalone.


Installation
------------
To install:

.. code::

    pip install synthesis-workflow


Usage
-----

Synthesis workflow
~~~~~~~~~~~~~~~~~~

The usual command is the following:

.. code::

    synthesis_workflow <workflow>

You can get help and complete parameter description with the following commands:

.. code::

    synthesis_workflow --help
    synthesis_workflow <workflow> --help

You can also run a complete ``luigi`` command in order to fine-control task parameters:

.. code::

    luigi --module synthesis_workflow.tasks.workflows --help
    luigi --module synthesis_workflow.tasks.workflows <workflow> --help
    luigi --module synthesis_workflow.tasks.workflows <workflow> [specific arguments]

.. note::

	The ``synthesis_workflow`` command (or the complete ``luigi`` command) must be
	executed from a directory containing a ``luigi.cfg`` file.
	A simple example of such file is given in the ``examples`` directory.

Morphology validation
~~~~~~~~~~~~~~~~~~~~~

The usual command is the following:

.. code::

    morph_validation -t <path to reference data> -r <path to test data> -o <output path> -c <YAML config file> --bio-compare

You can get help and complete parameter description with the following command:

.. code::

    morph_validation --help

Funding & Acknowledgment
~~~~~~~~~~~~~~~~~~~~~~~~

The development of this software was supported by funding to the Blue Brain Project,
a research center of the École polytechnique fédérale de Lausanne (EPFL),
from the Swiss government's ETH Board of the Swiss Federal Institutes of Technology.

Copyright (c) 2022-2024 Blue Brain Project/EPFL
