"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import finetunedmodelresponse as components_finetunedmodelresponse
from typing import List, Optional


@dataclasses.dataclass
class GetFineTunedModelsRequest:
    model_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'model_id', 'style': 'form', 'explode': True }})
    task: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'task', 'style': 'form', 'explode': True }})
    



@dataclasses.dataclass
class GetFineTunedModelsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    classes: Optional[List[components_finetunedmodelresponse.FineTunedModelResponse]] = dataclasses.field(default=None)
    r"""OK"""
    

