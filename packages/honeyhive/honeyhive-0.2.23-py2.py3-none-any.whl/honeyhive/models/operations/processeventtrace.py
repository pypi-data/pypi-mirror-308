"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import event as components_event
from dataclasses_json import Undefined, dataclass_json
from honeyhive import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessEventTraceRequestBody:
    logs: Optional[List[components_event.Event]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logs'), 'exclude': lambda f: f is None }})
    r"""Please refer to the events POST docs for required fields"""
    



@dataclasses.dataclass
class ProcessEventTraceRequest:
    session_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'session_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the session to which this event trace belongs"""
    request_body: ProcessEventTraceRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessEventTraceResponseBody:
    r"""Successfully processed the event traces"""
    result: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    



@dataclasses.dataclass
class ProcessEventTraceResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: Optional[ProcessEventTraceResponseBody] = dataclasses.field(default=None)
    r"""Successfully processed the event traces"""
    

