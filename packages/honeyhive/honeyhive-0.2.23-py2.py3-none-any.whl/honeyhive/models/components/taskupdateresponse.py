"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from honeyhive import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskUpdateResponse:
    acknowledged: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acknowledged'), 'exclude': lambda f: f is None }})
    r"""Boolean flag representing if the update operation was successful"""
    matched_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchedCount'), 'exclude': lambda f: f is None }})
    r"""Number of modified tasks"""
    modified_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modifiedCount'), 'exclude': lambda f: f is None }})
    r"""Number of modified tasks"""
    upserted_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upsertedCount'), 'exclude': lambda f: f is None }})
    r"""Number of upserted tasks"""
    upserted_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upsertedId') }})
    r"""The upserted ID of the task, if id has been changed"""
    

