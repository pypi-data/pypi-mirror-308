"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from honeyhive import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TraceEvent:
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the event."""
    ph: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ph') }})
    r"""The phase of the event."""
    pid: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pid') }})
    r"""The process ID."""
    tid: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tid') }})
    r"""The thread ID."""
    ts: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ts') }})
    r"""The timestamp of the event in microseconds."""
    args: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args'), 'exclude': lambda f: f is None }})
    r"""Arguments associated with the event."""
    cat: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cat'), 'exclude': lambda f: f is None }})
    r"""The category of the event."""
    

