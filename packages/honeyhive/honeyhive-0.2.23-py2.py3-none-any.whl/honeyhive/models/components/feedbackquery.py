"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from honeyhive import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FeedbackQuery:
    r"""The request object for providing feedback"""
    generation_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generation_id') }})
    r"""The ID of the generation for which feedback is being submitted"""
    task: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('task') }})
    r"""The task for which the feedback is being submitted"""
    feedback_json: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedback_json'), 'exclude': lambda f: f is None }})
    r"""The feedback JSON with one or many feedback items"""
    ground_truth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ground_truth'), 'exclude': lambda f: f is None }})
    r"""The ground truth for the generation"""
    

