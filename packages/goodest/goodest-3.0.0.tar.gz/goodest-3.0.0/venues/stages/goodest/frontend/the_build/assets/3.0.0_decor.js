import{s as A}from"./3.0.0_decor14.js";import{_ as g,v as y,r as n,o as v,f as x,w as m,a as e,n as w,b as s,g as d,Y as k,C,p as E,j as D,y as F,z}from"./3.0.0_index.js";import{g as S}from"./3.0.0_decor16.js";import{s as T}from"./3.0.0_as_string.js";const N={components:{s_button:y},props:["address"],data(){return{show_copied_display:!1,show_copied_opacity:!1,show_copied_display:null,show_copied_opacity:null}},methods:{after_copied(){const t=this;clearTimeout(this.show_copied_display),clearTimeout(this.show_copied_opacity),t.show_copied_display=!1,t.show_copied_opacity=!1,t.show_copied_display=!0,this.show_copied_display=setTimeout(()=>{t.show_copied_opacity=!0},300),this.show_copied_opacity=setTimeout(()=>{t.show_copied_opacity=!1},1e3),this.show_copied_display=setTimeout(()=>{t.show_copied_display=!1},2e3)},save_address(){const t=this;console.log("save address");const c=this.address;navigator.clipboard&&navigator.clipboard.writeText(c).then(()=>{t.after_copied()}).catch(_=>{console.error("Failed to copy text: ",_)})}}},$={style:{position:"relative",width:"100px"}};function q(t,c,_,B,p,b){const o=n("s_button"),h=n("lounge");return v(),x(h,null,{default:m(({palette:a,terrain:f,cart:u})=>[e("div",$,[e("p",{style:w({display:p.show_copied_display?"block":"none",opacity:p.show_copied_opacity?1:0,position:"absolute",top:"-20px",left:"10px",padding:"5px 10px",borderRadius:"8px",transition:"opacity 1s",background:a[1],color:a[2]})}," copied ",4),s(o,{ref:"button",pressable:!0,boundaries:"3px 12px 3px",clicked:this.save_address,styles:{inside:{}}},{default:m(()=>[d("copy")]),_:1},8,["clicked"])])]),_:1})}const l=g(N,[["render",q]]),j={components:{RouterLink:k,s_outer_link:C,s_input:A,s_button:y,s_line:E,g_table:S},data(){return{correspondance:""}},methods:{sort_as_strings:T,send(){},rows(){return[{1:"Aptos",2:"A85C2BEDA0B9E3BF8CF0BBB945C9B0086BECB2CFDBB3F81841D7DBE8ABA4679D",3:{component:l,props:{address:"A85C2BEDA0B9E3BF8CF0BBB945C9B0086BECB2CFDBB3F81841D7DBE8ABA4679D"}}},{1:"Ethereum",2:"9D5D9559A43080d3F478d7e76dB057b57992b46C",3:{component:l,props:{address:"9D5D9559A43080d3F478d7e76dB057b57992b46C"}}},{1:"Polkadot",2:"1wr7RE273GzJDXEQqF28MMWBEsLQSrNvpQCL6B33emuSgNQ",3:{component:l,props:{address:"1wr7RE273GzJDXEQqF28MMWBEsLQSrNvpQCL6B33emuSgNQ"}}},{1:"Cardano",2:"addr1qy0ula9c8tf5rpu9m3nhnvx8md7vd2eg6snusj8fzycl9uxlaftgt2lccp8crtlzklrkprfp2g3ft77s32gdh6jpgpyqnqhr20",3:{component:l,props:{address:"addr1qy0ula9c8tf5rpu9m3nhnvx8md7vd2eg6snusj8fzycl9uxlaftgt2lccp8crtlzklrkprfp2g3ft77s32gdh6jpgpyqnqhr20"}}}]}},mounted(){}};const Q=j,i=t=>(F("data-v-95529b17"),t=t(),z(),t),V={ref:"crate-script"},W=i(()=>e("div",{style:{maxWidth:"500px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},[e("h1",null,"Thanks for visiting!"),e("p",null,"Correspondance can be sent to any of these addresses.")],-1)),L={ref:"crate",style:{margin:"0 auto",textAlign:"left"}},M=i(()=>e("h2",{style:{textAlign:"center"}},"Addresses",-1)),I=i(()=>e("div",{style:{maxWidth:"500px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},[e("h1",null,"Affiliations"),e("p",null,"This site is an Amazon affiliate.")],-1)),R={style:{maxWidth:"500px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},G=i(()=>e("h1",null,"Source",-1)),J=i(()=>e("div",{style:{maxWidth:"800px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},[e("h1",null,"Joules"),e("div",{style:{textAlign:"left"}},[e("div",{style:{height:"0.2cm"}}),e("p",null,[d("This platform transforms "),e("b",null,"eletrical"),d(" joules into "),e("b",null,"heat"),d(" joules. Those eletrical joules might have been transformed from fossil fuels. Fossils fuel are the transform of: organism(s) + heat + pressure.")]),e("div",{style:{height:"0.2cm"}}),e("p",null,"Traditionally the fossil fuel transform process for petroleum and coal has required maybe 1e6+ earth orbits. Fossil fuels are very scarce. Fossil fuels might be the remains of ancient animals that have passed on, and thus are non-vegan forms of energy."),e("div",{style:{height:"0.2cm"}}),e("p",null,"Shifting entirely to vegan electrical energy from transforms like photovoltaics, wind, hydro, etc. is on the itinerary.")])],-1));function X(t,c,_,B,p,b){const o=n("s_line"),h=n("g_table"),a=n("s_outer_link"),f=n("lounge");return v(),x(f,null,{default:m(({palette:u,terrain:r,cart:P})=>[e("main",{style:w({color:u[2],padding:r.width<=r.mobile_nav_width?".1in":".5in",transform:r.width<=r.mobile_nav_width?"scale(.9)":""})},[e("div",V,null,512),W,s(o,{style:{margin:"20px 0"}}),e("div",L,[M,s(h,{style:{margin:"0 auto"},theme:{palette:{text:u[2]}},columns:[{place:"1",name:"currency",sorting:t.sort_as_strings},{place:"2",name:"address",sorting:t.sort_as_strings}],rows:t.rows()},null,8,["theme","columns","rows"])],512),s(o,{style:{margin:"20px 0"}}),I,s(o,{style:{margin:"20px 0"}}),e("div",R,[G,s(a,{address:"https://gitlab.com/status600/treasures/goodest.1"})]),s(o,{style:{margin:"20px 0"}}),J,s(o,{style:{margin:"20px 0"}}),D("",!0)],4)]),_:1})}const Z=g(Q,[["render",X],["__scopeId","data-v-95529b17"]]);export{Z as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
