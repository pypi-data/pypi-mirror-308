import{u as m,_ as w,o as s,c as a,t as v,a1 as j,a2 as g,a3 as f,K as c,r as A,a as l,F as y,x as b,n,b as C,w as B,f as u,E as h,j as i}from"./3.0.0_index.js";function k(e,r){return!!Object.prototype.hasOwnProperty.call(e,r)}function O(){try{let e;if(arguments.length===3?e=m(arguments[0],arguments[1],arguments[2]):arguments.length===2?e=m(arguments[0],arguments[1],{}):arguments.length===1&&(e=arguments[0]),typeof e=="object"&&Object.keys(e).length>=0&&Array.isArray(e)==!1)return e;throw new Error("A dictionary could not be furnished from the preceeding arguments.")}catch{}return console.warn("A dictionary could not be furnished from these arguments",arguments),{}}const S={props:{the_string:String}};function D(e,r,o,p,d,x){return s(),a("div",null,v(o.the_string),1)}const _=w(S,[["render",D]]),E={components:{g_button:j,string_data:_},props:{columns:Array,rows:Array,theme:Object},watch:{theme(){const{styles:e,parsed_theme:r}=this.retrieve_styles();this.styles=e,this.parsed_theme=r},rows(){this.parsed_rows=this.rows}},data(){const{styles:e,parsed_theme:r}=this.retrieve_styles();return{styles:e,parsed_rows:this.rows,parsed_theme:r,column_sorted:[]}},methods:{retrieve_styles(){const e=g({},{palette:{text:"black",lines:f("black").alpha(.2)}},this.theme);return{parsed_theme:e,styles:{table_row:{position:"relative",border:"1px solid "+f(e.palette.text).alpha(.2),wordBreak:"break-all",padding:"2px",verticalAlign:"middle",paddingLeft:"10px"}}}},has_field:k,furnish_dict:O,parse_table_data(e){try{if(typeof e=="string")return c(_,{the_string:e});if(typeof e=="number")return c(_,{the_string:e.toString()});if(k(e,"component")){const o=g({},e.props);var r=e.component;return c(r,o)}}catch{}return c(_,{the_string:""})},column_clicked(e){console.log("column_clicked");const r=e.place,o=e.sorting,p=this.parsed_rows;let d="forward";this.column_sorted[0]===r&&this.column_sorted[1]==="forward"&&(d="backward"),typeof o=="function"?this.parsed_rows=o({rows:p,place:r,direction:d}):this.parsed_rows=p,this.column_sorted=[r,d]}},mounted(){}},N=E,R={style:{position:"relative",borderRadius:"8px",overflow:"hidden"}},V={style:{position:"relative",border:0,borderRadius:"4px"}},z={style:{display:"flex",alignItems:"center"}},F={style:{display:"flex",flexDirection:"column",padding:"0 8px"}},I=l("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"m15 11.25-3-3m0 0-3 3m3-3v7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"},null,-1),L=[I];function H(e,r,o,p,d,x){const $=A("g_button");return s(),a("div",R,[l("table",{style:n({borderCollapse:"separate",borderCollapse:"collapse",borderSpacing:"2px",color:e.parsed_theme.palette.text,width:"100%"})},[l("thead",V,[(s(!0),a(y,null,b(e.columns,t=>(s(),a("th",{style:n(Object.assign({},{position:"relative",border:0,borderRadius:"4px",padding:"4px",minHeight:"1px"},e.furnish_dict(t,["styles","th"],{})))},[C($,{style:{position:"relative",top:0,left:0,width:"100%",height:"100%",alignItems:"center",cursor:"pointer",border:0,boxSizing:"border-box",background:"none"},pressable:!0,styles:{outside:{},inside:{}},outline_width:"1px",outline_color:e.parsed_theme.palette.text,transition_duration:".3s",clicked:()=>{e.column_clicked(t)}},{default:B(()=>[l("div",z,[l("p",{style:n({textAlign:"center",color:e.parsed_theme.palette.text})},v(t.name),5),l("div",F,[(s(),a("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor",class:"w-6 h-6",style:n({stroke:e.parsed_theme.palette.text,height:"25px",opacity:e.column_sorted[0]===t.place?1:0,transform:e.column_sorted[1]==="backward"?"rotate(180deg)":"rotate(0deg)",transition:"transform .3s, opacity .3s"})},L,4))])])]),_:2},1032,["outline_color","clicked"])],4))),256))]),l("tbody",null,[(s(!0),a(y,null,b(e.parsed_rows,(t,K)=>(s(),a("tr",null,[e.has_field(t,"1")?(s(),a("td",{key:0,style:n(Object.assign({},e.styles.table_row))},[e.has_field(t,"1")?(s(),u(h(e.parse_table_data(t[1])),{key:0})):i("",!0)],4)):i("",!0),e.has_field(t,"2")?(s(),a("td",{key:1,style:n(e.styles.table_row)},[e.has_field(t,"2")?(s(),u(h(e.parse_table_data(t[2])),{key:0})):i("",!0)],4)):i("",!0),e.has_field(t,"3")?(s(),a("td",{key:2,style:n(e.styles.table_row)},[e.has_field(t,"3")?(s(),u(h(e.parse_table_data(t[3])),{key:0})):i("",!0)],4)):i("",!0),e.has_field(t,"4")?(s(),a("td",{key:3,style:n(e.styles.table_row)},[e.has_field(t,"4")?(s(),u(h(e.parse_table_data(t[4])),{key:0})):i("",!0)],4)):i("",!0)]))),256))])],4)])}const P=w(N,[["render",H]]);export{O as f,P as g,k as h};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
