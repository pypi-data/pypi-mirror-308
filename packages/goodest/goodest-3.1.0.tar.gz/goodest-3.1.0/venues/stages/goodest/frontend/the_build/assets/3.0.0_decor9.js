import{s as S}from"./3.0.0_decor14.js";import{v as K,_ as f,r as n,o as y,f as g,w as i,a as o,n as c,b as a,t as h,g as A,y as x,z as m,s as D}from"./3.0.0_index.js";const u={W:"0",E:"1",R:"2",T:"3",S:"4",D:"5",F:"6",G:"7",Y:"8",U:"9",I:"A",O:"B",H:"C",J:"D",K:"E",L:"F"},E={components:{s_input:S,s_button:K},props:{inks:{type:Object,default(){return{border:"blue",text:"blue"}}},download:Function},data(){return{name:"",seed_hex:"",seed_hex_info:"0 of 114"}},methods:{keydown(e){if(!(e.isComposing||e.keyCflavor===229)){var t=e.key.toUpperCase();this.seed_hex.length<114&&typeof u[t]=="string"&&(e.preventDefault(),e.stopPropagation())}},keyup(e){if(!(e.isComposing||e.keyCflavor===229)){this.$refs.seed,this.$refs.seed_hex_count,this.$refs.build_showy_key_button,e.ctrlKey,e.shiftKey,e.metaKey;var t=e.key.toUpperCase();this.seed_hex.length<114&&typeof u[t]=="string"&&(e.preventDefault(),e.stopPropagation(),this.seed_hex+=u[t],this.seed_hex_info=this.seed_hex.length+" of 114")}},async is_on(){await lap({envelope:{name:"is on",fields:{}}})}}};const V=E,b=e=>(x("data-v-970f7a23"),e=e(),m(),e),j={style:{margin:"10px 0"}},z=b(()=>o("h2",null,"name",-1)),B=b(()=>o("div",{style:{padding:"10px 0"}},[o("h2",null,"seed"),o("p",null,"Keyboard keys W,E,R,T,S,D,F,G,Y,U,I,O,H,J,K,L adapt into hexadecimal values."),o("p",null,"This is not a regular text prompt. It can't delete or backspace."),o("p",null,"A refresh is necessary for redos.")],-1)),T={style:{textAlign:"right"}};function U(e,t,k,w,$,v){const l=n("s_input"),p=n("s_button"),_=n("lounge");return y(),g(_,null,{default:i(({palette:s,style:C,terrain:I})=>[o("div",{style:c({color:"white",color:e.inks.text})},[o("section",j,[z,a(l,{modelValue:e.name,"onUpdate:modelValue":t[0]||(t[0]=d=>e.name=d),placeholder:""},null,8,["modelValue"])]),B,o("div",{tabindex:"0",ref:"seed",seed:"",onKeydown:t[1]||(t[1]=(...d)=>e.keydown&&e.keydown(...d)),onKeyup:t[2]||(t[2]=(...d)=>e.keyup&&e.keyup(...d)),style:c(Object.assign({},s.button,{display:"block",boxSizing:"border-box",borderRadius:"6px",outline:0,minHeight:"150px",width:"100%",padding:"8px 7px 8px 2px",transition:["background "+s.change_duration,"color "+s.change_duration,"border .3s","outline .1s"].join(", "),"font-family":"monospace, sans-serif",fontSize:"2rem",fontWeight:700,textIndent:"5px","letter-spacing":"3px","word-wrap":"break-word",color:e.inks.text,cursor:"text"}))},h(e.seed_hex),37),o("div",{tabindex:"0",ref:"seed-hex-count",style:c([{color:e.inks.text},{"margin-top":"4px","box-sizing":"border-box","word-wrap":"break-word",width:"100%","min-height":"50px",padding:"10px","border-radius":"6px"}])},h(e.seed_hex_info)+" bytes ",5)],4),o("div",T,[a(p,{ref:"button",pressable:e.pressable,boundaries:"9px 32px 9px",clicked:e.download,styles:{inside:{}}},{default:i(()=>[A("download")]),_:1},8,["pressable","clicked"])])]),_:1})}const F=f(V,[["render",U],["__scopeId","data-v-970f7a23"]]),O={components:{seed_chooser:F,s_panel:D},methods:{download(){console.log("download")}}};const H=O,r=e=>(x("data-v-7205534f"),e=e(),m(),e),N={style:{padding:"1in .5in",margin:"0 auto"}},R=r(()=>o("div",{style:{textAlign:"center",paddingBottom:"1in"}},[o("h1",null,"account")],-1)),W={style:{display:"flex",width:"100%"}},G=r(()=>o("h2",{style:{textAlign:"center"}},"create key",-1)),J=r(()=>o("p",{style:{textAlign:"center"}},"This prompt is for creating an EEC 448 Elliptic Key.",-1)),L=r(()=>o("div",{style:{display:"flex",width:"50%",justifyContent:"center"}},[o("h2",null,"sign")],-1));function P(e,t,k,w,$,v){const l=n("seed_chooser"),p=n("s_panel"),_=n("lounge");return y(),g(_,null,{default:i(({palette:s,terrain:C,cart:I})=>[o("div",N,[R,o("div",W,[a(p,{style:{display:"flex",width:"50%",justifyContent:"center"}},{default:i(()=>[G,J,a(l,{download:e.download,inks:{text:s[2],borders:s[2]}},null,8,["download","inks"])]),_:2},1024),L])])]),_:1})}const M=f(H,[["render",P],["__scopeId","data-v-7205534f"]]);export{M as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
