"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .streamedchatchoice import StreamedChatChoice, StreamedChatChoiceTypedDict
from friendli.types import BaseModel
from friendli.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import List, Literal
from typing_extensions import Annotated, TypedDict


class StreamedToolAssistedChatTokenDataTypedDict(TypedDict):
    choices: List[StreamedChatChoiceTypedDict]
    created: int
    r"""The Unix timestamp (in seconds) for when the token sampled."""


class StreamedToolAssistedChatTokenData(BaseModel):
    choices: List[StreamedChatChoice]

    created: int
    r"""The Unix timestamp (in seconds) for when the token sampled."""


class StreamedToolAssistedChatTokenTypedDict(TypedDict):
    data: StreamedToolAssistedChatTokenDataTypedDict
    event: Literal["message"]


class StreamedToolAssistedChatToken(BaseModel):
    data: StreamedToolAssistedChatTokenData

    EVENT: Annotated[
        Annotated[Literal["message"], AfterValidator(validate_const("message"))],
        pydantic.Field(alias="event"),
    ] = "message"
